/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ErrorResponse,
  PostV1InvoicesRequest,
  SalesDataInvoiceInterface,
  SalesDataInvoiceSearchResultInterface,
} from '../models';
import {
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
    PostV1InvoicesRequestFromJSON,
    PostV1InvoicesRequestToJSON,
    SalesDataInvoiceInterfaceFromJSON,
    SalesDataInvoiceInterfaceToJSON,
    SalesDataInvoiceSearchResultInterfaceFromJSON,
    SalesDataInvoiceSearchResultInterfaceToJSON,
} from '../models';

export interface GetV1InvoicesRequest {
    searchCriteriaFilterGroups0Filters0Field?: string;
    searchCriteriaFilterGroups0Filters0Value?: string;
    searchCriteriaFilterGroups0Filters0ConditionType?: string;
    searchCriteriaSortOrders0Field?: string;
    searchCriteriaSortOrders0Direction?: string;
    searchCriteriaPageSize?: number;
    searchCriteriaCurrentPage?: number;
}

export interface GetV1InvoicesIdRequest {
    id: number;
}

export interface PostV1InvoicesOperationRequest {
    postV1InvoicesRequest?: PostV1InvoicesRequest;
}

/**
 * 
 */
export class SalesInvoiceRepositoryV1Api extends runtime.BaseAPI {

    /**
     * Lists invoices that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#InvoiceRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.
     */
    async getV1InvoicesRaw(requestParameters: GetV1InvoicesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SalesDataInvoiceSearchResultInterface>> {
        const queryParameters: any = {};

        if (requestParameters.searchCriteriaFilterGroups0Filters0Field !== undefined) {
            queryParameters['searchCriteria[filterGroups][0][filters][0][field]'] = requestParameters.searchCriteriaFilterGroups0Filters0Field;
        }

        if (requestParameters.searchCriteriaFilterGroups0Filters0Value !== undefined) {
            queryParameters['searchCriteria[filterGroups][0][filters][0][value]'] = requestParameters.searchCriteriaFilterGroups0Filters0Value;
        }

        if (requestParameters.searchCriteriaFilterGroups0Filters0ConditionType !== undefined) {
            queryParameters['searchCriteria[filterGroups][0][filters][0][conditionType]'] = requestParameters.searchCriteriaFilterGroups0Filters0ConditionType;
        }

        if (requestParameters.searchCriteriaSortOrders0Field !== undefined) {
            queryParameters['searchCriteria[sortOrders][0][field]'] = requestParameters.searchCriteriaSortOrders0Field;
        }

        if (requestParameters.searchCriteriaSortOrders0Direction !== undefined) {
            queryParameters['searchCriteria[sortOrders][0][direction]'] = requestParameters.searchCriteriaSortOrders0Direction;
        }

        if (requestParameters.searchCriteriaPageSize !== undefined) {
            queryParameters['searchCriteria[pageSize]'] = requestParameters.searchCriteriaPageSize;
        }

        if (requestParameters.searchCriteriaCurrentPage !== undefined) {
            queryParameters['searchCriteria[currentPage]'] = requestParameters.searchCriteriaCurrentPage;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/V1/invoices`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SalesDataInvoiceSearchResultInterfaceFromJSON(jsonValue));
    }

    /**
     * Lists invoices that match specified search criteria. This call returns an array of objects, but detailed information about each object’s attributes might not be included. See https://devdocs.magento.com/codelinks/attributes.html#InvoiceRepositoryInterface to determine which call to use to get detailed information about all attributes for an object.
     */
    async getV1Invoices(requestParameters: GetV1InvoicesRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SalesDataInvoiceSearchResultInterface> {
        const response = await this.getV1InvoicesRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Loads a specified invoice.
     */
    async getV1InvoicesIdRaw(requestParameters: GetV1InvoicesIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SalesDataInvoiceInterface>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling getV1InvoicesId.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/V1/invoices/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SalesDataInvoiceInterfaceFromJSON(jsonValue));
    }

    /**
     * Loads a specified invoice.
     */
    async getV1InvoicesId(requestParameters: GetV1InvoicesIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SalesDataInvoiceInterface> {
        const response = await this.getV1InvoicesIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Performs persist operations for a specified invoice.
     */
    async postV1InvoicesRaw(requestParameters: PostV1InvoicesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SalesDataInvoiceInterface>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/V1/invoices/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PostV1InvoicesRequestToJSON(requestParameters.postV1InvoicesRequest),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SalesDataInvoiceInterfaceFromJSON(jsonValue));
    }

    /**
     * Performs persist operations for a specified invoice.
     */
    async postV1Invoices(requestParameters: PostV1InvoicesOperationRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SalesDataInvoiceInterface> {
        const response = await this.postV1InvoicesRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
