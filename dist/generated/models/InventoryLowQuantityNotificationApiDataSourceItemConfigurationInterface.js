"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterfaceToJSON = exports.InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterfaceFromJSONTyped = exports.InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterfaceFromJSON = exports.instanceOfInventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface = void 0;
var runtime_1 = require("../runtime");
/**
 * Check if a given object implements the InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface interface.
 */
function instanceOfInventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfInventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface = instanceOfInventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface;
function InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterfaceFromJSON(json) {
    return InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterfaceFromJSONTyped(json, false);
}
exports.InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterfaceFromJSON = InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterfaceFromJSON;
function InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'sourceCode': !(0, runtime_1.exists)(json, 'source_code') ? undefined : json['source_code'],
        'notifyStockQty': !(0, runtime_1.exists)(json, 'notify_stock_qty') ? undefined : json['notify_stock_qty'],
        'sku': !(0, runtime_1.exists)(json, 'sku') ? undefined : json['sku'],
        'extensionAttributes': !(0, runtime_1.exists)(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}
exports.InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterfaceFromJSONTyped = InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterfaceFromJSONTyped;
function InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'source_code': value.sourceCode,
        'notify_stock_qty': value.notifyStockQty,
        'sku': value.sku,
        'extension_attributes': value.extensionAttributes,
    };
}
exports.InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterfaceToJSON = InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterfaceToJSON;
//# sourceMappingURL=InventoryLowQuantityNotificationApiDataSourceItemConfigurationInterface.js.map