/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Shipment item interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package. A product is an item in a shipment.
 * @export
 * @interface SalesDataShipmentItemInterface
 */
export interface SalesDataShipmentItemInterface {
    /**
     * Additional data.
     * @type {string}
     * @memberof SalesDataShipmentItemInterface
     */
    additionalData?: string;
    /**
     * Description.
     * @type {string}
     * @memberof SalesDataShipmentItemInterface
     */
    description?: string;
    /**
     * Shipment item ID.
     * @type {number}
     * @memberof SalesDataShipmentItemInterface
     */
    entityId?: number;
    /**
     * Name.
     * @type {string}
     * @memberof SalesDataShipmentItemInterface
     */
    name?: string;
    /**
     * Parent ID.
     * @type {number}
     * @memberof SalesDataShipmentItemInterface
     */
    parentId?: number;
    /**
     * Price.
     * @type {number}
     * @memberof SalesDataShipmentItemInterface
     */
    price?: number;
    /**
     * Product ID.
     * @type {number}
     * @memberof SalesDataShipmentItemInterface
     */
    productId?: number;
    /**
     * Row total.
     * @type {number}
     * @memberof SalesDataShipmentItemInterface
     */
    rowTotal?: number;
    /**
     * SKU.
     * @type {string}
     * @memberof SalesDataShipmentItemInterface
     */
    sku?: string;
    /**
     * Weight.
     * @type {number}
     * @memberof SalesDataShipmentItemInterface
     */
    weight?: number;
    /**
     * ExtensionInterface class for @see \Magento\Sales\Api\Data\ShipmentItemInterface
     * @type {object}
     * @memberof SalesDataShipmentItemInterface
     */
    extensionAttributes?: object;
    /**
     * Order item ID.
     * @type {number}
     * @memberof SalesDataShipmentItemInterface
     */
    orderItemId: number;
    /**
     * Quantity.
     * @type {number}
     * @memberof SalesDataShipmentItemInterface
     */
    qty: number;
}

/**
 * Check if a given object implements the SalesDataShipmentItemInterface interface.
 */
export function instanceOfSalesDataShipmentItemInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "orderItemId" in value;
    isInstance = isInstance && "qty" in value;

    return isInstance;
}

export function SalesDataShipmentItemInterfaceFromJSON(json: any): SalesDataShipmentItemInterface {
    return SalesDataShipmentItemInterfaceFromJSONTyped(json, false);
}

export function SalesDataShipmentItemInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): SalesDataShipmentItemInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'additionalData': !exists(json, 'additional_data') ? undefined : json['additional_data'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'entityId': !exists(json, 'entity_id') ? undefined : json['entity_id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'parentId': !exists(json, 'parent_id') ? undefined : json['parent_id'],
        'price': !exists(json, 'price') ? undefined : json['price'],
        'productId': !exists(json, 'product_id') ? undefined : json['product_id'],
        'rowTotal': !exists(json, 'row_total') ? undefined : json['row_total'],
        'sku': !exists(json, 'sku') ? undefined : json['sku'],
        'weight': !exists(json, 'weight') ? undefined : json['weight'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
        'orderItemId': json['order_item_id'],
        'qty': json['qty'],
    };
}

export function SalesDataShipmentItemInterfaceToJSON(value?: SalesDataShipmentItemInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'additional_data': value.additionalData,
        'description': value.description,
        'entity_id': value.entityId,
        'name': value.name,
        'parent_id': value.parentId,
        'price': value.price,
        'product_id': value.productId,
        'row_total': value.rowTotal,
        'sku': value.sku,
        'weight': value.weight,
        'extension_attributes': value.extensionAttributes,
        'order_item_id': value.orderItemId,
        'qty': value.qty,
    };
}

