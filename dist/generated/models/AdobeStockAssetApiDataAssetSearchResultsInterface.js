"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdobeStockAssetApiDataAssetSearchResultsInterfaceToJSON = exports.AdobeStockAssetApiDataAssetSearchResultsInterfaceFromJSONTyped = exports.AdobeStockAssetApiDataAssetSearchResultsInterfaceFromJSON = exports.instanceOfAdobeStockAssetApiDataAssetSearchResultsInterface = void 0;
var AdobeStockAssetApiDataAssetInterface_1 = require("./AdobeStockAssetApiDataAssetInterface");
var FrameworkSearchCriteriaInterface_1 = require("./FrameworkSearchCriteriaInterface");
/**
 * Check if a given object implements the AdobeStockAssetApiDataAssetSearchResultsInterface interface.
 */
function instanceOfAdobeStockAssetApiDataAssetSearchResultsInterface(value) {
    var isInstance = true;
    isInstance = isInstance && "items" in value;
    isInstance = isInstance && "searchCriteria" in value;
    isInstance = isInstance && "totalCount" in value;
    return isInstance;
}
exports.instanceOfAdobeStockAssetApiDataAssetSearchResultsInterface = instanceOfAdobeStockAssetApiDataAssetSearchResultsInterface;
function AdobeStockAssetApiDataAssetSearchResultsInterfaceFromJSON(json) {
    return AdobeStockAssetApiDataAssetSearchResultsInterfaceFromJSONTyped(json, false);
}
exports.AdobeStockAssetApiDataAssetSearchResultsInterfaceFromJSON = AdobeStockAssetApiDataAssetSearchResultsInterfaceFromJSON;
function AdobeStockAssetApiDataAssetSearchResultsInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'items': (json['items'].map(AdobeStockAssetApiDataAssetInterface_1.AdobeStockAssetApiDataAssetInterfaceFromJSON)),
        'searchCriteria': (0, FrameworkSearchCriteriaInterface_1.FrameworkSearchCriteriaInterfaceFromJSON)(json['search_criteria']),
        'totalCount': json['total_count'],
    };
}
exports.AdobeStockAssetApiDataAssetSearchResultsInterfaceFromJSONTyped = AdobeStockAssetApiDataAssetSearchResultsInterfaceFromJSONTyped;
function AdobeStockAssetApiDataAssetSearchResultsInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'items': (value.items.map(AdobeStockAssetApiDataAssetInterface_1.AdobeStockAssetApiDataAssetInterfaceToJSON)),
        'search_criteria': (0, FrameworkSearchCriteriaInterface_1.FrameworkSearchCriteriaInterfaceToJSON)(value.searchCriteria),
        'total_count': value.totalCount,
    };
}
exports.AdobeStockAssetApiDataAssetSearchResultsInterfaceToJSON = AdobeStockAssetApiDataAssetSearchResultsInterfaceToJSON;
//# sourceMappingURL=AdobeStockAssetApiDataAssetSearchResultsInterface.js.map