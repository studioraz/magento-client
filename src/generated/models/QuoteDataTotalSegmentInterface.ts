/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { QuoteDataTotalSegmentExtensionInterface } from './QuoteDataTotalSegmentExtensionInterface';
import {
    QuoteDataTotalSegmentExtensionInterfaceFromJSON,
    QuoteDataTotalSegmentExtensionInterfaceFromJSONTyped,
    QuoteDataTotalSegmentExtensionInterfaceToJSON,
} from './QuoteDataTotalSegmentExtensionInterface';

/**
 * Interface TotalsInterface
 * @export
 * @interface QuoteDataTotalSegmentInterface
 */
export interface QuoteDataTotalSegmentInterface {
    /**
     * Code
     * @type {string}
     * @memberof QuoteDataTotalSegmentInterface
     */
    code: string;
    /**
     * Total title
     * @type {string}
     * @memberof QuoteDataTotalSegmentInterface
     */
    title?: string;
    /**
     * Total value
     * @type {number}
     * @memberof QuoteDataTotalSegmentInterface
     */
    value: number;
    /**
     * Display area code.
     * @type {string}
     * @memberof QuoteDataTotalSegmentInterface
     */
    area?: string;
    /**
     * 
     * @type {QuoteDataTotalSegmentExtensionInterface}
     * @memberof QuoteDataTotalSegmentInterface
     */
    extensionAttributes?: QuoteDataTotalSegmentExtensionInterface;
}

/**
 * Check if a given object implements the QuoteDataTotalSegmentInterface interface.
 */
export function instanceOfQuoteDataTotalSegmentInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "code" in value;
    isInstance = isInstance && "value" in value;

    return isInstance;
}

export function QuoteDataTotalSegmentInterfaceFromJSON(json: any): QuoteDataTotalSegmentInterface {
    return QuoteDataTotalSegmentInterfaceFromJSONTyped(json, false);
}

export function QuoteDataTotalSegmentInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuoteDataTotalSegmentInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': json['code'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'value': json['value'],
        'area': !exists(json, 'area') ? undefined : json['area'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : QuoteDataTotalSegmentExtensionInterfaceFromJSON(json['extension_attributes']),
    };
}

export function QuoteDataTotalSegmentInterfaceToJSON(value?: QuoteDataTotalSegmentInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'title': value.title,
        'value': value.value,
        'area': value.area,
        'extension_attributes': QuoteDataTotalSegmentExtensionInterfaceToJSON(value.extensionAttributes),
    };
}

