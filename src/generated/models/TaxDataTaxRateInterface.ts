/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TaxDataTaxRateTitleInterface } from './TaxDataTaxRateTitleInterface';
import {
    TaxDataTaxRateTitleInterfaceFromJSON,
    TaxDataTaxRateTitleInterfaceFromJSONTyped,
    TaxDataTaxRateTitleInterfaceToJSON,
} from './TaxDataTaxRateTitleInterface';

/**
 * Tax rate interface.
 * @export
 * @interface TaxDataTaxRateInterface
 */
export interface TaxDataTaxRateInterface {
    /**
     * Id
     * @type {number}
     * @memberof TaxDataTaxRateInterface
     */
    id?: number;
    /**
     * Country id
     * @type {string}
     * @memberof TaxDataTaxRateInterface
     */
    taxCountryId: string;
    /**
     * Region id
     * @type {number}
     * @memberof TaxDataTaxRateInterface
     */
    taxRegionId?: number;
    /**
     * Region name
     * @type {string}
     * @memberof TaxDataTaxRateInterface
     */
    regionName?: string;
    /**
     * Postcode
     * @type {string}
     * @memberof TaxDataTaxRateInterface
     */
    taxPostcode?: string;
    /**
     * Zip is range
     * @type {number}
     * @memberof TaxDataTaxRateInterface
     */
    zipIsRange?: number;
    /**
     * Zip range from
     * @type {number}
     * @memberof TaxDataTaxRateInterface
     */
    zipFrom?: number;
    /**
     * Zip range to
     * @type {number}
     * @memberof TaxDataTaxRateInterface
     */
    zipTo?: number;
    /**
     * Tax rate in percentage
     * @type {number}
     * @memberof TaxDataTaxRateInterface
     */
    rate: number;
    /**
     * Tax rate code
     * @type {string}
     * @memberof TaxDataTaxRateInterface
     */
    code: string;
    /**
     * Tax rate titles
     * @type {Array<TaxDataTaxRateTitleInterface>}
     * @memberof TaxDataTaxRateInterface
     */
    titles?: Array<TaxDataTaxRateTitleInterface>;
    /**
     * ExtensionInterface class for @see \Magento\Tax\Api\Data\TaxRateInterface
     * @type {object}
     * @memberof TaxDataTaxRateInterface
     */
    extensionAttributes?: object;
}

/**
 * Check if a given object implements the TaxDataTaxRateInterface interface.
 */
export function instanceOfTaxDataTaxRateInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "taxCountryId" in value;
    isInstance = isInstance && "rate" in value;
    isInstance = isInstance && "code" in value;

    return isInstance;
}

export function TaxDataTaxRateInterfaceFromJSON(json: any): TaxDataTaxRateInterface {
    return TaxDataTaxRateInterfaceFromJSONTyped(json, false);
}

export function TaxDataTaxRateInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaxDataTaxRateInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'taxCountryId': json['tax_country_id'],
        'taxRegionId': !exists(json, 'tax_region_id') ? undefined : json['tax_region_id'],
        'regionName': !exists(json, 'region_name') ? undefined : json['region_name'],
        'taxPostcode': !exists(json, 'tax_postcode') ? undefined : json['tax_postcode'],
        'zipIsRange': !exists(json, 'zip_is_range') ? undefined : json['zip_is_range'],
        'zipFrom': !exists(json, 'zip_from') ? undefined : json['zip_from'],
        'zipTo': !exists(json, 'zip_to') ? undefined : json['zip_to'],
        'rate': json['rate'],
        'code': json['code'],
        'titles': !exists(json, 'titles') ? undefined : ((json['titles'] as Array<any>).map(TaxDataTaxRateTitleInterfaceFromJSON)),
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}

export function TaxDataTaxRateInterfaceToJSON(value?: TaxDataTaxRateInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'tax_country_id': value.taxCountryId,
        'tax_region_id': value.taxRegionId,
        'region_name': value.regionName,
        'tax_postcode': value.taxPostcode,
        'zip_is_range': value.zipIsRange,
        'zip_from': value.zipFrom,
        'zip_to': value.zipTo,
        'rate': value.rate,
        'code': value.code,
        'titles': value.titles === undefined ? undefined : ((value.titles as Array<any>).map(TaxDataTaxRateTitleInterfaceToJSON)),
        'extension_attributes': value.extensionAttributes,
    };
}

