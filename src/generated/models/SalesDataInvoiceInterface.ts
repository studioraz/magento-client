/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SalesDataInvoiceCommentInterface } from './SalesDataInvoiceCommentInterface';
import {
    SalesDataInvoiceCommentInterfaceFromJSON,
    SalesDataInvoiceCommentInterfaceFromJSONTyped,
    SalesDataInvoiceCommentInterfaceToJSON,
} from './SalesDataInvoiceCommentInterface';
import type { SalesDataInvoiceItemInterface } from './SalesDataInvoiceItemInterface';
import {
    SalesDataInvoiceItemInterfaceFromJSON,
    SalesDataInvoiceItemInterfaceFromJSONTyped,
    SalesDataInvoiceItemInterfaceToJSON,
} from './SalesDataInvoiceItemInterface';

/**
 * Invoice interface. An invoice is a record of the receipt of payment for an order.
 * @export
 * @interface SalesDataInvoiceInterface
 */
export interface SalesDataInvoiceInterface {
    /**
     * Base currency code.
     * @type {string}
     * @memberof SalesDataInvoiceInterface
     */
    baseCurrencyCode?: string;
    /**
     * Base discount amount.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    baseDiscountAmount?: number;
    /**
     * Base grand total.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    baseGrandTotal?: number;
    /**
     * Base discount tax compensation amount.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    baseDiscountTaxCompensationAmount?: number;
    /**
     * Base shipping amount.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    baseShippingAmount?: number;
    /**
     * Base shipping discount tax compensation amount.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    baseShippingDiscountTaxCompensationAmnt?: number;
    /**
     * Base shipping including tax.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    baseShippingInclTax?: number;
    /**
     * Base shipping tax amount.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    baseShippingTaxAmount?: number;
    /**
     * Base subtotal.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    baseSubtotal?: number;
    /**
     * Base subtotal including tax.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    baseSubtotalInclTax?: number;
    /**
     * Base tax amount.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    baseTaxAmount?: number;
    /**
     * Base total refunded.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    baseTotalRefunded?: number;
    /**
     * Base-to-global rate.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    baseToGlobalRate?: number;
    /**
     * Base-to-order rate.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    baseToOrderRate?: number;
    /**
     * Billing address ID.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    billingAddressId?: number;
    /**
     * Can void flag value.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    canVoidFlag?: number;
    /**
     * Created-at timestamp.
     * @type {string}
     * @memberof SalesDataInvoiceInterface
     */
    createdAt?: string;
    /**
     * Discount amount.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    discountAmount?: number;
    /**
     * Discount description.
     * @type {string}
     * @memberof SalesDataInvoiceInterface
     */
    discountDescription?: string;
    /**
     * Email-sent flag value.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    emailSent?: number;
    /**
     * Invoice ID.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    entityId?: number;
    /**
     * Global currency code.
     * @type {string}
     * @memberof SalesDataInvoiceInterface
     */
    globalCurrencyCode?: string;
    /**
     * Grand total.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    grandTotal?: number;
    /**
     * Discount tax compensation amount.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    discountTaxCompensationAmount?: number;
    /**
     * Increment ID.
     * @type {string}
     * @memberof SalesDataInvoiceInterface
     */
    incrementId?: string;
    /**
     * Is-used-for-refund flag value.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    isUsedForRefund?: number;
    /**
     * Order currency code.
     * @type {string}
     * @memberof SalesDataInvoiceInterface
     */
    orderCurrencyCode?: string;
    /**
     * Order ID.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    orderId: number;
    /**
     * Shipping address ID.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    shippingAddressId?: number;
    /**
     * Shipping amount.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    shippingAmount?: number;
    /**
     * Shipping discount tax compensation amount.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    shippingDiscountTaxCompensationAmount?: number;
    /**
     * Shipping including tax.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    shippingInclTax?: number;
    /**
     * Shipping tax amount.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    shippingTaxAmount?: number;
    /**
     * State.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    state?: number;
    /**
     * Store currency code.
     * @type {string}
     * @memberof SalesDataInvoiceInterface
     */
    storeCurrencyCode?: string;
    /**
     * Store ID.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    storeId?: number;
    /**
     * Store-to-base rate.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    storeToBaseRate?: number;
    /**
     * Store-to-order rate.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    storeToOrderRate?: number;
    /**
     * Subtotal.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    subtotal?: number;
    /**
     * Subtotal including tax.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    subtotalInclTax?: number;
    /**
     * Tax amount.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    taxAmount?: number;
    /**
     * Total quantity.
     * @type {number}
     * @memberof SalesDataInvoiceInterface
     */
    totalQty: number;
    /**
     * Transaction ID.
     * @type {string}
     * @memberof SalesDataInvoiceInterface
     */
    transactionId?: string;
    /**
     * Updated-at timestamp.
     * @type {string}
     * @memberof SalesDataInvoiceInterface
     */
    updatedAt?: string;
    /**
     * Array of invoice items.
     * @type {Array<SalesDataInvoiceItemInterface>}
     * @memberof SalesDataInvoiceInterface
     */
    items: Array<SalesDataInvoiceItemInterface>;
    /**
     * Array of any invoice comments. Otherwise, null.
     * @type {Array<SalesDataInvoiceCommentInterface>}
     * @memberof SalesDataInvoiceInterface
     */
    comments?: Array<SalesDataInvoiceCommentInterface>;
    /**
     * ExtensionInterface class for @see \Magento\Sales\Api\Data\InvoiceInterface
     * @type {object}
     * @memberof SalesDataInvoiceInterface
     */
    extensionAttributes?: object;
}

/**
 * Check if a given object implements the SalesDataInvoiceInterface interface.
 */
export function instanceOfSalesDataInvoiceInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "orderId" in value;
    isInstance = isInstance && "totalQty" in value;
    isInstance = isInstance && "items" in value;

    return isInstance;
}

export function SalesDataInvoiceInterfaceFromJSON(json: any): SalesDataInvoiceInterface {
    return SalesDataInvoiceInterfaceFromJSONTyped(json, false);
}

export function SalesDataInvoiceInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): SalesDataInvoiceInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'baseCurrencyCode': !exists(json, 'base_currency_code') ? undefined : json['base_currency_code'],
        'baseDiscountAmount': !exists(json, 'base_discount_amount') ? undefined : json['base_discount_amount'],
        'baseGrandTotal': !exists(json, 'base_grand_total') ? undefined : json['base_grand_total'],
        'baseDiscountTaxCompensationAmount': !exists(json, 'base_discount_tax_compensation_amount') ? undefined : json['base_discount_tax_compensation_amount'],
        'baseShippingAmount': !exists(json, 'base_shipping_amount') ? undefined : json['base_shipping_amount'],
        'baseShippingDiscountTaxCompensationAmnt': !exists(json, 'base_shipping_discount_tax_compensation_amnt') ? undefined : json['base_shipping_discount_tax_compensation_amnt'],
        'baseShippingInclTax': !exists(json, 'base_shipping_incl_tax') ? undefined : json['base_shipping_incl_tax'],
        'baseShippingTaxAmount': !exists(json, 'base_shipping_tax_amount') ? undefined : json['base_shipping_tax_amount'],
        'baseSubtotal': !exists(json, 'base_subtotal') ? undefined : json['base_subtotal'],
        'baseSubtotalInclTax': !exists(json, 'base_subtotal_incl_tax') ? undefined : json['base_subtotal_incl_tax'],
        'baseTaxAmount': !exists(json, 'base_tax_amount') ? undefined : json['base_tax_amount'],
        'baseTotalRefunded': !exists(json, 'base_total_refunded') ? undefined : json['base_total_refunded'],
        'baseToGlobalRate': !exists(json, 'base_to_global_rate') ? undefined : json['base_to_global_rate'],
        'baseToOrderRate': !exists(json, 'base_to_order_rate') ? undefined : json['base_to_order_rate'],
        'billingAddressId': !exists(json, 'billing_address_id') ? undefined : json['billing_address_id'],
        'canVoidFlag': !exists(json, 'can_void_flag') ? undefined : json['can_void_flag'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'discountAmount': !exists(json, 'discount_amount') ? undefined : json['discount_amount'],
        'discountDescription': !exists(json, 'discount_description') ? undefined : json['discount_description'],
        'emailSent': !exists(json, 'email_sent') ? undefined : json['email_sent'],
        'entityId': !exists(json, 'entity_id') ? undefined : json['entity_id'],
        'globalCurrencyCode': !exists(json, 'global_currency_code') ? undefined : json['global_currency_code'],
        'grandTotal': !exists(json, 'grand_total') ? undefined : json['grand_total'],
        'discountTaxCompensationAmount': !exists(json, 'discount_tax_compensation_amount') ? undefined : json['discount_tax_compensation_amount'],
        'incrementId': !exists(json, 'increment_id') ? undefined : json['increment_id'],
        'isUsedForRefund': !exists(json, 'is_used_for_refund') ? undefined : json['is_used_for_refund'],
        'orderCurrencyCode': !exists(json, 'order_currency_code') ? undefined : json['order_currency_code'],
        'orderId': json['order_id'],
        'shippingAddressId': !exists(json, 'shipping_address_id') ? undefined : json['shipping_address_id'],
        'shippingAmount': !exists(json, 'shipping_amount') ? undefined : json['shipping_amount'],
        'shippingDiscountTaxCompensationAmount': !exists(json, 'shipping_discount_tax_compensation_amount') ? undefined : json['shipping_discount_tax_compensation_amount'],
        'shippingInclTax': !exists(json, 'shipping_incl_tax') ? undefined : json['shipping_incl_tax'],
        'shippingTaxAmount': !exists(json, 'shipping_tax_amount') ? undefined : json['shipping_tax_amount'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'storeCurrencyCode': !exists(json, 'store_currency_code') ? undefined : json['store_currency_code'],
        'storeId': !exists(json, 'store_id') ? undefined : json['store_id'],
        'storeToBaseRate': !exists(json, 'store_to_base_rate') ? undefined : json['store_to_base_rate'],
        'storeToOrderRate': !exists(json, 'store_to_order_rate') ? undefined : json['store_to_order_rate'],
        'subtotal': !exists(json, 'subtotal') ? undefined : json['subtotal'],
        'subtotalInclTax': !exists(json, 'subtotal_incl_tax') ? undefined : json['subtotal_incl_tax'],
        'taxAmount': !exists(json, 'tax_amount') ? undefined : json['tax_amount'],
        'totalQty': json['total_qty'],
        'transactionId': !exists(json, 'transaction_id') ? undefined : json['transaction_id'],
        'updatedAt': !exists(json, 'updated_at') ? undefined : json['updated_at'],
        'items': ((json['items'] as Array<any>).map(SalesDataInvoiceItemInterfaceFromJSON)),
        'comments': !exists(json, 'comments') ? undefined : ((json['comments'] as Array<any>).map(SalesDataInvoiceCommentInterfaceFromJSON)),
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}

export function SalesDataInvoiceInterfaceToJSON(value?: SalesDataInvoiceInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'base_currency_code': value.baseCurrencyCode,
        'base_discount_amount': value.baseDiscountAmount,
        'base_grand_total': value.baseGrandTotal,
        'base_discount_tax_compensation_amount': value.baseDiscountTaxCompensationAmount,
        'base_shipping_amount': value.baseShippingAmount,
        'base_shipping_discount_tax_compensation_amnt': value.baseShippingDiscountTaxCompensationAmnt,
        'base_shipping_incl_tax': value.baseShippingInclTax,
        'base_shipping_tax_amount': value.baseShippingTaxAmount,
        'base_subtotal': value.baseSubtotal,
        'base_subtotal_incl_tax': value.baseSubtotalInclTax,
        'base_tax_amount': value.baseTaxAmount,
        'base_total_refunded': value.baseTotalRefunded,
        'base_to_global_rate': value.baseToGlobalRate,
        'base_to_order_rate': value.baseToOrderRate,
        'billing_address_id': value.billingAddressId,
        'can_void_flag': value.canVoidFlag,
        'created_at': value.createdAt,
        'discount_amount': value.discountAmount,
        'discount_description': value.discountDescription,
        'email_sent': value.emailSent,
        'entity_id': value.entityId,
        'global_currency_code': value.globalCurrencyCode,
        'grand_total': value.grandTotal,
        'discount_tax_compensation_amount': value.discountTaxCompensationAmount,
        'increment_id': value.incrementId,
        'is_used_for_refund': value.isUsedForRefund,
        'order_currency_code': value.orderCurrencyCode,
        'order_id': value.orderId,
        'shipping_address_id': value.shippingAddressId,
        'shipping_amount': value.shippingAmount,
        'shipping_discount_tax_compensation_amount': value.shippingDiscountTaxCompensationAmount,
        'shipping_incl_tax': value.shippingInclTax,
        'shipping_tax_amount': value.shippingTaxAmount,
        'state': value.state,
        'store_currency_code': value.storeCurrencyCode,
        'store_id': value.storeId,
        'store_to_base_rate': value.storeToBaseRate,
        'store_to_order_rate': value.storeToOrderRate,
        'subtotal': value.subtotal,
        'subtotal_incl_tax': value.subtotalInclTax,
        'tax_amount': value.taxAmount,
        'total_qty': value.totalQty,
        'transaction_id': value.transactionId,
        'updated_at': value.updatedAt,
        'items': ((value.items as Array<any>).map(SalesDataInvoiceItemInterfaceToJSON)),
        'comments': value.comments === undefined ? undefined : ((value.comments as Array<any>).map(SalesDataInvoiceCommentInterfaceToJSON)),
        'extension_attributes': value.extensionAttributes,
    };
}

