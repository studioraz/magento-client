/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InventoryApiDataStockSourceLinkExtensionInterface } from './InventoryApiDataStockSourceLinkExtensionInterface';
import {
    InventoryApiDataStockSourceLinkExtensionInterfaceFromJSON,
    InventoryApiDataStockSourceLinkExtensionInterfaceFromJSONTyped,
    InventoryApiDataStockSourceLinkExtensionInterfaceToJSON,
} from './InventoryApiDataStockSourceLinkExtensionInterface';

/**
 * Represents relation between Stock and Source entities. Used fully qualified namespaces in annotations for proper work of WebApi request parser
 * @export
 * @interface InventoryApiDataStockSourceLinkInterface
 */
export interface InventoryApiDataStockSourceLinkInterface {
    /**
     * Stock id
     * @type {number}
     * @memberof InventoryApiDataStockSourceLinkInterface
     */
    stockId?: number;
    /**
     * Source code of the link
     * @type {string}
     * @memberof InventoryApiDataStockSourceLinkInterface
     */
    sourceCode?: string;
    /**
     * Priority of the link
     * @type {number}
     * @memberof InventoryApiDataStockSourceLinkInterface
     */
    priority?: number;
    /**
     * 
     * @type {InventoryApiDataStockSourceLinkExtensionInterface}
     * @memberof InventoryApiDataStockSourceLinkInterface
     */
    extensionAttributes?: InventoryApiDataStockSourceLinkExtensionInterface;
}

/**
 * Check if a given object implements the InventoryApiDataStockSourceLinkInterface interface.
 */
export function instanceOfInventoryApiDataStockSourceLinkInterface(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InventoryApiDataStockSourceLinkInterfaceFromJSON(json: any): InventoryApiDataStockSourceLinkInterface {
    return InventoryApiDataStockSourceLinkInterfaceFromJSONTyped(json, false);
}

export function InventoryApiDataStockSourceLinkInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): InventoryApiDataStockSourceLinkInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'stockId': !exists(json, 'stock_id') ? undefined : json['stock_id'],
        'sourceCode': !exists(json, 'source_code') ? undefined : json['source_code'],
        'priority': !exists(json, 'priority') ? undefined : json['priority'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : InventoryApiDataStockSourceLinkExtensionInterfaceFromJSON(json['extension_attributes']),
    };
}

export function InventoryApiDataStockSourceLinkInterfaceToJSON(value?: InventoryApiDataStockSourceLinkInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'stock_id': value.stockId,
        'source_code': value.sourceCode,
        'priority': value.priority,
        'extension_attributes': InventoryApiDataStockSourceLinkExtensionInterfaceToJSON(value.extensionAttributes),
    };
}

