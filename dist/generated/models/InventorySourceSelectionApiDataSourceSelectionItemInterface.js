"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InventorySourceSelectionApiDataSourceSelectionItemInterfaceToJSON = exports.InventorySourceSelectionApiDataSourceSelectionItemInterfaceFromJSONTyped = exports.InventorySourceSelectionApiDataSourceSelectionItemInterfaceFromJSON = exports.instanceOfInventorySourceSelectionApiDataSourceSelectionItemInterface = void 0;
var runtime_1 = require("../runtime");
/**
 * Check if a given object implements the InventorySourceSelectionApiDataSourceSelectionItemInterface interface.
 */
function instanceOfInventorySourceSelectionApiDataSourceSelectionItemInterface(value) {
    var isInstance = true;
    isInstance = isInstance && "sourceCode" in value;
    isInstance = isInstance && "sku" in value;
    isInstance = isInstance && "qtyToDeduct" in value;
    isInstance = isInstance && "qtyAvailable" in value;
    return isInstance;
}
exports.instanceOfInventorySourceSelectionApiDataSourceSelectionItemInterface = instanceOfInventorySourceSelectionApiDataSourceSelectionItemInterface;
function InventorySourceSelectionApiDataSourceSelectionItemInterfaceFromJSON(json) {
    return InventorySourceSelectionApiDataSourceSelectionItemInterfaceFromJSONTyped(json, false);
}
exports.InventorySourceSelectionApiDataSourceSelectionItemInterfaceFromJSON = InventorySourceSelectionApiDataSourceSelectionItemInterfaceFromJSON;
function InventorySourceSelectionApiDataSourceSelectionItemInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'sourceCode': json['source_code'],
        'sku': json['sku'],
        'qtyToDeduct': json['qty_to_deduct'],
        'qtyAvailable': json['qty_available'],
        'extensionAttributes': !(0, runtime_1.exists)(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}
exports.InventorySourceSelectionApiDataSourceSelectionItemInterfaceFromJSONTyped = InventorySourceSelectionApiDataSourceSelectionItemInterfaceFromJSONTyped;
function InventorySourceSelectionApiDataSourceSelectionItemInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'source_code': value.sourceCode,
        'sku': value.sku,
        'qty_to_deduct': value.qtyToDeduct,
        'qty_available': value.qtyAvailable,
        'extension_attributes': value.extensionAttributes,
    };
}
exports.InventorySourceSelectionApiDataSourceSelectionItemInterfaceToJSON = InventorySourceSelectionApiDataSourceSelectionItemInterfaceToJSON;
//# sourceMappingURL=InventorySourceSelectionApiDataSourceSelectionItemInterface.js.map