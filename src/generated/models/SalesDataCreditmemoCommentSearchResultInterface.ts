/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FrameworkSearchCriteriaInterface } from './FrameworkSearchCriteriaInterface';
import {
    FrameworkSearchCriteriaInterfaceFromJSON,
    FrameworkSearchCriteriaInterfaceFromJSONTyped,
    FrameworkSearchCriteriaInterfaceToJSON,
} from './FrameworkSearchCriteriaInterface';
import type { SalesDataCreditmemoCommentInterface } from './SalesDataCreditmemoCommentInterface';
import {
    SalesDataCreditmemoCommentInterfaceFromJSON,
    SalesDataCreditmemoCommentInterfaceFromJSONTyped,
    SalesDataCreditmemoCommentInterfaceToJSON,
} from './SalesDataCreditmemoCommentInterface';

/**
 * Credit memo comment search result interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases. A credit memo usually includes comments that detail why the credit memo amount was credited to the customer.
 * @export
 * @interface SalesDataCreditmemoCommentSearchResultInterface
 */
export interface SalesDataCreditmemoCommentSearchResultInterface {
    /**
     * Array of collection items.
     * @type {Array<SalesDataCreditmemoCommentInterface>}
     * @memberof SalesDataCreditmemoCommentSearchResultInterface
     */
    items: Array<SalesDataCreditmemoCommentInterface>;
    /**
     * 
     * @type {FrameworkSearchCriteriaInterface}
     * @memberof SalesDataCreditmemoCommentSearchResultInterface
     */
    searchCriteria: FrameworkSearchCriteriaInterface;
    /**
     * Total count.
     * @type {number}
     * @memberof SalesDataCreditmemoCommentSearchResultInterface
     */
    totalCount: number;
}

/**
 * Check if a given object implements the SalesDataCreditmemoCommentSearchResultInterface interface.
 */
export function instanceOfSalesDataCreditmemoCommentSearchResultInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "items" in value;
    isInstance = isInstance && "searchCriteria" in value;
    isInstance = isInstance && "totalCount" in value;

    return isInstance;
}

export function SalesDataCreditmemoCommentSearchResultInterfaceFromJSON(json: any): SalesDataCreditmemoCommentSearchResultInterface {
    return SalesDataCreditmemoCommentSearchResultInterfaceFromJSONTyped(json, false);
}

export function SalesDataCreditmemoCommentSearchResultInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): SalesDataCreditmemoCommentSearchResultInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(SalesDataCreditmemoCommentInterfaceFromJSON)),
        'searchCriteria': FrameworkSearchCriteriaInterfaceFromJSON(json['search_criteria']),
        'totalCount': json['total_count'],
    };
}

export function SalesDataCreditmemoCommentSearchResultInterfaceToJSON(value?: SalesDataCreditmemoCommentSearchResultInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': ((value.items as Array<any>).map(SalesDataCreditmemoCommentInterfaceToJSON)),
        'search_criteria': FrameworkSearchCriteriaInterfaceToJSON(value.searchCriteria),
        'total_count': value.totalCount,
    };
}

