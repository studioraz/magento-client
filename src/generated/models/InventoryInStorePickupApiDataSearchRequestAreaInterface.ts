/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Filter by Distance to the Address. Pickup Locations will be filtered by distance according to the geo-position of the entered address. Required fields for the address are country and one of the field: region or city or postcode.
 * @export
 * @interface InventoryInStorePickupApiDataSearchRequestAreaInterface
 */
export interface InventoryInStorePickupApiDataSearchRequestAreaInterface {
    /**
     * Search radius in KM.
     * @type {number}
     * @memberof InventoryInStorePickupApiDataSearchRequestAreaInterface
     */
    radius: number;
    /**
     * Search term string.
     * @type {string}
     * @memberof InventoryInStorePickupApiDataSearchRequestAreaInterface
     */
    searchTerm: string;
}

/**
 * Check if a given object implements the InventoryInStorePickupApiDataSearchRequestAreaInterface interface.
 */
export function instanceOfInventoryInStorePickupApiDataSearchRequestAreaInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "radius" in value;
    isInstance = isInstance && "searchTerm" in value;

    return isInstance;
}

export function InventoryInStorePickupApiDataSearchRequestAreaInterfaceFromJSON(json: any): InventoryInStorePickupApiDataSearchRequestAreaInterface {
    return InventoryInStorePickupApiDataSearchRequestAreaInterfaceFromJSONTyped(json, false);
}

export function InventoryInStorePickupApiDataSearchRequestAreaInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): InventoryInStorePickupApiDataSearchRequestAreaInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'radius': json['radius'],
        'searchTerm': json['search_term'],
    };
}

export function InventoryInStorePickupApiDataSearchRequestAreaInterfaceToJSON(value?: InventoryInStorePickupApiDataSearchRequestAreaInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'radius': value.radius,
        'search_term': value.searchTerm,
    };
}

