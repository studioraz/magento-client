"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CatalogDataProductRenderSearchResultsInterfaceToJSON = exports.CatalogDataProductRenderSearchResultsInterfaceFromJSONTyped = exports.CatalogDataProductRenderSearchResultsInterfaceFromJSON = exports.instanceOfCatalogDataProductRenderSearchResultsInterface = void 0;
var CatalogDataProductRenderInterface_1 = require("./CatalogDataProductRenderInterface");
/**
 * Check if a given object implements the CatalogDataProductRenderSearchResultsInterface interface.
 */
function instanceOfCatalogDataProductRenderSearchResultsInterface(value) {
    var isInstance = true;
    isInstance = isInstance && "items" in value;
    return isInstance;
}
exports.instanceOfCatalogDataProductRenderSearchResultsInterface = instanceOfCatalogDataProductRenderSearchResultsInterface;
function CatalogDataProductRenderSearchResultsInterfaceFromJSON(json) {
    return CatalogDataProductRenderSearchResultsInterfaceFromJSONTyped(json, false);
}
exports.CatalogDataProductRenderSearchResultsInterfaceFromJSON = CatalogDataProductRenderSearchResultsInterfaceFromJSON;
function CatalogDataProductRenderSearchResultsInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'items': (json['items'].map(CatalogDataProductRenderInterface_1.CatalogDataProductRenderInterfaceFromJSON)),
    };
}
exports.CatalogDataProductRenderSearchResultsInterfaceFromJSONTyped = CatalogDataProductRenderSearchResultsInterfaceFromJSONTyped;
function CatalogDataProductRenderSearchResultsInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'items': (value.items.map(CatalogDataProductRenderInterface_1.CatalogDataProductRenderInterfaceToJSON)),
    };
}
exports.CatalogDataProductRenderSearchResultsInterfaceToJSON = CatalogDataProductRenderSearchResultsInterfaceToJSON;
//# sourceMappingURL=CatalogDataProductRenderSearchResultsInterface.js.map