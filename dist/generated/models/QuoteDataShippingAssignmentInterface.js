"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.QuoteDataShippingAssignmentInterfaceToJSON = exports.QuoteDataShippingAssignmentInterfaceFromJSONTyped = exports.QuoteDataShippingAssignmentInterfaceFromJSON = exports.instanceOfQuoteDataShippingAssignmentInterface = void 0;
var runtime_1 = require("../runtime");
var QuoteDataCartItemInterface_1 = require("./QuoteDataCartItemInterface");
var QuoteDataShippingInterface_1 = require("./QuoteDataShippingInterface");
/**
 * Check if a given object implements the QuoteDataShippingAssignmentInterface interface.
 */
function instanceOfQuoteDataShippingAssignmentInterface(value) {
    var isInstance = true;
    isInstance = isInstance && "shipping" in value;
    isInstance = isInstance && "items" in value;
    return isInstance;
}
exports.instanceOfQuoteDataShippingAssignmentInterface = instanceOfQuoteDataShippingAssignmentInterface;
function QuoteDataShippingAssignmentInterfaceFromJSON(json) {
    return QuoteDataShippingAssignmentInterfaceFromJSONTyped(json, false);
}
exports.QuoteDataShippingAssignmentInterfaceFromJSON = QuoteDataShippingAssignmentInterfaceFromJSON;
function QuoteDataShippingAssignmentInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'shipping': (0, QuoteDataShippingInterface_1.QuoteDataShippingInterfaceFromJSON)(json['shipping']),
        'items': (json['items'].map(QuoteDataCartItemInterface_1.QuoteDataCartItemInterfaceFromJSON)),
        'extensionAttributes': !(0, runtime_1.exists)(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}
exports.QuoteDataShippingAssignmentInterfaceFromJSONTyped = QuoteDataShippingAssignmentInterfaceFromJSONTyped;
function QuoteDataShippingAssignmentInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'shipping': (0, QuoteDataShippingInterface_1.QuoteDataShippingInterfaceToJSON)(value.shipping),
        'items': (value.items.map(QuoteDataCartItemInterface_1.QuoteDataCartItemInterfaceToJSON)),
        'extension_attributes': value.extensionAttributes,
    };
}
exports.QuoteDataShippingAssignmentInterfaceToJSON = QuoteDataShippingAssignmentInterfaceToJSON;
//# sourceMappingURL=QuoteDataShippingAssignmentInterface.js.map