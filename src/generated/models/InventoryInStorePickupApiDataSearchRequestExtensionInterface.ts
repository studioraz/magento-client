/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InventoryInStorePickupApiDataSearchRequestProductInfoInterface } from './InventoryInStorePickupApiDataSearchRequestProductInfoInterface';
import {
    InventoryInStorePickupApiDataSearchRequestProductInfoInterfaceFromJSON,
    InventoryInStorePickupApiDataSearchRequestProductInfoInterfaceFromJSONTyped,
    InventoryInStorePickupApiDataSearchRequestProductInfoInterfaceToJSON,
} from './InventoryInStorePickupApiDataSearchRequestProductInfoInterface';

/**
 * ExtensionInterface class for @see \Magento\InventoryInStorePickupApi\Api\Data\SearchRequestInterface
 * @export
 * @interface InventoryInStorePickupApiDataSearchRequestExtensionInterface
 */
export interface InventoryInStorePickupApiDataSearchRequestExtensionInterface {
    /**
     * 
     * @type {Array<InventoryInStorePickupApiDataSearchRequestProductInfoInterface>}
     * @memberof InventoryInStorePickupApiDataSearchRequestExtensionInterface
     */
    productsInfo?: Array<InventoryInStorePickupApiDataSearchRequestProductInfoInterface>;
}

/**
 * Check if a given object implements the InventoryInStorePickupApiDataSearchRequestExtensionInterface interface.
 */
export function instanceOfInventoryInStorePickupApiDataSearchRequestExtensionInterface(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InventoryInStorePickupApiDataSearchRequestExtensionInterfaceFromJSON(json: any): InventoryInStorePickupApiDataSearchRequestExtensionInterface {
    return InventoryInStorePickupApiDataSearchRequestExtensionInterfaceFromJSONTyped(json, false);
}

export function InventoryInStorePickupApiDataSearchRequestExtensionInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): InventoryInStorePickupApiDataSearchRequestExtensionInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'productsInfo': !exists(json, 'products_info') ? undefined : ((json['products_info'] as Array<any>).map(InventoryInStorePickupApiDataSearchRequestProductInfoInterfaceFromJSON)),
    };
}

export function InventoryInStorePickupApiDataSearchRequestExtensionInterfaceToJSON(value?: InventoryInStorePickupApiDataSearchRequestExtensionInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'products_info': value.productsInfo === undefined ? undefined : ((value.productsInfo as Array<any>).map(InventoryInStorePickupApiDataSearchRequestProductInfoInterfaceToJSON)),
    };
}

