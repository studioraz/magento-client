"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SalesDataTransactionInterfaceToJSON = exports.SalesDataTransactionInterfaceFromJSONTyped = exports.SalesDataTransactionInterfaceFromJSON = exports.instanceOfSalesDataTransactionInterface = void 0;
var runtime_1 = require("../runtime");
/**
 * Check if a given object implements the SalesDataTransactionInterface interface.
 */
function instanceOfSalesDataTransactionInterface(value) {
    var isInstance = true;
    isInstance = isInstance && "transactionId" in value;
    isInstance = isInstance && "orderId" in value;
    isInstance = isInstance && "paymentId" in value;
    isInstance = isInstance && "txnId" in value;
    isInstance = isInstance && "parentTxnId" in value;
    isInstance = isInstance && "txnType" in value;
    isInstance = isInstance && "isClosed" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "childTransactions" in value;
    return isInstance;
}
exports.instanceOfSalesDataTransactionInterface = instanceOfSalesDataTransactionInterface;
function SalesDataTransactionInterfaceFromJSON(json) {
    return SalesDataTransactionInterfaceFromJSONTyped(json, false);
}
exports.SalesDataTransactionInterfaceFromJSON = SalesDataTransactionInterfaceFromJSON;
function SalesDataTransactionInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'transactionId': json['transaction_id'],
        'parentId': !(0, runtime_1.exists)(json, 'parent_id') ? undefined : json['parent_id'],
        'orderId': json['order_id'],
        'paymentId': json['payment_id'],
        'txnId': json['txn_id'],
        'parentTxnId': json['parent_txn_id'],
        'txnType': json['txn_type'],
        'isClosed': json['is_closed'],
        'additionalInformation': !(0, runtime_1.exists)(json, 'additional_information') ? undefined : json['additional_information'],
        'createdAt': json['created_at'],
        'childTransactions': (json['child_transactions'].map(SalesDataTransactionInterfaceFromJSON)),
        'extensionAttributes': !(0, runtime_1.exists)(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}
exports.SalesDataTransactionInterfaceFromJSONTyped = SalesDataTransactionInterfaceFromJSONTyped;
function SalesDataTransactionInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'transaction_id': value.transactionId,
        'parent_id': value.parentId,
        'order_id': value.orderId,
        'payment_id': value.paymentId,
        'txn_id': value.txnId,
        'parent_txn_id': value.parentTxnId,
        'txn_type': value.txnType,
        'is_closed': value.isClosed,
        'additional_information': value.additionalInformation,
        'created_at': value.createdAt,
        'child_transactions': (value.childTransactions.map(SalesDataTransactionInterfaceToJSON)),
        'extension_attributes': value.extensionAttributes,
    };
}
exports.SalesDataTransactionInterfaceToJSON = SalesDataTransactionInterfaceToJSON;
//# sourceMappingURL=SalesDataTransactionInterface.js.map