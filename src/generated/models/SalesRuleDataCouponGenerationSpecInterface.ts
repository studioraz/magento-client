/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * CouponGenerationSpecInterface
 * @export
 * @interface SalesRuleDataCouponGenerationSpecInterface
 */
export interface SalesRuleDataCouponGenerationSpecInterface {
    /**
     * The id of the rule associated with the coupon
     * @type {number}
     * @memberof SalesRuleDataCouponGenerationSpecInterface
     */
    ruleId: number;
    /**
     * Format of generated coupon code
     * @type {string}
     * @memberof SalesRuleDataCouponGenerationSpecInterface
     */
    format: string;
    /**
     * Of coupons to generate
     * @type {number}
     * @memberof SalesRuleDataCouponGenerationSpecInterface
     */
    quantity: number;
    /**
     * Length of coupon code
     * @type {number}
     * @memberof SalesRuleDataCouponGenerationSpecInterface
     */
    length: number;
    /**
     * The prefix
     * @type {string}
     * @memberof SalesRuleDataCouponGenerationSpecInterface
     */
    prefix?: string;
    /**
     * The suffix
     * @type {string}
     * @memberof SalesRuleDataCouponGenerationSpecInterface
     */
    suffix?: string;
    /**
     * The spacing where the delimiter should exist
     * @type {number}
     * @memberof SalesRuleDataCouponGenerationSpecInterface
     */
    delimiterAtEvery?: number;
    /**
     * The delimiter
     * @type {string}
     * @memberof SalesRuleDataCouponGenerationSpecInterface
     */
    delimiter?: string;
    /**
     * ExtensionInterface class for @see \Magento\SalesRule\Api\Data\CouponGenerationSpecInterface
     * @type {object}
     * @memberof SalesRuleDataCouponGenerationSpecInterface
     */
    extensionAttributes?: object;
}

/**
 * Check if a given object implements the SalesRuleDataCouponGenerationSpecInterface interface.
 */
export function instanceOfSalesRuleDataCouponGenerationSpecInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "ruleId" in value;
    isInstance = isInstance && "format" in value;
    isInstance = isInstance && "quantity" in value;
    isInstance = isInstance && "length" in value;

    return isInstance;
}

export function SalesRuleDataCouponGenerationSpecInterfaceFromJSON(json: any): SalesRuleDataCouponGenerationSpecInterface {
    return SalesRuleDataCouponGenerationSpecInterfaceFromJSONTyped(json, false);
}

export function SalesRuleDataCouponGenerationSpecInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): SalesRuleDataCouponGenerationSpecInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ruleId': json['rule_id'],
        'format': json['format'],
        'quantity': json['quantity'],
        'length': json['length'],
        'prefix': !exists(json, 'prefix') ? undefined : json['prefix'],
        'suffix': !exists(json, 'suffix') ? undefined : json['suffix'],
        'delimiterAtEvery': !exists(json, 'delimiter_at_every') ? undefined : json['delimiter_at_every'],
        'delimiter': !exists(json, 'delimiter') ? undefined : json['delimiter'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}

export function SalesRuleDataCouponGenerationSpecInterfaceToJSON(value?: SalesRuleDataCouponGenerationSpecInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'rule_id': value.ruleId,
        'format': value.format,
        'quantity': value.quantity,
        'length': value.length,
        'prefix': value.prefix,
        'suffix': value.suffix,
        'delimiter_at_every': value.delimiterAtEvery,
        'delimiter': value.delimiter,
        'extension_attributes': value.extensionAttributes,
    };
}

