/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Order status history interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.
 * @export
 * @interface SalesDataOrderStatusHistoryInterface
 */
export interface SalesDataOrderStatusHistoryInterface {
    /**
     * Comment.
     * @type {string}
     * @memberof SalesDataOrderStatusHistoryInterface
     */
    comment: string;
    /**
     * Created-at timestamp.
     * @type {string}
     * @memberof SalesDataOrderStatusHistoryInterface
     */
    createdAt?: string;
    /**
     * Order status history ID.
     * @type {number}
     * @memberof SalesDataOrderStatusHistoryInterface
     */
    entityId?: number;
    /**
     * Entity name.
     * @type {string}
     * @memberof SalesDataOrderStatusHistoryInterface
     */
    entityName?: string;
    /**
     * Is-customer-notified flag value.
     * @type {number}
     * @memberof SalesDataOrderStatusHistoryInterface
     */
    isCustomerNotified: number;
    /**
     * Is-visible-on-storefront flag value.
     * @type {number}
     * @memberof SalesDataOrderStatusHistoryInterface
     */
    isVisibleOnFront: number;
    /**
     * Parent ID.
     * @type {number}
     * @memberof SalesDataOrderStatusHistoryInterface
     */
    parentId: number;
    /**
     * Status.
     * @type {string}
     * @memberof SalesDataOrderStatusHistoryInterface
     */
    status?: string;
    /**
     * ExtensionInterface class for @see \Magento\Sales\Api\Data\OrderStatusHistoryInterface
     * @type {object}
     * @memberof SalesDataOrderStatusHistoryInterface
     */
    extensionAttributes?: object;
}

/**
 * Check if a given object implements the SalesDataOrderStatusHistoryInterface interface.
 */
export function instanceOfSalesDataOrderStatusHistoryInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "comment" in value;
    isInstance = isInstance && "isCustomerNotified" in value;
    isInstance = isInstance && "isVisibleOnFront" in value;
    isInstance = isInstance && "parentId" in value;

    return isInstance;
}

export function SalesDataOrderStatusHistoryInterfaceFromJSON(json: any): SalesDataOrderStatusHistoryInterface {
    return SalesDataOrderStatusHistoryInterfaceFromJSONTyped(json, false);
}

export function SalesDataOrderStatusHistoryInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): SalesDataOrderStatusHistoryInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'comment': json['comment'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'entityId': !exists(json, 'entity_id') ? undefined : json['entity_id'],
        'entityName': !exists(json, 'entity_name') ? undefined : json['entity_name'],
        'isCustomerNotified': json['is_customer_notified'],
        'isVisibleOnFront': json['is_visible_on_front'],
        'parentId': json['parent_id'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}

export function SalesDataOrderStatusHistoryInterfaceToJSON(value?: SalesDataOrderStatusHistoryInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'comment': value.comment,
        'created_at': value.createdAt,
        'entity_id': value.entityId,
        'entity_name': value.entityName,
        'is_customer_notified': value.isCustomerNotified,
        'is_visible_on_front': value.isVisibleOnFront,
        'parent_id': value.parentId,
        'status': value.status,
        'extension_attributes': value.extensionAttributes,
    };
}

