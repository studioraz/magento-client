"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.StoreDataStoreConfigInterfaceToJSON = exports.StoreDataStoreConfigInterfaceFromJSONTyped = exports.StoreDataStoreConfigInterfaceFromJSON = exports.instanceOfStoreDataStoreConfigInterface = void 0;
var runtime_1 = require("../runtime");
/**
 * Check if a given object implements the StoreDataStoreConfigInterface interface.
 */
function instanceOfStoreDataStoreConfigInterface(value) {
    var isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "code" in value;
    isInstance = isInstance && "websiteId" in value;
    isInstance = isInstance && "locale" in value;
    isInstance = isInstance && "baseCurrencyCode" in value;
    isInstance = isInstance && "defaultDisplayCurrencyCode" in value;
    isInstance = isInstance && "timezone" in value;
    isInstance = isInstance && "weightUnit" in value;
    isInstance = isInstance && "baseUrl" in value;
    isInstance = isInstance && "baseLinkUrl" in value;
    isInstance = isInstance && "baseStaticUrl" in value;
    isInstance = isInstance && "baseMediaUrl" in value;
    isInstance = isInstance && "secureBaseUrl" in value;
    isInstance = isInstance && "secureBaseLinkUrl" in value;
    isInstance = isInstance && "secureBaseStaticUrl" in value;
    isInstance = isInstance && "secureBaseMediaUrl" in value;
    return isInstance;
}
exports.instanceOfStoreDataStoreConfigInterface = instanceOfStoreDataStoreConfigInterface;
function StoreDataStoreConfigInterfaceFromJSON(json) {
    return StoreDataStoreConfigInterfaceFromJSONTyped(json, false);
}
exports.StoreDataStoreConfigInterfaceFromJSON = StoreDataStoreConfigInterfaceFromJSON;
function StoreDataStoreConfigInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': json['id'],
        'code': json['code'],
        'websiteId': json['website_id'],
        'locale': json['locale'],
        'baseCurrencyCode': json['base_currency_code'],
        'defaultDisplayCurrencyCode': json['default_display_currency_code'],
        'timezone': json['timezone'],
        'weightUnit': json['weight_unit'],
        'baseUrl': json['base_url'],
        'baseLinkUrl': json['base_link_url'],
        'baseStaticUrl': json['base_static_url'],
        'baseMediaUrl': json['base_media_url'],
        'secureBaseUrl': json['secure_base_url'],
        'secureBaseLinkUrl': json['secure_base_link_url'],
        'secureBaseStaticUrl': json['secure_base_static_url'],
        'secureBaseMediaUrl': json['secure_base_media_url'],
        'extensionAttributes': !(0, runtime_1.exists)(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}
exports.StoreDataStoreConfigInterfaceFromJSONTyped = StoreDataStoreConfigInterfaceFromJSONTyped;
function StoreDataStoreConfigInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'code': value.code,
        'website_id': value.websiteId,
        'locale': value.locale,
        'base_currency_code': value.baseCurrencyCode,
        'default_display_currency_code': value.defaultDisplayCurrencyCode,
        'timezone': value.timezone,
        'weight_unit': value.weightUnit,
        'base_url': value.baseUrl,
        'base_link_url': value.baseLinkUrl,
        'base_static_url': value.baseStaticUrl,
        'base_media_url': value.baseMediaUrl,
        'secure_base_url': value.secureBaseUrl,
        'secure_base_link_url': value.secureBaseLinkUrl,
        'secure_base_static_url': value.secureBaseStaticUrl,
        'secure_base_media_url': value.secureBaseMediaUrl,
        'extension_attributes': value.extensionAttributes,
    };
}
exports.StoreDataStoreConfigInterfaceToJSON = StoreDataStoreConfigInterfaceToJSON;
//# sourceMappingURL=StoreDataStoreConfigInterface.js.map