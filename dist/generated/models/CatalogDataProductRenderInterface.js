"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CatalogDataProductRenderInterfaceToJSON = exports.CatalogDataProductRenderInterfaceFromJSONTyped = exports.CatalogDataProductRenderInterfaceFromJSON = exports.instanceOfCatalogDataProductRenderInterface = void 0;
var CatalogDataProductRenderButtonInterface_1 = require("./CatalogDataProductRenderButtonInterface");
var CatalogDataProductRenderExtensionInterface_1 = require("./CatalogDataProductRenderExtensionInterface");
var CatalogDataProductRenderImageInterface_1 = require("./CatalogDataProductRenderImageInterface");
var CatalogDataProductRenderPriceInfoInterface_1 = require("./CatalogDataProductRenderPriceInfoInterface");
/**
 * Check if a given object implements the CatalogDataProductRenderInterface interface.
 */
function instanceOfCatalogDataProductRenderInterface(value) {
    var isInstance = true;
    isInstance = isInstance && "addToCartButton" in value;
    isInstance = isInstance && "addToCompareButton" in value;
    isInstance = isInstance && "priceInfo" in value;
    isInstance = isInstance && "images" in value;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "isSalable" in value;
    isInstance = isInstance && "storeId" in value;
    isInstance = isInstance && "currencyCode" in value;
    isInstance = isInstance && "extensionAttributes" in value;
    return isInstance;
}
exports.instanceOfCatalogDataProductRenderInterface = instanceOfCatalogDataProductRenderInterface;
function CatalogDataProductRenderInterfaceFromJSON(json) {
    return CatalogDataProductRenderInterfaceFromJSONTyped(json, false);
}
exports.CatalogDataProductRenderInterfaceFromJSON = CatalogDataProductRenderInterfaceFromJSON;
function CatalogDataProductRenderInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'addToCartButton': (0, CatalogDataProductRenderButtonInterface_1.CatalogDataProductRenderButtonInterfaceFromJSON)(json['add_to_cart_button']),
        'addToCompareButton': (0, CatalogDataProductRenderButtonInterface_1.CatalogDataProductRenderButtonInterfaceFromJSON)(json['add_to_compare_button']),
        'priceInfo': (0, CatalogDataProductRenderPriceInfoInterface_1.CatalogDataProductRenderPriceInfoInterfaceFromJSON)(json['price_info']),
        'images': (json['images'].map(CatalogDataProductRenderImageInterface_1.CatalogDataProductRenderImageInterfaceFromJSON)),
        'url': json['url'],
        'id': json['id'],
        'name': json['name'],
        'type': json['type'],
        'isSalable': json['is_salable'],
        'storeId': json['store_id'],
        'currencyCode': json['currency_code'],
        'extensionAttributes': (0, CatalogDataProductRenderExtensionInterface_1.CatalogDataProductRenderExtensionInterfaceFromJSON)(json['extension_attributes']),
    };
}
exports.CatalogDataProductRenderInterfaceFromJSONTyped = CatalogDataProductRenderInterfaceFromJSONTyped;
function CatalogDataProductRenderInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'add_to_cart_button': (0, CatalogDataProductRenderButtonInterface_1.CatalogDataProductRenderButtonInterfaceToJSON)(value.addToCartButton),
        'add_to_compare_button': (0, CatalogDataProductRenderButtonInterface_1.CatalogDataProductRenderButtonInterfaceToJSON)(value.addToCompareButton),
        'price_info': (0, CatalogDataProductRenderPriceInfoInterface_1.CatalogDataProductRenderPriceInfoInterfaceToJSON)(value.priceInfo),
        'images': (value.images.map(CatalogDataProductRenderImageInterface_1.CatalogDataProductRenderImageInterfaceToJSON)),
        'url': value.url,
        'id': value.id,
        'name': value.name,
        'type': value.type,
        'is_salable': value.isSalable,
        'store_id': value.storeId,
        'currency_code': value.currencyCode,
        'extension_attributes': (0, CatalogDataProductRenderExtensionInterface_1.CatalogDataProductRenderExtensionInterfaceToJSON)(value.extensionAttributes),
    };
}
exports.CatalogDataProductRenderInterfaceToJSON = CatalogDataProductRenderInterfaceToJSON;
//# sourceMappingURL=CatalogDataProductRenderInterface.js.map