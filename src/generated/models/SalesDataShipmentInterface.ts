/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SalesDataShipmentCommentInterface } from './SalesDataShipmentCommentInterface';
import {
    SalesDataShipmentCommentInterfaceFromJSON,
    SalesDataShipmentCommentInterfaceFromJSONTyped,
    SalesDataShipmentCommentInterfaceToJSON,
} from './SalesDataShipmentCommentInterface';
import type { SalesDataShipmentExtensionInterface } from './SalesDataShipmentExtensionInterface';
import {
    SalesDataShipmentExtensionInterfaceFromJSON,
    SalesDataShipmentExtensionInterfaceFromJSONTyped,
    SalesDataShipmentExtensionInterfaceToJSON,
} from './SalesDataShipmentExtensionInterface';
import type { SalesDataShipmentItemInterface } from './SalesDataShipmentItemInterface';
import {
    SalesDataShipmentItemInterfaceFromJSON,
    SalesDataShipmentItemInterfaceFromJSONTyped,
    SalesDataShipmentItemInterfaceToJSON,
} from './SalesDataShipmentItemInterface';
import type { SalesDataShipmentPackageInterface } from './SalesDataShipmentPackageInterface';
import {
    SalesDataShipmentPackageInterfaceFromJSON,
    SalesDataShipmentPackageInterfaceFromJSONTyped,
    SalesDataShipmentPackageInterfaceToJSON,
} from './SalesDataShipmentPackageInterface';
import type { SalesDataShipmentTrackInterface } from './SalesDataShipmentTrackInterface';
import {
    SalesDataShipmentTrackInterfaceFromJSON,
    SalesDataShipmentTrackInterfaceFromJSONTyped,
    SalesDataShipmentTrackInterfaceToJSON,
} from './SalesDataShipmentTrackInterface';

/**
 * Shipment interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package.
 * @export
 * @interface SalesDataShipmentInterface
 */
export interface SalesDataShipmentInterface {
    /**
     * Billing address ID.
     * @type {number}
     * @memberof SalesDataShipmentInterface
     */
    billingAddressId?: number;
    /**
     * Created-at timestamp.
     * @type {string}
     * @memberof SalesDataShipmentInterface
     */
    createdAt?: string;
    /**
     * Customer ID.
     * @type {number}
     * @memberof SalesDataShipmentInterface
     */
    customerId?: number;
    /**
     * Email-sent flag value.
     * @type {number}
     * @memberof SalesDataShipmentInterface
     */
    emailSent?: number;
    /**
     * Shipment ID.
     * @type {number}
     * @memberof SalesDataShipmentInterface
     */
    entityId?: number;
    /**
     * Increment ID.
     * @type {string}
     * @memberof SalesDataShipmentInterface
     */
    incrementId?: string;
    /**
     * Order ID.
     * @type {number}
     * @memberof SalesDataShipmentInterface
     */
    orderId: number;
    /**
     * Array of packages, if any. Otherwise, null.
     * @type {Array<SalesDataShipmentPackageInterface>}
     * @memberof SalesDataShipmentInterface
     */
    packages?: Array<SalesDataShipmentPackageInterface>;
    /**
     * Shipment status.
     * @type {number}
     * @memberof SalesDataShipmentInterface
     */
    shipmentStatus?: number;
    /**
     * Shipping address ID.
     * @type {number}
     * @memberof SalesDataShipmentInterface
     */
    shippingAddressId?: number;
    /**
     * Shipping label.
     * @type {string}
     * @memberof SalesDataShipmentInterface
     */
    shippingLabel?: string;
    /**
     * Store ID.
     * @type {number}
     * @memberof SalesDataShipmentInterface
     */
    storeId?: number;
    /**
     * Total quantity.
     * @type {number}
     * @memberof SalesDataShipmentInterface
     */
    totalQty?: number;
    /**
     * Total weight.
     * @type {number}
     * @memberof SalesDataShipmentInterface
     */
    totalWeight?: number;
    /**
     * Updated-at timestamp.
     * @type {string}
     * @memberof SalesDataShipmentInterface
     */
    updatedAt?: string;
    /**
     * Array of items.
     * @type {Array<SalesDataShipmentItemInterface>}
     * @memberof SalesDataShipmentInterface
     */
    items: Array<SalesDataShipmentItemInterface>;
    /**
     * Array of tracks.
     * @type {Array<SalesDataShipmentTrackInterface>}
     * @memberof SalesDataShipmentInterface
     */
    tracks: Array<SalesDataShipmentTrackInterface>;
    /**
     * Array of comments.
     * @type {Array<SalesDataShipmentCommentInterface>}
     * @memberof SalesDataShipmentInterface
     */
    comments: Array<SalesDataShipmentCommentInterface>;
    /**
     * 
     * @type {SalesDataShipmentExtensionInterface}
     * @memberof SalesDataShipmentInterface
     */
    extensionAttributes?: SalesDataShipmentExtensionInterface;
}

/**
 * Check if a given object implements the SalesDataShipmentInterface interface.
 */
export function instanceOfSalesDataShipmentInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "orderId" in value;
    isInstance = isInstance && "items" in value;
    isInstance = isInstance && "tracks" in value;
    isInstance = isInstance && "comments" in value;

    return isInstance;
}

export function SalesDataShipmentInterfaceFromJSON(json: any): SalesDataShipmentInterface {
    return SalesDataShipmentInterfaceFromJSONTyped(json, false);
}

export function SalesDataShipmentInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): SalesDataShipmentInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'billingAddressId': !exists(json, 'billing_address_id') ? undefined : json['billing_address_id'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'customerId': !exists(json, 'customer_id') ? undefined : json['customer_id'],
        'emailSent': !exists(json, 'email_sent') ? undefined : json['email_sent'],
        'entityId': !exists(json, 'entity_id') ? undefined : json['entity_id'],
        'incrementId': !exists(json, 'increment_id') ? undefined : json['increment_id'],
        'orderId': json['order_id'],
        'packages': !exists(json, 'packages') ? undefined : ((json['packages'] as Array<any>).map(SalesDataShipmentPackageInterfaceFromJSON)),
        'shipmentStatus': !exists(json, 'shipment_status') ? undefined : json['shipment_status'],
        'shippingAddressId': !exists(json, 'shipping_address_id') ? undefined : json['shipping_address_id'],
        'shippingLabel': !exists(json, 'shipping_label') ? undefined : json['shipping_label'],
        'storeId': !exists(json, 'store_id') ? undefined : json['store_id'],
        'totalQty': !exists(json, 'total_qty') ? undefined : json['total_qty'],
        'totalWeight': !exists(json, 'total_weight') ? undefined : json['total_weight'],
        'updatedAt': !exists(json, 'updated_at') ? undefined : json['updated_at'],
        'items': ((json['items'] as Array<any>).map(SalesDataShipmentItemInterfaceFromJSON)),
        'tracks': ((json['tracks'] as Array<any>).map(SalesDataShipmentTrackInterfaceFromJSON)),
        'comments': ((json['comments'] as Array<any>).map(SalesDataShipmentCommentInterfaceFromJSON)),
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : SalesDataShipmentExtensionInterfaceFromJSON(json['extension_attributes']),
    };
}

export function SalesDataShipmentInterfaceToJSON(value?: SalesDataShipmentInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'billing_address_id': value.billingAddressId,
        'created_at': value.createdAt,
        'customer_id': value.customerId,
        'email_sent': value.emailSent,
        'entity_id': value.entityId,
        'increment_id': value.incrementId,
        'order_id': value.orderId,
        'packages': value.packages === undefined ? undefined : ((value.packages as Array<any>).map(SalesDataShipmentPackageInterfaceToJSON)),
        'shipment_status': value.shipmentStatus,
        'shipping_address_id': value.shippingAddressId,
        'shipping_label': value.shippingLabel,
        'store_id': value.storeId,
        'total_qty': value.totalQty,
        'total_weight': value.totalWeight,
        'updated_at': value.updatedAt,
        'items': ((value.items as Array<any>).map(SalesDataShipmentItemInterfaceToJSON)),
        'tracks': ((value.tracks as Array<any>).map(SalesDataShipmentTrackInterfaceToJSON)),
        'comments': ((value.comments as Array<any>).map(SalesDataShipmentCommentInterfaceToJSON)),
        'extension_attributes': SalesDataShipmentExtensionInterfaceToJSON(value.extensionAttributes),
    };
}

