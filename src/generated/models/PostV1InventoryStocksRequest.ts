/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InventoryApiDataStockInterface } from './InventoryApiDataStockInterface';
import {
    InventoryApiDataStockInterfaceFromJSON,
    InventoryApiDataStockInterfaceFromJSONTyped,
    InventoryApiDataStockInterfaceToJSON,
} from './InventoryApiDataStockInterface';

/**
 * 
 * @export
 * @interface PostV1InventoryStocksRequest
 */
export interface PostV1InventoryStocksRequest {
    /**
     * 
     * @type {InventoryApiDataStockInterface}
     * @memberof PostV1InventoryStocksRequest
     */
    stock: InventoryApiDataStockInterface;
}

/**
 * Check if a given object implements the PostV1InventoryStocksRequest interface.
 */
export function instanceOfPostV1InventoryStocksRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "stock" in value;

    return isInstance;
}

export function PostV1InventoryStocksRequestFromJSON(json: any): PostV1InventoryStocksRequest {
    return PostV1InventoryStocksRequestFromJSONTyped(json, false);
}

export function PostV1InventoryStocksRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostV1InventoryStocksRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'stock': InventoryApiDataStockInterfaceFromJSON(json['stock']),
    };
}

export function PostV1InventoryStocksRequestToJSON(value?: PostV1InventoryStocksRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'stock': InventoryApiDataStockInterfaceToJSON(value.stock),
    };
}

