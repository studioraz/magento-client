/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TaxDataOrderTaxDetailsAppliedTaxExtensionInterface } from './TaxDataOrderTaxDetailsAppliedTaxExtensionInterface';
import {
    TaxDataOrderTaxDetailsAppliedTaxExtensionInterfaceFromJSON,
    TaxDataOrderTaxDetailsAppliedTaxExtensionInterfaceFromJSONTyped,
    TaxDataOrderTaxDetailsAppliedTaxExtensionInterfaceToJSON,
} from './TaxDataOrderTaxDetailsAppliedTaxExtensionInterface';

/**
 * Interface OrderTaxDetailsAppliedTaxInterface
 * @export
 * @interface TaxDataOrderTaxDetailsAppliedTaxInterface
 */
export interface TaxDataOrderTaxDetailsAppliedTaxInterface {
    /**
     * Code
     * @type {string}
     * @memberof TaxDataOrderTaxDetailsAppliedTaxInterface
     */
    code?: string;
    /**
     * Title
     * @type {string}
     * @memberof TaxDataOrderTaxDetailsAppliedTaxInterface
     */
    title?: string;
    /**
     * Tax Percent
     * @type {number}
     * @memberof TaxDataOrderTaxDetailsAppliedTaxInterface
     */
    percent?: number;
    /**
     * Tax amount
     * @type {number}
     * @memberof TaxDataOrderTaxDetailsAppliedTaxInterface
     */
    amount: number;
    /**
     * Tax amount in base currency
     * @type {number}
     * @memberof TaxDataOrderTaxDetailsAppliedTaxInterface
     */
    baseAmount: number;
    /**
     * 
     * @type {TaxDataOrderTaxDetailsAppliedTaxExtensionInterface}
     * @memberof TaxDataOrderTaxDetailsAppliedTaxInterface
     */
    extensionAttributes?: TaxDataOrderTaxDetailsAppliedTaxExtensionInterface;
}

/**
 * Check if a given object implements the TaxDataOrderTaxDetailsAppliedTaxInterface interface.
 */
export function instanceOfTaxDataOrderTaxDetailsAppliedTaxInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "baseAmount" in value;

    return isInstance;
}

export function TaxDataOrderTaxDetailsAppliedTaxInterfaceFromJSON(json: any): TaxDataOrderTaxDetailsAppliedTaxInterface {
    return TaxDataOrderTaxDetailsAppliedTaxInterfaceFromJSONTyped(json, false);
}

export function TaxDataOrderTaxDetailsAppliedTaxInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaxDataOrderTaxDetailsAppliedTaxInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'code': !exists(json, 'code') ? undefined : json['code'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'percent': !exists(json, 'percent') ? undefined : json['percent'],
        'amount': json['amount'],
        'baseAmount': json['base_amount'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : TaxDataOrderTaxDetailsAppliedTaxExtensionInterfaceFromJSON(json['extension_attributes']),
    };
}

export function TaxDataOrderTaxDetailsAppliedTaxInterfaceToJSON(value?: TaxDataOrderTaxDetailsAppliedTaxInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'code': value.code,
        'title': value.title,
        'percent': value.percent,
        'amount': value.amount,
        'base_amount': value.baseAmount,
        'extension_attributes': TaxDataOrderTaxDetailsAppliedTaxExtensionInterfaceToJSON(value.extensionAttributes),
    };
}

