/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { CatalogDataCostInterface, CatalogDataPriceUpdateResultInterface, PostV1ProductsCostRequest, PostV1ProductsTierpricesinformationRequest } from '../models';
export interface PostV1ProductsCostOperationRequest {
    postV1ProductsCostRequest?: PostV1ProductsCostRequest;
}
export interface PostV1ProductsCostdeleteRequest {
    postV1ProductsTierpricesinformationRequest?: PostV1ProductsTierpricesinformationRequest;
}
export interface PostV1ProductsCostinformationRequest {
    postV1ProductsTierpricesinformationRequest?: PostV1ProductsTierpricesinformationRequest;
}
/**
 *
 */
export declare class CatalogCostStorageV1Api extends runtime.BaseAPI {
    /**
     * Add or update product cost. Input item should correspond to \\Magento\\Catalog\\Api\\Data\\CostInterface. If any items will have invalid cost, store id or sku, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.
     */
    postV1ProductsCostRaw(requestParameters: PostV1ProductsCostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CatalogDataPriceUpdateResultInterface>>>;
    /**
     * Add or update product cost. Input item should correspond to \\Magento\\Catalog\\Api\\Data\\CostInterface. If any items will have invalid cost, store id or sku, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.
     */
    postV1ProductsCost(requestParameters?: PostV1ProductsCostOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CatalogDataPriceUpdateResultInterface>>;
    /**
     * Delete product cost. In case of at least one of skus is not found exception will be thrown. If error occurred during the delete exception will be thrown.
     */
    postV1ProductsCostdeleteRaw(requestParameters: PostV1ProductsCostdeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<boolean>>;
    /**
     * Delete product cost. In case of at least one of skus is not found exception will be thrown. If error occurred during the delete exception will be thrown.
     */
    postV1ProductsCostdelete(requestParameters?: PostV1ProductsCostdeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<boolean>;
    /**
     * Return product prices. In case of at least one of skus is not found exception will be thrown.
     */
    postV1ProductsCostinformationRaw(requestParameters: PostV1ProductsCostinformationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CatalogDataCostInterface>>>;
    /**
     * Return product prices. In case of at least one of skus is not found exception will be thrown.
     */
    postV1ProductsCostinformation(requestParameters?: PostV1ProductsCostinformationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CatalogDataCostInterface>>;
}
