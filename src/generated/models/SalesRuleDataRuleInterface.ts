/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SalesRuleDataConditionInterface } from './SalesRuleDataConditionInterface';
import {
    SalesRuleDataConditionInterfaceFromJSON,
    SalesRuleDataConditionInterfaceFromJSONTyped,
    SalesRuleDataConditionInterfaceToJSON,
} from './SalesRuleDataConditionInterface';
import type { SalesRuleDataRuleLabelInterface } from './SalesRuleDataRuleLabelInterface';
import {
    SalesRuleDataRuleLabelInterfaceFromJSON,
    SalesRuleDataRuleLabelInterfaceFromJSONTyped,
    SalesRuleDataRuleLabelInterfaceToJSON,
} from './SalesRuleDataRuleLabelInterface';

/**
 * Interface RuleInterface
 * @export
 * @interface SalesRuleDataRuleInterface
 */
export interface SalesRuleDataRuleInterface {
    /**
     * Rule id
     * @type {number}
     * @memberof SalesRuleDataRuleInterface
     */
    ruleId?: number;
    /**
     * Rule name
     * @type {string}
     * @memberof SalesRuleDataRuleInterface
     */
    name?: string;
    /**
     * Display label
     * @type {Array<SalesRuleDataRuleLabelInterface>}
     * @memberof SalesRuleDataRuleInterface
     */
    storeLabels?: Array<SalesRuleDataRuleLabelInterface>;
    /**
     * Description
     * @type {string}
     * @memberof SalesRuleDataRuleInterface
     */
    description?: string;
    /**
     * A list of websites the rule applies to
     * @type {Array<number>}
     * @memberof SalesRuleDataRuleInterface
     */
    websiteIds: Array<number>;
    /**
     * Ids of customer groups that the rule applies to
     * @type {Array<number>}
     * @memberof SalesRuleDataRuleInterface
     */
    customerGroupIds: Array<number>;
    /**
     * The start date when the coupon is active
     * @type {string}
     * @memberof SalesRuleDataRuleInterface
     */
    fromDate?: string;
    /**
     * The end date when the coupon is active
     * @type {string}
     * @memberof SalesRuleDataRuleInterface
     */
    toDate?: string;
    /**
     * Number of uses per customer
     * @type {number}
     * @memberof SalesRuleDataRuleInterface
     */
    usesPerCustomer: number;
    /**
     * The coupon is active
     * @type {boolean}
     * @memberof SalesRuleDataRuleInterface
     */
    isActive: boolean;
    /**
     * 
     * @type {SalesRuleDataConditionInterface}
     * @memberof SalesRuleDataRuleInterface
     */
    condition?: SalesRuleDataConditionInterface;
    /**
     * 
     * @type {SalesRuleDataConditionInterface}
     * @memberof SalesRuleDataRuleInterface
     */
    actionCondition?: SalesRuleDataConditionInterface;
    /**
     * To stop rule processing
     * @type {boolean}
     * @memberof SalesRuleDataRuleInterface
     */
    stopRulesProcessing: boolean;
    /**
     * Is this field needed
     * @type {boolean}
     * @memberof SalesRuleDataRuleInterface
     */
    isAdvanced: boolean;
    /**
     * Product ids
     * @type {Array<number>}
     * @memberof SalesRuleDataRuleInterface
     */
    productIds?: Array<number>;
    /**
     * Sort order
     * @type {number}
     * @memberof SalesRuleDataRuleInterface
     */
    sortOrder: number;
    /**
     * Simple action of the rule
     * @type {string}
     * @memberof SalesRuleDataRuleInterface
     */
    simpleAction?: string;
    /**
     * Discount amount
     * @type {number}
     * @memberof SalesRuleDataRuleInterface
     */
    discountAmount: number;
    /**
     * Maximum qty discount is applied
     * @type {number}
     * @memberof SalesRuleDataRuleInterface
     */
    discountQty?: number;
    /**
     * Discount step
     * @type {number}
     * @memberof SalesRuleDataRuleInterface
     */
    discountStep: number;
    /**
     * The rule applies to shipping
     * @type {boolean}
     * @memberof SalesRuleDataRuleInterface
     */
    applyToShipping: boolean;
    /**
     * How many times the rule has been used
     * @type {number}
     * @memberof SalesRuleDataRuleInterface
     */
    timesUsed: number;
    /**
     * Whether the rule is in RSS
     * @type {boolean}
     * @memberof SalesRuleDataRuleInterface
     */
    isRss: boolean;
    /**
     * Coupon type
     * @type {string}
     * @memberof SalesRuleDataRuleInterface
     */
    couponType: string;
    /**
     * To auto generate coupon
     * @type {boolean}
     * @memberof SalesRuleDataRuleInterface
     */
    useAutoGeneration: boolean;
    /**
     * Limit of uses per coupon
     * @type {number}
     * @memberof SalesRuleDataRuleInterface
     */
    usesPerCoupon: number;
    /**
     * To grant free shipping
     * @type {string}
     * @memberof SalesRuleDataRuleInterface
     */
    simpleFreeShipping?: string;
    /**
     * ExtensionInterface class for @see \Magento\SalesRule\Api\Data\RuleInterface
     * @type {object}
     * @memberof SalesRuleDataRuleInterface
     */
    extensionAttributes?: object;
}

/**
 * Check if a given object implements the SalesRuleDataRuleInterface interface.
 */
export function instanceOfSalesRuleDataRuleInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "websiteIds" in value;
    isInstance = isInstance && "customerGroupIds" in value;
    isInstance = isInstance && "usesPerCustomer" in value;
    isInstance = isInstance && "isActive" in value;
    isInstance = isInstance && "stopRulesProcessing" in value;
    isInstance = isInstance && "isAdvanced" in value;
    isInstance = isInstance && "sortOrder" in value;
    isInstance = isInstance && "discountAmount" in value;
    isInstance = isInstance && "discountStep" in value;
    isInstance = isInstance && "applyToShipping" in value;
    isInstance = isInstance && "timesUsed" in value;
    isInstance = isInstance && "isRss" in value;
    isInstance = isInstance && "couponType" in value;
    isInstance = isInstance && "useAutoGeneration" in value;
    isInstance = isInstance && "usesPerCoupon" in value;

    return isInstance;
}

export function SalesRuleDataRuleInterfaceFromJSON(json: any): SalesRuleDataRuleInterface {
    return SalesRuleDataRuleInterfaceFromJSONTyped(json, false);
}

export function SalesRuleDataRuleInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): SalesRuleDataRuleInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'ruleId': !exists(json, 'rule_id') ? undefined : json['rule_id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'storeLabels': !exists(json, 'store_labels') ? undefined : ((json['store_labels'] as Array<any>).map(SalesRuleDataRuleLabelInterfaceFromJSON)),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'websiteIds': json['website_ids'],
        'customerGroupIds': json['customer_group_ids'],
        'fromDate': !exists(json, 'from_date') ? undefined : json['from_date'],
        'toDate': !exists(json, 'to_date') ? undefined : json['to_date'],
        'usesPerCustomer': json['uses_per_customer'],
        'isActive': json['is_active'],
        'condition': !exists(json, 'condition') ? undefined : SalesRuleDataConditionInterfaceFromJSON(json['condition']),
        'actionCondition': !exists(json, 'action_condition') ? undefined : SalesRuleDataConditionInterfaceFromJSON(json['action_condition']),
        'stopRulesProcessing': json['stop_rules_processing'],
        'isAdvanced': json['is_advanced'],
        'productIds': !exists(json, 'product_ids') ? undefined : json['product_ids'],
        'sortOrder': json['sort_order'],
        'simpleAction': !exists(json, 'simple_action') ? undefined : json['simple_action'],
        'discountAmount': json['discount_amount'],
        'discountQty': !exists(json, 'discount_qty') ? undefined : json['discount_qty'],
        'discountStep': json['discount_step'],
        'applyToShipping': json['apply_to_shipping'],
        'timesUsed': json['times_used'],
        'isRss': json['is_rss'],
        'couponType': json['coupon_type'],
        'useAutoGeneration': json['use_auto_generation'],
        'usesPerCoupon': json['uses_per_coupon'],
        'simpleFreeShipping': !exists(json, 'simple_free_shipping') ? undefined : json['simple_free_shipping'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}

export function SalesRuleDataRuleInterfaceToJSON(value?: SalesRuleDataRuleInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'rule_id': value.ruleId,
        'name': value.name,
        'store_labels': value.storeLabels === undefined ? undefined : ((value.storeLabels as Array<any>).map(SalesRuleDataRuleLabelInterfaceToJSON)),
        'description': value.description,
        'website_ids': value.websiteIds,
        'customer_group_ids': value.customerGroupIds,
        'from_date': value.fromDate,
        'to_date': value.toDate,
        'uses_per_customer': value.usesPerCustomer,
        'is_active': value.isActive,
        'condition': SalesRuleDataConditionInterfaceToJSON(value.condition),
        'action_condition': SalesRuleDataConditionInterfaceToJSON(value.actionCondition),
        'stop_rules_processing': value.stopRulesProcessing,
        'is_advanced': value.isAdvanced,
        'product_ids': value.productIds,
        'sort_order': value.sortOrder,
        'simple_action': value.simpleAction,
        'discount_amount': value.discountAmount,
        'discount_qty': value.discountQty,
        'discount_step': value.discountStep,
        'apply_to_shipping': value.applyToShipping,
        'times_used': value.timesUsed,
        'is_rss': value.isRss,
        'coupon_type': value.couponType,
        'use_auto_generation': value.useAutoGeneration,
        'uses_per_coupon': value.usesPerCoupon,
        'simple_free_shipping': value.simpleFreeShipping,
        'extension_attributes': value.extensionAttributes,
    };
}

