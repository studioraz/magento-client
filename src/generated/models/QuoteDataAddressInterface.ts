/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FrameworkAttributeInterface } from './FrameworkAttributeInterface';
import {
    FrameworkAttributeInterfaceFromJSON,
    FrameworkAttributeInterfaceFromJSONTyped,
    FrameworkAttributeInterfaceToJSON,
} from './FrameworkAttributeInterface';
import type { QuoteDataAddressExtensionInterface } from './QuoteDataAddressExtensionInterface';
import {
    QuoteDataAddressExtensionInterfaceFromJSON,
    QuoteDataAddressExtensionInterfaceFromJSONTyped,
    QuoteDataAddressExtensionInterfaceToJSON,
} from './QuoteDataAddressExtensionInterface';

/**
 * Interface AddressInterface
 * @export
 * @interface QuoteDataAddressInterface
 */
export interface QuoteDataAddressInterface {
    /**
     * Id
     * @type {number}
     * @memberof QuoteDataAddressInterface
     */
    id?: number;
    /**
     * Region name
     * @type {string}
     * @memberof QuoteDataAddressInterface
     */
    region: string;
    /**
     * Region id
     * @type {number}
     * @memberof QuoteDataAddressInterface
     */
    regionId: number;
    /**
     * Region code
     * @type {string}
     * @memberof QuoteDataAddressInterface
     */
    regionCode: string;
    /**
     * Country id
     * @type {string}
     * @memberof QuoteDataAddressInterface
     */
    countryId: string;
    /**
     * Street
     * @type {Array<string>}
     * @memberof QuoteDataAddressInterface
     */
    street: Array<string>;
    /**
     * Company
     * @type {string}
     * @memberof QuoteDataAddressInterface
     */
    company?: string;
    /**
     * Telephone number
     * @type {string}
     * @memberof QuoteDataAddressInterface
     */
    telephone: string;
    /**
     * Fax number
     * @type {string}
     * @memberof QuoteDataAddressInterface
     */
    fax?: string;
    /**
     * Postcode
     * @type {string}
     * @memberof QuoteDataAddressInterface
     */
    postcode: string;
    /**
     * City name
     * @type {string}
     * @memberof QuoteDataAddressInterface
     */
    city: string;
    /**
     * First name
     * @type {string}
     * @memberof QuoteDataAddressInterface
     */
    firstname: string;
    /**
     * Last name
     * @type {string}
     * @memberof QuoteDataAddressInterface
     */
    lastname: string;
    /**
     * Middle name
     * @type {string}
     * @memberof QuoteDataAddressInterface
     */
    middlename?: string;
    /**
     * Prefix
     * @type {string}
     * @memberof QuoteDataAddressInterface
     */
    prefix?: string;
    /**
     * Suffix
     * @type {string}
     * @memberof QuoteDataAddressInterface
     */
    suffix?: string;
    /**
     * Vat id
     * @type {string}
     * @memberof QuoteDataAddressInterface
     */
    vatId?: string;
    /**
     * Customer id
     * @type {number}
     * @memberof QuoteDataAddressInterface
     */
    customerId?: number;
    /**
     * Billing/shipping email
     * @type {string}
     * @memberof QuoteDataAddressInterface
     */
    email: string;
    /**
     * Same as billing flag
     * @type {number}
     * @memberof QuoteDataAddressInterface
     */
    sameAsBilling?: number;
    /**
     * Customer address id
     * @type {number}
     * @memberof QuoteDataAddressInterface
     */
    customerAddressId?: number;
    /**
     * Save in address book flag
     * @type {number}
     * @memberof QuoteDataAddressInterface
     */
    saveInAddressBook?: number;
    /**
     * 
     * @type {QuoteDataAddressExtensionInterface}
     * @memberof QuoteDataAddressInterface
     */
    extensionAttributes?: QuoteDataAddressExtensionInterface;
    /**
     * Custom attributes values.
     * @type {Array<FrameworkAttributeInterface>}
     * @memberof QuoteDataAddressInterface
     */
    customAttributes?: Array<FrameworkAttributeInterface>;
}

/**
 * Check if a given object implements the QuoteDataAddressInterface interface.
 */
export function instanceOfQuoteDataAddressInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "region" in value;
    isInstance = isInstance && "regionId" in value;
    isInstance = isInstance && "regionCode" in value;
    isInstance = isInstance && "countryId" in value;
    isInstance = isInstance && "street" in value;
    isInstance = isInstance && "telephone" in value;
    isInstance = isInstance && "postcode" in value;
    isInstance = isInstance && "city" in value;
    isInstance = isInstance && "firstname" in value;
    isInstance = isInstance && "lastname" in value;
    isInstance = isInstance && "email" in value;

    return isInstance;
}

export function QuoteDataAddressInterfaceFromJSON(json: any): QuoteDataAddressInterface {
    return QuoteDataAddressInterfaceFromJSONTyped(json, false);
}

export function QuoteDataAddressInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuoteDataAddressInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'region': json['region'],
        'regionId': json['region_id'],
        'regionCode': json['region_code'],
        'countryId': json['country_id'],
        'street': json['street'],
        'company': !exists(json, 'company') ? undefined : json['company'],
        'telephone': json['telephone'],
        'fax': !exists(json, 'fax') ? undefined : json['fax'],
        'postcode': json['postcode'],
        'city': json['city'],
        'firstname': json['firstname'],
        'lastname': json['lastname'],
        'middlename': !exists(json, 'middlename') ? undefined : json['middlename'],
        'prefix': !exists(json, 'prefix') ? undefined : json['prefix'],
        'suffix': !exists(json, 'suffix') ? undefined : json['suffix'],
        'vatId': !exists(json, 'vat_id') ? undefined : json['vat_id'],
        'customerId': !exists(json, 'customer_id') ? undefined : json['customer_id'],
        'email': json['email'],
        'sameAsBilling': !exists(json, 'same_as_billing') ? undefined : json['same_as_billing'],
        'customerAddressId': !exists(json, 'customer_address_id') ? undefined : json['customer_address_id'],
        'saveInAddressBook': !exists(json, 'save_in_address_book') ? undefined : json['save_in_address_book'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : QuoteDataAddressExtensionInterfaceFromJSON(json['extension_attributes']),
        'customAttributes': !exists(json, 'custom_attributes') ? undefined : ((json['custom_attributes'] as Array<any>).map(FrameworkAttributeInterfaceFromJSON)),
    };
}

export function QuoteDataAddressInterfaceToJSON(value?: QuoteDataAddressInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'region': value.region,
        'region_id': value.regionId,
        'region_code': value.regionCode,
        'country_id': value.countryId,
        'street': value.street,
        'company': value.company,
        'telephone': value.telephone,
        'fax': value.fax,
        'postcode': value.postcode,
        'city': value.city,
        'firstname': value.firstname,
        'lastname': value.lastname,
        'middlename': value.middlename,
        'prefix': value.prefix,
        'suffix': value.suffix,
        'vat_id': value.vatId,
        'customer_id': value.customerId,
        'email': value.email,
        'same_as_billing': value.sameAsBilling,
        'customer_address_id': value.customerAddressId,
        'save_in_address_book': value.saveInAddressBook,
        'extension_attributes': QuoteDataAddressExtensionInterfaceToJSON(value.extensionAttributes),
        'custom_attributes': value.customAttributes === undefined ? undefined : ((value.customAttributes as Array<any>).map(FrameworkAttributeInterfaceToJSON)),
    };
}

