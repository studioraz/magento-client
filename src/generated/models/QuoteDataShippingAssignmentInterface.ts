/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { QuoteDataCartItemInterface } from './QuoteDataCartItemInterface';
import {
    QuoteDataCartItemInterfaceFromJSON,
    QuoteDataCartItemInterfaceFromJSONTyped,
    QuoteDataCartItemInterfaceToJSON,
} from './QuoteDataCartItemInterface';
import type { QuoteDataShippingInterface } from './QuoteDataShippingInterface';
import {
    QuoteDataShippingInterfaceFromJSON,
    QuoteDataShippingInterfaceFromJSONTyped,
    QuoteDataShippingInterfaceToJSON,
} from './QuoteDataShippingInterface';

/**
 * Interface ShippingAssignmentInterface
 * @export
 * @interface QuoteDataShippingAssignmentInterface
 */
export interface QuoteDataShippingAssignmentInterface {
    /**
     * 
     * @type {QuoteDataShippingInterface}
     * @memberof QuoteDataShippingAssignmentInterface
     */
    shipping: QuoteDataShippingInterface;
    /**
     * 
     * @type {Array<QuoteDataCartItemInterface>}
     * @memberof QuoteDataShippingAssignmentInterface
     */
    items: Array<QuoteDataCartItemInterface>;
    /**
     * ExtensionInterface class for @see \Magento\Quote\Api\Data\ShippingAssignmentInterface
     * @type {object}
     * @memberof QuoteDataShippingAssignmentInterface
     */
    extensionAttributes?: object;
}

/**
 * Check if a given object implements the QuoteDataShippingAssignmentInterface interface.
 */
export function instanceOfQuoteDataShippingAssignmentInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "shipping" in value;
    isInstance = isInstance && "items" in value;

    return isInstance;
}

export function QuoteDataShippingAssignmentInterfaceFromJSON(json: any): QuoteDataShippingAssignmentInterface {
    return QuoteDataShippingAssignmentInterfaceFromJSONTyped(json, false);
}

export function QuoteDataShippingAssignmentInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuoteDataShippingAssignmentInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'shipping': QuoteDataShippingInterfaceFromJSON(json['shipping']),
        'items': ((json['items'] as Array<any>).map(QuoteDataCartItemInterfaceFromJSON)),
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}

export function QuoteDataShippingAssignmentInterfaceToJSON(value?: QuoteDataShippingAssignmentInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'shipping': QuoteDataShippingInterfaceToJSON(value.shipping),
        'items': ((value.items as Array<any>).map(QuoteDataCartItemInterfaceToJSON)),
        'extension_attributes': value.extensionAttributes,
    };
}

