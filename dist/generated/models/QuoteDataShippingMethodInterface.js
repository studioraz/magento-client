"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.QuoteDataShippingMethodInterfaceToJSON = exports.QuoteDataShippingMethodInterfaceFromJSONTyped = exports.QuoteDataShippingMethodInterfaceFromJSON = exports.instanceOfQuoteDataShippingMethodInterface = void 0;
var runtime_1 = require("../runtime");
/**
 * Check if a given object implements the QuoteDataShippingMethodInterface interface.
 */
function instanceOfQuoteDataShippingMethodInterface(value) {
    var isInstance = true;
    isInstance = isInstance && "carrierCode" in value;
    isInstance = isInstance && "methodCode" in value;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "baseAmount" in value;
    isInstance = isInstance && "available" in value;
    isInstance = isInstance && "errorMessage" in value;
    isInstance = isInstance && "priceExclTax" in value;
    isInstance = isInstance && "priceInclTax" in value;
    return isInstance;
}
exports.instanceOfQuoteDataShippingMethodInterface = instanceOfQuoteDataShippingMethodInterface;
function QuoteDataShippingMethodInterfaceFromJSON(json) {
    return QuoteDataShippingMethodInterfaceFromJSONTyped(json, false);
}
exports.QuoteDataShippingMethodInterfaceFromJSON = QuoteDataShippingMethodInterfaceFromJSON;
function QuoteDataShippingMethodInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'carrierCode': json['carrier_code'],
        'methodCode': json['method_code'],
        'carrierTitle': !(0, runtime_1.exists)(json, 'carrier_title') ? undefined : json['carrier_title'],
        'methodTitle': !(0, runtime_1.exists)(json, 'method_title') ? undefined : json['method_title'],
        'amount': json['amount'],
        'baseAmount': json['base_amount'],
        'available': json['available'],
        'extensionAttributes': !(0, runtime_1.exists)(json, 'extension_attributes') ? undefined : json['extension_attributes'],
        'errorMessage': json['error_message'],
        'priceExclTax': json['price_excl_tax'],
        'priceInclTax': json['price_incl_tax'],
    };
}
exports.QuoteDataShippingMethodInterfaceFromJSONTyped = QuoteDataShippingMethodInterfaceFromJSONTyped;
function QuoteDataShippingMethodInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'carrier_code': value.carrierCode,
        'method_code': value.methodCode,
        'carrier_title': value.carrierTitle,
        'method_title': value.methodTitle,
        'amount': value.amount,
        'base_amount': value.baseAmount,
        'available': value.available,
        'extension_attributes': value.extensionAttributes,
        'error_message': value.errorMessage,
        'price_excl_tax': value.priceExclTax,
        'price_incl_tax': value.priceInclTax,
    };
}
exports.QuoteDataShippingMethodInterfaceToJSON = QuoteDataShippingMethodInterfaceToJSON;
//# sourceMappingURL=QuoteDataShippingMethodInterface.js.map