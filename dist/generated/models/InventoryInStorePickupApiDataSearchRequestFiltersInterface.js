"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InventoryInStorePickupApiDataSearchRequestFiltersInterfaceToJSON = exports.InventoryInStorePickupApiDataSearchRequestFiltersInterfaceFromJSONTyped = exports.InventoryInStorePickupApiDataSearchRequestFiltersInterfaceFromJSON = exports.instanceOfInventoryInStorePickupApiDataSearchRequestFiltersInterface = void 0;
var runtime_1 = require("../runtime");
var InventoryInStorePickupApiDataSearchRequestFilterInterface_1 = require("./InventoryInStorePickupApiDataSearchRequestFilterInterface");
/**
 * Check if a given object implements the InventoryInStorePickupApiDataSearchRequestFiltersInterface interface.
 */
function instanceOfInventoryInStorePickupApiDataSearchRequestFiltersInterface(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfInventoryInStorePickupApiDataSearchRequestFiltersInterface = instanceOfInventoryInStorePickupApiDataSearchRequestFiltersInterface;
function InventoryInStorePickupApiDataSearchRequestFiltersInterfaceFromJSON(json) {
    return InventoryInStorePickupApiDataSearchRequestFiltersInterfaceFromJSONTyped(json, false);
}
exports.InventoryInStorePickupApiDataSearchRequestFiltersInterfaceFromJSON = InventoryInStorePickupApiDataSearchRequestFiltersInterfaceFromJSON;
function InventoryInStorePickupApiDataSearchRequestFiltersInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'country': !(0, runtime_1.exists)(json, 'country') ? undefined : (0, InventoryInStorePickupApiDataSearchRequestFilterInterface_1.InventoryInStorePickupApiDataSearchRequestFilterInterfaceFromJSON)(json['country']),
        'postcode': !(0, runtime_1.exists)(json, 'postcode') ? undefined : (0, InventoryInStorePickupApiDataSearchRequestFilterInterface_1.InventoryInStorePickupApiDataSearchRequestFilterInterfaceFromJSON)(json['postcode']),
        'region': !(0, runtime_1.exists)(json, 'region') ? undefined : (0, InventoryInStorePickupApiDataSearchRequestFilterInterface_1.InventoryInStorePickupApiDataSearchRequestFilterInterfaceFromJSON)(json['region']),
        'regionId': !(0, runtime_1.exists)(json, 'region_id') ? undefined : (0, InventoryInStorePickupApiDataSearchRequestFilterInterface_1.InventoryInStorePickupApiDataSearchRequestFilterInterfaceFromJSON)(json['region_id']),
        'city': !(0, runtime_1.exists)(json, 'city') ? undefined : (0, InventoryInStorePickupApiDataSearchRequestFilterInterface_1.InventoryInStorePickupApiDataSearchRequestFilterInterfaceFromJSON)(json['city']),
        'street': !(0, runtime_1.exists)(json, 'street') ? undefined : (0, InventoryInStorePickupApiDataSearchRequestFilterInterface_1.InventoryInStorePickupApiDataSearchRequestFilterInterfaceFromJSON)(json['street']),
        'name': !(0, runtime_1.exists)(json, 'name') ? undefined : (0, InventoryInStorePickupApiDataSearchRequestFilterInterface_1.InventoryInStorePickupApiDataSearchRequestFilterInterfaceFromJSON)(json['name']),
        'pickupLocationCode': !(0, runtime_1.exists)(json, 'pickup_location_code') ? undefined : (0, InventoryInStorePickupApiDataSearchRequestFilterInterface_1.InventoryInStorePickupApiDataSearchRequestFilterInterfaceFromJSON)(json['pickup_location_code']),
    };
}
exports.InventoryInStorePickupApiDataSearchRequestFiltersInterfaceFromJSONTyped = InventoryInStorePickupApiDataSearchRequestFiltersInterfaceFromJSONTyped;
function InventoryInStorePickupApiDataSearchRequestFiltersInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'country': (0, InventoryInStorePickupApiDataSearchRequestFilterInterface_1.InventoryInStorePickupApiDataSearchRequestFilterInterfaceToJSON)(value.country),
        'postcode': (0, InventoryInStorePickupApiDataSearchRequestFilterInterface_1.InventoryInStorePickupApiDataSearchRequestFilterInterfaceToJSON)(value.postcode),
        'region': (0, InventoryInStorePickupApiDataSearchRequestFilterInterface_1.InventoryInStorePickupApiDataSearchRequestFilterInterfaceToJSON)(value.region),
        'region_id': (0, InventoryInStorePickupApiDataSearchRequestFilterInterface_1.InventoryInStorePickupApiDataSearchRequestFilterInterfaceToJSON)(value.regionId),
        'city': (0, InventoryInStorePickupApiDataSearchRequestFilterInterface_1.InventoryInStorePickupApiDataSearchRequestFilterInterfaceToJSON)(value.city),
        'street': (0, InventoryInStorePickupApiDataSearchRequestFilterInterface_1.InventoryInStorePickupApiDataSearchRequestFilterInterfaceToJSON)(value.street),
        'name': (0, InventoryInStorePickupApiDataSearchRequestFilterInterface_1.InventoryInStorePickupApiDataSearchRequestFilterInterfaceToJSON)(value.name),
        'pickup_location_code': (0, InventoryInStorePickupApiDataSearchRequestFilterInterface_1.InventoryInStorePickupApiDataSearchRequestFilterInterfaceToJSON)(value.pickupLocationCode),
    };
}
exports.InventoryInStorePickupApiDataSearchRequestFiltersInterfaceToJSON = InventoryInStorePickupApiDataSearchRequestFiltersInterfaceToJSON;
//# sourceMappingURL=InventoryInStorePickupApiDataSearchRequestFiltersInterface.js.map