"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.QuoteDataAddressInterfaceToJSON = exports.QuoteDataAddressInterfaceFromJSONTyped = exports.QuoteDataAddressInterfaceFromJSON = exports.instanceOfQuoteDataAddressInterface = void 0;
var runtime_1 = require("../runtime");
var FrameworkAttributeInterface_1 = require("./FrameworkAttributeInterface");
var QuoteDataAddressExtensionInterface_1 = require("./QuoteDataAddressExtensionInterface");
/**
 * Check if a given object implements the QuoteDataAddressInterface interface.
 */
function instanceOfQuoteDataAddressInterface(value) {
    var isInstance = true;
    isInstance = isInstance && "region" in value;
    isInstance = isInstance && "regionId" in value;
    isInstance = isInstance && "regionCode" in value;
    isInstance = isInstance && "countryId" in value;
    isInstance = isInstance && "street" in value;
    isInstance = isInstance && "telephone" in value;
    isInstance = isInstance && "postcode" in value;
    isInstance = isInstance && "city" in value;
    isInstance = isInstance && "firstname" in value;
    isInstance = isInstance && "lastname" in value;
    isInstance = isInstance && "email" in value;
    return isInstance;
}
exports.instanceOfQuoteDataAddressInterface = instanceOfQuoteDataAddressInterface;
function QuoteDataAddressInterfaceFromJSON(json) {
    return QuoteDataAddressInterfaceFromJSONTyped(json, false);
}
exports.QuoteDataAddressInterfaceFromJSON = QuoteDataAddressInterfaceFromJSON;
function QuoteDataAddressInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        'region': json['region'],
        'regionId': json['region_id'],
        'regionCode': json['region_code'],
        'countryId': json['country_id'],
        'street': json['street'],
        'company': !(0, runtime_1.exists)(json, 'company') ? undefined : json['company'],
        'telephone': json['telephone'],
        'fax': !(0, runtime_1.exists)(json, 'fax') ? undefined : json['fax'],
        'postcode': json['postcode'],
        'city': json['city'],
        'firstname': json['firstname'],
        'lastname': json['lastname'],
        'middlename': !(0, runtime_1.exists)(json, 'middlename') ? undefined : json['middlename'],
        'prefix': !(0, runtime_1.exists)(json, 'prefix') ? undefined : json['prefix'],
        'suffix': !(0, runtime_1.exists)(json, 'suffix') ? undefined : json['suffix'],
        'vatId': !(0, runtime_1.exists)(json, 'vat_id') ? undefined : json['vat_id'],
        'customerId': !(0, runtime_1.exists)(json, 'customer_id') ? undefined : json['customer_id'],
        'email': json['email'],
        'sameAsBilling': !(0, runtime_1.exists)(json, 'same_as_billing') ? undefined : json['same_as_billing'],
        'customerAddressId': !(0, runtime_1.exists)(json, 'customer_address_id') ? undefined : json['customer_address_id'],
        'saveInAddressBook': !(0, runtime_1.exists)(json, 'save_in_address_book') ? undefined : json['save_in_address_book'],
        'extensionAttributes': !(0, runtime_1.exists)(json, 'extension_attributes') ? undefined : (0, QuoteDataAddressExtensionInterface_1.QuoteDataAddressExtensionInterfaceFromJSON)(json['extension_attributes']),
        'customAttributes': !(0, runtime_1.exists)(json, 'custom_attributes') ? undefined : (json['custom_attributes'].map(FrameworkAttributeInterface_1.FrameworkAttributeInterfaceFromJSON)),
    };
}
exports.QuoteDataAddressInterfaceFromJSONTyped = QuoteDataAddressInterfaceFromJSONTyped;
function QuoteDataAddressInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'region': value.region,
        'region_id': value.regionId,
        'region_code': value.regionCode,
        'country_id': value.countryId,
        'street': value.street,
        'company': value.company,
        'telephone': value.telephone,
        'fax': value.fax,
        'postcode': value.postcode,
        'city': value.city,
        'firstname': value.firstname,
        'lastname': value.lastname,
        'middlename': value.middlename,
        'prefix': value.prefix,
        'suffix': value.suffix,
        'vat_id': value.vatId,
        'customer_id': value.customerId,
        'email': value.email,
        'same_as_billing': value.sameAsBilling,
        'customer_address_id': value.customerAddressId,
        'save_in_address_book': value.saveInAddressBook,
        'extension_attributes': (0, QuoteDataAddressExtensionInterface_1.QuoteDataAddressExtensionInterfaceToJSON)(value.extensionAttributes),
        'custom_attributes': value.customAttributes === undefined ? undefined : (value.customAttributes.map(FrameworkAttributeInterface_1.FrameworkAttributeInterfaceToJSON)),
    };
}
exports.QuoteDataAddressInterfaceToJSON = QuoteDataAddressInterfaceToJSON;
//# sourceMappingURL=QuoteDataAddressInterface.js.map