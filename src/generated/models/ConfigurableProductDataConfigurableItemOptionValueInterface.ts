/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Interface ConfigurableItemOptionValueInterface
 * @export
 * @interface ConfigurableProductDataConfigurableItemOptionValueInterface
 */
export interface ConfigurableProductDataConfigurableItemOptionValueInterface {
    /**
     * Option SKU
     * @type {string}
     * @memberof ConfigurableProductDataConfigurableItemOptionValueInterface
     */
    optionId: string;
    /**
     * Item id
     * @type {number}
     * @memberof ConfigurableProductDataConfigurableItemOptionValueInterface
     */
    optionValue?: number;
    /**
     * ExtensionInterface class for @see \Magento\ConfigurableProduct\Api\Data\ConfigurableItemOptionValueInterface
     * @type {object}
     * @memberof ConfigurableProductDataConfigurableItemOptionValueInterface
     */
    extensionAttributes?: object;
}

/**
 * Check if a given object implements the ConfigurableProductDataConfigurableItemOptionValueInterface interface.
 */
export function instanceOfConfigurableProductDataConfigurableItemOptionValueInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "optionId" in value;

    return isInstance;
}

export function ConfigurableProductDataConfigurableItemOptionValueInterfaceFromJSON(json: any): ConfigurableProductDataConfigurableItemOptionValueInterface {
    return ConfigurableProductDataConfigurableItemOptionValueInterfaceFromJSONTyped(json, false);
}

export function ConfigurableProductDataConfigurableItemOptionValueInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ConfigurableProductDataConfigurableItemOptionValueInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'optionId': json['option_id'],
        'optionValue': !exists(json, 'option_value') ? undefined : json['option_value'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}

export function ConfigurableProductDataConfigurableItemOptionValueInterfaceToJSON(value?: ConfigurableProductDataConfigurableItemOptionValueInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'option_id': value.optionId,
        'option_value': value.optionValue,
        'extension_attributes': value.extensionAttributes,
    };
}

