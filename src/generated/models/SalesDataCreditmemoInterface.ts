/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SalesDataCreditmemoCommentInterface } from './SalesDataCreditmemoCommentInterface';
import {
    SalesDataCreditmemoCommentInterfaceFromJSON,
    SalesDataCreditmemoCommentInterfaceFromJSONTyped,
    SalesDataCreditmemoCommentInterfaceToJSON,
} from './SalesDataCreditmemoCommentInterface';
import type { SalesDataCreditmemoItemInterface } from './SalesDataCreditmemoItemInterface';
import {
    SalesDataCreditmemoItemInterfaceFromJSON,
    SalesDataCreditmemoItemInterfaceFromJSONTyped,
    SalesDataCreditmemoItemInterfaceToJSON,
} from './SalesDataCreditmemoItemInterface';

/**
 * Credit memo interface. After a customer places and pays for an order and an invoice has been issued, the merchant can create a credit memo to refund all or part of the amount paid for any returned or undelivered items. The memo restores funds to the customer account so that the customer can make future purchases.
 * @export
 * @interface SalesDataCreditmemoInterface
 */
export interface SalesDataCreditmemoInterface {
    /**
     * Credit memo adjustment.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    adjustment?: number;
    /**
     * Credit memo negative adjustment.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    adjustmentNegative?: number;
    /**
     * Credit memo positive adjustment.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    adjustmentPositive?: number;
    /**
     * Credit memo base adjustment.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    baseAdjustment?: number;
    /**
     * Credit memo negative base adjustment.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    baseAdjustmentNegative?: number;
    /**
     * Credit memo positive base adjustment.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    baseAdjustmentPositive?: number;
    /**
     * Credit memo base currency code.
     * @type {string}
     * @memberof SalesDataCreditmemoInterface
     */
    baseCurrencyCode?: string;
    /**
     * Credit memo base discount amount.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    baseDiscountAmount?: number;
    /**
     * Credit memo base grand total.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    baseGrandTotal?: number;
    /**
     * Credit memo base discount tax compensation amount.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    baseDiscountTaxCompensationAmount?: number;
    /**
     * Credit memo base shipping amount.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    baseShippingAmount?: number;
    /**
     * Credit memo base shipping discount tax compensation amount.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    baseShippingDiscountTaxCompensationAmnt?: number;
    /**
     * Credit memo base shipping including tax.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    baseShippingInclTax?: number;
    /**
     * Credit memo base shipping tax amount.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    baseShippingTaxAmount?: number;
    /**
     * Credit memo base subtotal.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    baseSubtotal?: number;
    /**
     * Credit memo base subtotal including tax.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    baseSubtotalInclTax?: number;
    /**
     * Credit memo base tax amount.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    baseTaxAmount?: number;
    /**
     * Credit memo base-to-global rate.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    baseToGlobalRate?: number;
    /**
     * Credit memo base-to-order rate.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    baseToOrderRate?: number;
    /**
     * Credit memo billing address ID.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    billingAddressId?: number;
    /**
     * Credit memo created-at timestamp.
     * @type {string}
     * @memberof SalesDataCreditmemoInterface
     */
    createdAt?: string;
    /**
     * Credit memo status.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    creditmemoStatus?: number;
    /**
     * Credit memo discount amount.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    discountAmount?: number;
    /**
     * Credit memo discount description.
     * @type {string}
     * @memberof SalesDataCreditmemoInterface
     */
    discountDescription?: string;
    /**
     * Credit memo email sent flag value.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    emailSent?: number;
    /**
     * Credit memo ID.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    entityId?: number;
    /**
     * Credit memo global currency code.
     * @type {string}
     * @memberof SalesDataCreditmemoInterface
     */
    globalCurrencyCode?: string;
    /**
     * Credit memo grand total.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    grandTotal?: number;
    /**
     * Credit memo discount tax compensation amount.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    discountTaxCompensationAmount?: number;
    /**
     * Credit memo increment ID.
     * @type {string}
     * @memberof SalesDataCreditmemoInterface
     */
    incrementId?: string;
    /**
     * Credit memo invoice ID.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    invoiceId?: number;
    /**
     * Credit memo order currency code.
     * @type {string}
     * @memberof SalesDataCreditmemoInterface
     */
    orderCurrencyCode?: string;
    /**
     * Credit memo order ID.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    orderId: number;
    /**
     * Credit memo shipping address ID.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    shippingAddressId?: number;
    /**
     * Credit memo shipping amount.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    shippingAmount?: number;
    /**
     * Credit memo shipping discount tax compensation amount.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    shippingDiscountTaxCompensationAmount?: number;
    /**
     * Credit memo shipping including tax.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    shippingInclTax?: number;
    /**
     * Credit memo shipping tax amount.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    shippingTaxAmount?: number;
    /**
     * Credit memo state.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    state?: number;
    /**
     * Credit memo store currency code.
     * @type {string}
     * @memberof SalesDataCreditmemoInterface
     */
    storeCurrencyCode?: string;
    /**
     * Credit memo store ID.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    storeId?: number;
    /**
     * Credit memo store-to-base rate.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    storeToBaseRate?: number;
    /**
     * Credit memo store-to-order rate.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    storeToOrderRate?: number;
    /**
     * Credit memo subtotal.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    subtotal?: number;
    /**
     * Credit memo subtotal including tax.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    subtotalInclTax?: number;
    /**
     * Credit memo tax amount.
     * @type {number}
     * @memberof SalesDataCreditmemoInterface
     */
    taxAmount?: number;
    /**
     * Credit memo transaction ID.
     * @type {string}
     * @memberof SalesDataCreditmemoInterface
     */
    transactionId?: string;
    /**
     * Credit memo updated-at timestamp.
     * @type {string}
     * @memberof SalesDataCreditmemoInterface
     */
    updatedAt?: string;
    /**
     * Array of credit memo items.
     * @type {Array<SalesDataCreditmemoItemInterface>}
     * @memberof SalesDataCreditmemoInterface
     */
    items: Array<SalesDataCreditmemoItemInterface>;
    /**
     * Array of any credit memo comments. Otherwise, null.
     * @type {Array<SalesDataCreditmemoCommentInterface>}
     * @memberof SalesDataCreditmemoInterface
     */
    comments?: Array<SalesDataCreditmemoCommentInterface>;
    /**
     * ExtensionInterface class for @see \Magento\Sales\Api\Data\CreditmemoInterface
     * @type {object}
     * @memberof SalesDataCreditmemoInterface
     */
    extensionAttributes?: object;
}

/**
 * Check if a given object implements the SalesDataCreditmemoInterface interface.
 */
export function instanceOfSalesDataCreditmemoInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "orderId" in value;
    isInstance = isInstance && "items" in value;

    return isInstance;
}

export function SalesDataCreditmemoInterfaceFromJSON(json: any): SalesDataCreditmemoInterface {
    return SalesDataCreditmemoInterfaceFromJSONTyped(json, false);
}

export function SalesDataCreditmemoInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): SalesDataCreditmemoInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'adjustment': !exists(json, 'adjustment') ? undefined : json['adjustment'],
        'adjustmentNegative': !exists(json, 'adjustment_negative') ? undefined : json['adjustment_negative'],
        'adjustmentPositive': !exists(json, 'adjustment_positive') ? undefined : json['adjustment_positive'],
        'baseAdjustment': !exists(json, 'base_adjustment') ? undefined : json['base_adjustment'],
        'baseAdjustmentNegative': !exists(json, 'base_adjustment_negative') ? undefined : json['base_adjustment_negative'],
        'baseAdjustmentPositive': !exists(json, 'base_adjustment_positive') ? undefined : json['base_adjustment_positive'],
        'baseCurrencyCode': !exists(json, 'base_currency_code') ? undefined : json['base_currency_code'],
        'baseDiscountAmount': !exists(json, 'base_discount_amount') ? undefined : json['base_discount_amount'],
        'baseGrandTotal': !exists(json, 'base_grand_total') ? undefined : json['base_grand_total'],
        'baseDiscountTaxCompensationAmount': !exists(json, 'base_discount_tax_compensation_amount') ? undefined : json['base_discount_tax_compensation_amount'],
        'baseShippingAmount': !exists(json, 'base_shipping_amount') ? undefined : json['base_shipping_amount'],
        'baseShippingDiscountTaxCompensationAmnt': !exists(json, 'base_shipping_discount_tax_compensation_amnt') ? undefined : json['base_shipping_discount_tax_compensation_amnt'],
        'baseShippingInclTax': !exists(json, 'base_shipping_incl_tax') ? undefined : json['base_shipping_incl_tax'],
        'baseShippingTaxAmount': !exists(json, 'base_shipping_tax_amount') ? undefined : json['base_shipping_tax_amount'],
        'baseSubtotal': !exists(json, 'base_subtotal') ? undefined : json['base_subtotal'],
        'baseSubtotalInclTax': !exists(json, 'base_subtotal_incl_tax') ? undefined : json['base_subtotal_incl_tax'],
        'baseTaxAmount': !exists(json, 'base_tax_amount') ? undefined : json['base_tax_amount'],
        'baseToGlobalRate': !exists(json, 'base_to_global_rate') ? undefined : json['base_to_global_rate'],
        'baseToOrderRate': !exists(json, 'base_to_order_rate') ? undefined : json['base_to_order_rate'],
        'billingAddressId': !exists(json, 'billing_address_id') ? undefined : json['billing_address_id'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'creditmemoStatus': !exists(json, 'creditmemo_status') ? undefined : json['creditmemo_status'],
        'discountAmount': !exists(json, 'discount_amount') ? undefined : json['discount_amount'],
        'discountDescription': !exists(json, 'discount_description') ? undefined : json['discount_description'],
        'emailSent': !exists(json, 'email_sent') ? undefined : json['email_sent'],
        'entityId': !exists(json, 'entity_id') ? undefined : json['entity_id'],
        'globalCurrencyCode': !exists(json, 'global_currency_code') ? undefined : json['global_currency_code'],
        'grandTotal': !exists(json, 'grand_total') ? undefined : json['grand_total'],
        'discountTaxCompensationAmount': !exists(json, 'discount_tax_compensation_amount') ? undefined : json['discount_tax_compensation_amount'],
        'incrementId': !exists(json, 'increment_id') ? undefined : json['increment_id'],
        'invoiceId': !exists(json, 'invoice_id') ? undefined : json['invoice_id'],
        'orderCurrencyCode': !exists(json, 'order_currency_code') ? undefined : json['order_currency_code'],
        'orderId': json['order_id'],
        'shippingAddressId': !exists(json, 'shipping_address_id') ? undefined : json['shipping_address_id'],
        'shippingAmount': !exists(json, 'shipping_amount') ? undefined : json['shipping_amount'],
        'shippingDiscountTaxCompensationAmount': !exists(json, 'shipping_discount_tax_compensation_amount') ? undefined : json['shipping_discount_tax_compensation_amount'],
        'shippingInclTax': !exists(json, 'shipping_incl_tax') ? undefined : json['shipping_incl_tax'],
        'shippingTaxAmount': !exists(json, 'shipping_tax_amount') ? undefined : json['shipping_tax_amount'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'storeCurrencyCode': !exists(json, 'store_currency_code') ? undefined : json['store_currency_code'],
        'storeId': !exists(json, 'store_id') ? undefined : json['store_id'],
        'storeToBaseRate': !exists(json, 'store_to_base_rate') ? undefined : json['store_to_base_rate'],
        'storeToOrderRate': !exists(json, 'store_to_order_rate') ? undefined : json['store_to_order_rate'],
        'subtotal': !exists(json, 'subtotal') ? undefined : json['subtotal'],
        'subtotalInclTax': !exists(json, 'subtotal_incl_tax') ? undefined : json['subtotal_incl_tax'],
        'taxAmount': !exists(json, 'tax_amount') ? undefined : json['tax_amount'],
        'transactionId': !exists(json, 'transaction_id') ? undefined : json['transaction_id'],
        'updatedAt': !exists(json, 'updated_at') ? undefined : json['updated_at'],
        'items': ((json['items'] as Array<any>).map(SalesDataCreditmemoItemInterfaceFromJSON)),
        'comments': !exists(json, 'comments') ? undefined : ((json['comments'] as Array<any>).map(SalesDataCreditmemoCommentInterfaceFromJSON)),
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}

export function SalesDataCreditmemoInterfaceToJSON(value?: SalesDataCreditmemoInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'adjustment': value.adjustment,
        'adjustment_negative': value.adjustmentNegative,
        'adjustment_positive': value.adjustmentPositive,
        'base_adjustment': value.baseAdjustment,
        'base_adjustment_negative': value.baseAdjustmentNegative,
        'base_adjustment_positive': value.baseAdjustmentPositive,
        'base_currency_code': value.baseCurrencyCode,
        'base_discount_amount': value.baseDiscountAmount,
        'base_grand_total': value.baseGrandTotal,
        'base_discount_tax_compensation_amount': value.baseDiscountTaxCompensationAmount,
        'base_shipping_amount': value.baseShippingAmount,
        'base_shipping_discount_tax_compensation_amnt': value.baseShippingDiscountTaxCompensationAmnt,
        'base_shipping_incl_tax': value.baseShippingInclTax,
        'base_shipping_tax_amount': value.baseShippingTaxAmount,
        'base_subtotal': value.baseSubtotal,
        'base_subtotal_incl_tax': value.baseSubtotalInclTax,
        'base_tax_amount': value.baseTaxAmount,
        'base_to_global_rate': value.baseToGlobalRate,
        'base_to_order_rate': value.baseToOrderRate,
        'billing_address_id': value.billingAddressId,
        'created_at': value.createdAt,
        'creditmemo_status': value.creditmemoStatus,
        'discount_amount': value.discountAmount,
        'discount_description': value.discountDescription,
        'email_sent': value.emailSent,
        'entity_id': value.entityId,
        'global_currency_code': value.globalCurrencyCode,
        'grand_total': value.grandTotal,
        'discount_tax_compensation_amount': value.discountTaxCompensationAmount,
        'increment_id': value.incrementId,
        'invoice_id': value.invoiceId,
        'order_currency_code': value.orderCurrencyCode,
        'order_id': value.orderId,
        'shipping_address_id': value.shippingAddressId,
        'shipping_amount': value.shippingAmount,
        'shipping_discount_tax_compensation_amount': value.shippingDiscountTaxCompensationAmount,
        'shipping_incl_tax': value.shippingInclTax,
        'shipping_tax_amount': value.shippingTaxAmount,
        'state': value.state,
        'store_currency_code': value.storeCurrencyCode,
        'store_id': value.storeId,
        'store_to_base_rate': value.storeToBaseRate,
        'store_to_order_rate': value.storeToOrderRate,
        'subtotal': value.subtotal,
        'subtotal_incl_tax': value.subtotalInclTax,
        'tax_amount': value.taxAmount,
        'transaction_id': value.transactionId,
        'updated_at': value.updatedAt,
        'items': ((value.items as Array<any>).map(SalesDataCreditmemoItemInterfaceToJSON)),
        'comments': value.comments === undefined ? undefined : ((value.comments as Array<any>).map(SalesDataCreditmemoCommentInterfaceToJSON)),
        'extension_attributes': value.extensionAttributes,
    };
}

