/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CatalogDataProductAttributeMediaGalleryEntryInterface } from './CatalogDataProductAttributeMediaGalleryEntryInterface';
import type { CatalogDataProductCustomOptionInterface } from './CatalogDataProductCustomOptionInterface';
import type { CatalogDataProductExtensionInterface } from './CatalogDataProductExtensionInterface';
import type { CatalogDataProductLinkInterface } from './CatalogDataProductLinkInterface';
import type { CatalogDataProductTierPriceInterface } from './CatalogDataProductTierPriceInterface';
import type { FrameworkAttributeInterface } from './FrameworkAttributeInterface';
/**
 *
 * @export
 * @interface CatalogDataProductInterface
 */
export interface CatalogDataProductInterface {
    /**
     * Id
     * @type {number}
     * @memberof CatalogDataProductInterface
     */
    id?: number;
    /**
     * Sku
     * @type {string}
     * @memberof CatalogDataProductInterface
     */
    sku: string;
    /**
     * Name
     * @type {string}
     * @memberof CatalogDataProductInterface
     */
    name?: string;
    /**
     * Attribute set id
     * @type {number}
     * @memberof CatalogDataProductInterface
     */
    attributeSetId?: number;
    /**
     * Price
     * @type {number}
     * @memberof CatalogDataProductInterface
     */
    price?: number;
    /**
     * Status
     * @type {number}
     * @memberof CatalogDataProductInterface
     */
    status?: number;
    /**
     * Visibility
     * @type {number}
     * @memberof CatalogDataProductInterface
     */
    visibility?: number;
    /**
     * Type id
     * @type {string}
     * @memberof CatalogDataProductInterface
     */
    typeId?: string;
    /**
     * Created date
     * @type {string}
     * @memberof CatalogDataProductInterface
     */
    createdAt?: string;
    /**
     * Updated date
     * @type {string}
     * @memberof CatalogDataProductInterface
     */
    updatedAt?: string;
    /**
     * Weight
     * @type {number}
     * @memberof CatalogDataProductInterface
     */
    weight?: number;
    /**
     *
     * @type {CatalogDataProductExtensionInterface}
     * @memberof CatalogDataProductInterface
     */
    extensionAttributes?: CatalogDataProductExtensionInterface;
    /**
     * Product links info
     * @type {Array<CatalogDataProductLinkInterface>}
     * @memberof CatalogDataProductInterface
     */
    productLinks?: Array<CatalogDataProductLinkInterface>;
    /**
     * List of product options
     * @type {Array<CatalogDataProductCustomOptionInterface>}
     * @memberof CatalogDataProductInterface
     */
    options?: Array<CatalogDataProductCustomOptionInterface>;
    /**
     * Media gallery entries
     * @type {Array<CatalogDataProductAttributeMediaGalleryEntryInterface>}
     * @memberof CatalogDataProductInterface
     */
    mediaGalleryEntries?: Array<CatalogDataProductAttributeMediaGalleryEntryInterface>;
    /**
     * List of product tier prices
     * @type {Array<CatalogDataProductTierPriceInterface>}
     * @memberof CatalogDataProductInterface
     */
    tierPrices?: Array<CatalogDataProductTierPriceInterface>;
    /**
     * Custom attributes values.
     * @type {Array<FrameworkAttributeInterface>}
     * @memberof CatalogDataProductInterface
     */
    customAttributes?: Array<FrameworkAttributeInterface>;
}
/**
 * Check if a given object implements the CatalogDataProductInterface interface.
 */
export declare function instanceOfCatalogDataProductInterface(value: object): boolean;
export declare function CatalogDataProductInterfaceFromJSON(json: any): CatalogDataProductInterface;
export declare function CatalogDataProductInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogDataProductInterface;
export declare function CatalogDataProductInterfaceToJSON(value?: CatalogDataProductInterface | null): any;
