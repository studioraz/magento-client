"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InventorySourceSelectionApiDataInventoryRequestInterfaceToJSON = exports.InventorySourceSelectionApiDataInventoryRequestInterfaceFromJSONTyped = exports.InventorySourceSelectionApiDataInventoryRequestInterfaceFromJSON = exports.instanceOfInventorySourceSelectionApiDataInventoryRequestInterface = void 0;
var runtime_1 = require("../runtime");
var InventorySourceSelectionApiDataInventoryRequestExtensionInterface_1 = require("./InventorySourceSelectionApiDataInventoryRequestExtensionInterface");
var InventorySourceSelectionApiDataItemRequestInterface_1 = require("./InventorySourceSelectionApiDataItemRequestInterface");
/**
 * Check if a given object implements the InventorySourceSelectionApiDataInventoryRequestInterface interface.
 */
function instanceOfInventorySourceSelectionApiDataInventoryRequestInterface(value) {
    var isInstance = true;
    isInstance = isInstance && "stockId" in value;
    isInstance = isInstance && "items" in value;
    return isInstance;
}
exports.instanceOfInventorySourceSelectionApiDataInventoryRequestInterface = instanceOfInventorySourceSelectionApiDataInventoryRequestInterface;
function InventorySourceSelectionApiDataInventoryRequestInterfaceFromJSON(json) {
    return InventorySourceSelectionApiDataInventoryRequestInterfaceFromJSONTyped(json, false);
}
exports.InventorySourceSelectionApiDataInventoryRequestInterfaceFromJSON = InventorySourceSelectionApiDataInventoryRequestInterfaceFromJSON;
function InventorySourceSelectionApiDataInventoryRequestInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'stockId': json['stock_id'],
        'items': (json['items'].map(InventorySourceSelectionApiDataItemRequestInterface_1.InventorySourceSelectionApiDataItemRequestInterfaceFromJSON)),
        'extensionAttributes': !(0, runtime_1.exists)(json, 'extension_attributes') ? undefined : (0, InventorySourceSelectionApiDataInventoryRequestExtensionInterface_1.InventorySourceSelectionApiDataInventoryRequestExtensionInterfaceFromJSON)(json['extension_attributes']),
    };
}
exports.InventorySourceSelectionApiDataInventoryRequestInterfaceFromJSONTyped = InventorySourceSelectionApiDataInventoryRequestInterfaceFromJSONTyped;
function InventorySourceSelectionApiDataInventoryRequestInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'stock_id': value.stockId,
        'items': (value.items.map(InventorySourceSelectionApiDataItemRequestInterface_1.InventorySourceSelectionApiDataItemRequestInterfaceToJSON)),
        'extension_attributes': (0, InventorySourceSelectionApiDataInventoryRequestExtensionInterface_1.InventorySourceSelectionApiDataInventoryRequestExtensionInterfaceToJSON)(value.extensionAttributes),
    };
}
exports.InventorySourceSelectionApiDataInventoryRequestInterfaceToJSON = InventorySourceSelectionApiDataInventoryRequestInterfaceToJSON;
//# sourceMappingURL=InventorySourceSelectionApiDataInventoryRequestInterface.js.map