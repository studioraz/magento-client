"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DirectoryDataCurrencyInformationInterfaceToJSON = exports.DirectoryDataCurrencyInformationInterfaceFromJSONTyped = exports.DirectoryDataCurrencyInformationInterfaceFromJSON = exports.instanceOfDirectoryDataCurrencyInformationInterface = void 0;
var runtime_1 = require("../runtime");
var DirectoryDataExchangeRateInterface_1 = require("./DirectoryDataExchangeRateInterface");
/**
 * Check if a given object implements the DirectoryDataCurrencyInformationInterface interface.
 */
function instanceOfDirectoryDataCurrencyInformationInterface(value) {
    var isInstance = true;
    isInstance = isInstance && "baseCurrencyCode" in value;
    isInstance = isInstance && "baseCurrencySymbol" in value;
    isInstance = isInstance && "defaultDisplayCurrencyCode" in value;
    isInstance = isInstance && "defaultDisplayCurrencySymbol" in value;
    isInstance = isInstance && "availableCurrencyCodes" in value;
    isInstance = isInstance && "exchangeRates" in value;
    return isInstance;
}
exports.instanceOfDirectoryDataCurrencyInformationInterface = instanceOfDirectoryDataCurrencyInformationInterface;
function DirectoryDataCurrencyInformationInterfaceFromJSON(json) {
    return DirectoryDataCurrencyInformationInterfaceFromJSONTyped(json, false);
}
exports.DirectoryDataCurrencyInformationInterfaceFromJSON = DirectoryDataCurrencyInformationInterfaceFromJSON;
function DirectoryDataCurrencyInformationInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'baseCurrencyCode': json['base_currency_code'],
        'baseCurrencySymbol': json['base_currency_symbol'],
        'defaultDisplayCurrencyCode': json['default_display_currency_code'],
        'defaultDisplayCurrencySymbol': json['default_display_currency_symbol'],
        'availableCurrencyCodes': json['available_currency_codes'],
        'exchangeRates': (json['exchange_rates'].map(DirectoryDataExchangeRateInterface_1.DirectoryDataExchangeRateInterfaceFromJSON)),
        'extensionAttributes': !(0, runtime_1.exists)(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}
exports.DirectoryDataCurrencyInformationInterfaceFromJSONTyped = DirectoryDataCurrencyInformationInterfaceFromJSONTyped;
function DirectoryDataCurrencyInformationInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'base_currency_code': value.baseCurrencyCode,
        'base_currency_symbol': value.baseCurrencySymbol,
        'default_display_currency_code': value.defaultDisplayCurrencyCode,
        'default_display_currency_symbol': value.defaultDisplayCurrencySymbol,
        'available_currency_codes': value.availableCurrencyCodes,
        'exchange_rates': (value.exchangeRates.map(DirectoryDataExchangeRateInterface_1.DirectoryDataExchangeRateInterfaceToJSON)),
        'extension_attributes': value.extensionAttributes,
    };
}
exports.DirectoryDataCurrencyInformationInterfaceToJSON = DirectoryDataCurrencyInformationInterfaceToJSON;
//# sourceMappingURL=DirectoryDataCurrencyInformationInterface.js.map