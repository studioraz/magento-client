/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CustomerDataGroupExtensionInterface } from './CustomerDataGroupExtensionInterface';
import {
    CustomerDataGroupExtensionInterfaceFromJSON,
    CustomerDataGroupExtensionInterfaceFromJSONTyped,
    CustomerDataGroupExtensionInterfaceToJSON,
} from './CustomerDataGroupExtensionInterface';

/**
 * Customer group interface.
 * @export
 * @interface CustomerDataGroupInterface
 */
export interface CustomerDataGroupInterface {
    /**
     * Id
     * @type {number}
     * @memberof CustomerDataGroupInterface
     */
    id?: number;
    /**
     * Code
     * @type {string}
     * @memberof CustomerDataGroupInterface
     */
    code: string;
    /**
     * Tax class id
     * @type {number}
     * @memberof CustomerDataGroupInterface
     */
    taxClassId: number;
    /**
     * Tax class name
     * @type {string}
     * @memberof CustomerDataGroupInterface
     */
    taxClassName?: string;
    /**
     * 
     * @type {CustomerDataGroupExtensionInterface}
     * @memberof CustomerDataGroupInterface
     */
    extensionAttributes?: CustomerDataGroupExtensionInterface;
}

/**
 * Check if a given object implements the CustomerDataGroupInterface interface.
 */
export function instanceOfCustomerDataGroupInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "code" in value;
    isInstance = isInstance && "taxClassId" in value;

    return isInstance;
}

export function CustomerDataGroupInterfaceFromJSON(json: any): CustomerDataGroupInterface {
    return CustomerDataGroupInterfaceFromJSONTyped(json, false);
}

export function CustomerDataGroupInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerDataGroupInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'code': json['code'],
        'taxClassId': json['tax_class_id'],
        'taxClassName': !exists(json, 'tax_class_name') ? undefined : json['tax_class_name'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : CustomerDataGroupExtensionInterfaceFromJSON(json['extension_attributes']),
    };
}

export function CustomerDataGroupInterfaceToJSON(value?: CustomerDataGroupInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'code': value.code,
        'tax_class_id': value.taxClassId,
        'tax_class_name': value.taxClassName,
        'extension_attributes': CustomerDataGroupExtensionInterfaceToJSON(value.extensionAttributes),
    };
}

