/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { VaultDataPaymentTokenInterface } from './VaultDataPaymentTokenInterface';
import {
    VaultDataPaymentTokenInterfaceFromJSON,
    VaultDataPaymentTokenInterfaceFromJSONTyped,
    VaultDataPaymentTokenInterfaceToJSON,
} from './VaultDataPaymentTokenInterface';

/**
 * ExtensionInterface class for @see \Magento\Sales\Api\Data\OrderPaymentInterface
 * @export
 * @interface SalesDataOrderPaymentExtensionInterface
 */
export interface SalesDataOrderPaymentExtensionInterface {
    /**
     * 
     * @type {string}
     * @memberof SalesDataOrderPaymentExtensionInterface
     */
    notificationMessage?: string;
    /**
     * 
     * @type {VaultDataPaymentTokenInterface}
     * @memberof SalesDataOrderPaymentExtensionInterface
     */
    vaultPaymentToken?: VaultDataPaymentTokenInterface;
}

/**
 * Check if a given object implements the SalesDataOrderPaymentExtensionInterface interface.
 */
export function instanceOfSalesDataOrderPaymentExtensionInterface(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SalesDataOrderPaymentExtensionInterfaceFromJSON(json: any): SalesDataOrderPaymentExtensionInterface {
    return SalesDataOrderPaymentExtensionInterfaceFromJSONTyped(json, false);
}

export function SalesDataOrderPaymentExtensionInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): SalesDataOrderPaymentExtensionInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'notificationMessage': !exists(json, 'notification_message') ? undefined : json['notification_message'],
        'vaultPaymentToken': !exists(json, 'vault_payment_token') ? undefined : VaultDataPaymentTokenInterfaceFromJSON(json['vault_payment_token']),
    };
}

export function SalesDataOrderPaymentExtensionInterfaceToJSON(value?: SalesDataOrderPaymentExtensionInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'notification_message': value.notificationMessage,
        'vault_payment_token': VaultDataPaymentTokenInterfaceToJSON(value.vaultPaymentToken),
    };
}

