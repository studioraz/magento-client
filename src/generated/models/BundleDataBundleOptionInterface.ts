/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Interface BundleOptionInterface
 * @export
 * @interface BundleDataBundleOptionInterface
 */
export interface BundleDataBundleOptionInterface {
    /**
     * Bundle option id.
     * @type {number}
     * @memberof BundleDataBundleOptionInterface
     */
    optionId: number;
    /**
     * Bundle option quantity.
     * @type {number}
     * @memberof BundleDataBundleOptionInterface
     */
    optionQty: number;
    /**
     * Bundle option selection ids.
     * @type {Array<number>}
     * @memberof BundleDataBundleOptionInterface
     */
    optionSelections: Array<number>;
    /**
     * ExtensionInterface class for @see \Magento\Bundle\Api\Data\BundleOptionInterface
     * @type {object}
     * @memberof BundleDataBundleOptionInterface
     */
    extensionAttributes?: object;
}

/**
 * Check if a given object implements the BundleDataBundleOptionInterface interface.
 */
export function instanceOfBundleDataBundleOptionInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "optionId" in value;
    isInstance = isInstance && "optionQty" in value;
    isInstance = isInstance && "optionSelections" in value;

    return isInstance;
}

export function BundleDataBundleOptionInterfaceFromJSON(json: any): BundleDataBundleOptionInterface {
    return BundleDataBundleOptionInterfaceFromJSONTyped(json, false);
}

export function BundleDataBundleOptionInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): BundleDataBundleOptionInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'optionId': json['option_id'],
        'optionQty': json['option_qty'],
        'optionSelections': json['option_selections'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}

export function BundleDataBundleOptionInterfaceToJSON(value?: BundleDataBundleOptionInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'option_id': value.optionId,
        'option_qty': value.optionQty,
        'option_selections': value.optionSelections,
        'extension_attributes': value.extensionAttributes,
    };
}

