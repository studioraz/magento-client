/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SalesDataCreditmemoCommentCreationInterface } from './SalesDataCreditmemoCommentCreationInterface';
import {
    SalesDataCreditmemoCommentCreationInterfaceFromJSON,
    SalesDataCreditmemoCommentCreationInterfaceFromJSONTyped,
    SalesDataCreditmemoCommentCreationInterfaceToJSON,
} from './SalesDataCreditmemoCommentCreationInterface';
import type { SalesDataCreditmemoCreationArgumentsInterface } from './SalesDataCreditmemoCreationArgumentsInterface';
import {
    SalesDataCreditmemoCreationArgumentsInterfaceFromJSON,
    SalesDataCreditmemoCreationArgumentsInterfaceFromJSONTyped,
    SalesDataCreditmemoCreationArgumentsInterfaceToJSON,
} from './SalesDataCreditmemoCreationArgumentsInterface';
import type { SalesDataCreditmemoItemCreationInterface } from './SalesDataCreditmemoItemCreationInterface';
import {
    SalesDataCreditmemoItemCreationInterfaceFromJSON,
    SalesDataCreditmemoItemCreationInterfaceFromJSONTyped,
    SalesDataCreditmemoItemCreationInterfaceToJSON,
} from './SalesDataCreditmemoItemCreationInterface';

/**
 * 
 * @export
 * @interface PostV1OrderOrderIdRefundRequest
 */
export interface PostV1OrderOrderIdRefundRequest {
    /**
     * 
     * @type {Array<SalesDataCreditmemoItemCreationInterface>}
     * @memberof PostV1OrderOrderIdRefundRequest
     */
    items?: Array<SalesDataCreditmemoItemCreationInterface>;
    /**
     * 
     * @type {boolean}
     * @memberof PostV1OrderOrderIdRefundRequest
     */
    notify?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof PostV1OrderOrderIdRefundRequest
     */
    appendComment?: boolean;
    /**
     * 
     * @type {SalesDataCreditmemoCommentCreationInterface}
     * @memberof PostV1OrderOrderIdRefundRequest
     */
    comment?: SalesDataCreditmemoCommentCreationInterface;
    /**
     * 
     * @type {SalesDataCreditmemoCreationArgumentsInterface}
     * @memberof PostV1OrderOrderIdRefundRequest
     */
    arguments?: SalesDataCreditmemoCreationArgumentsInterface;
}

/**
 * Check if a given object implements the PostV1OrderOrderIdRefundRequest interface.
 */
export function instanceOfPostV1OrderOrderIdRefundRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PostV1OrderOrderIdRefundRequestFromJSON(json: any): PostV1OrderOrderIdRefundRequest {
    return PostV1OrderOrderIdRefundRequestFromJSONTyped(json, false);
}

export function PostV1OrderOrderIdRefundRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostV1OrderOrderIdRefundRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': !exists(json, 'items') ? undefined : ((json['items'] as Array<any>).map(SalesDataCreditmemoItemCreationInterfaceFromJSON)),
        'notify': !exists(json, 'notify') ? undefined : json['notify'],
        'appendComment': !exists(json, 'appendComment') ? undefined : json['appendComment'],
        'comment': !exists(json, 'comment') ? undefined : SalesDataCreditmemoCommentCreationInterfaceFromJSON(json['comment']),
        'arguments': !exists(json, 'arguments') ? undefined : SalesDataCreditmemoCreationArgumentsInterfaceFromJSON(json['arguments']),
    };
}

export function PostV1OrderOrderIdRefundRequestToJSON(value?: PostV1OrderOrderIdRefundRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': value.items === undefined ? undefined : ((value.items as Array<any>).map(SalesDataCreditmemoItemCreationInterfaceToJSON)),
        'notify': value.notify,
        'appendComment': value.appendComment,
        'comment': SalesDataCreditmemoCommentCreationInterfaceToJSON(value.comment),
        'arguments': SalesDataCreditmemoCreationArgumentsInterfaceToJSON(value.arguments),
    };
}

