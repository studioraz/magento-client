/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CustomerDataAddressInterface } from './CustomerDataAddressInterface';
import {
    CustomerDataAddressInterfaceFromJSON,
    CustomerDataAddressInterfaceFromJSONTyped,
    CustomerDataAddressInterfaceToJSON,
} from './CustomerDataAddressInterface';
import type { CustomerDataCustomerExtensionInterface } from './CustomerDataCustomerExtensionInterface';
import {
    CustomerDataCustomerExtensionInterfaceFromJSON,
    CustomerDataCustomerExtensionInterfaceFromJSONTyped,
    CustomerDataCustomerExtensionInterfaceToJSON,
} from './CustomerDataCustomerExtensionInterface';
import type { FrameworkAttributeInterface } from './FrameworkAttributeInterface';
import {
    FrameworkAttributeInterfaceFromJSON,
    FrameworkAttributeInterfaceFromJSONTyped,
    FrameworkAttributeInterfaceToJSON,
} from './FrameworkAttributeInterface';

/**
 * Customer entity interface for API handling.
 * @export
 * @interface CustomerDataCustomerInterface
 */
export interface CustomerDataCustomerInterface {
    /**
     * Customer id
     * @type {number}
     * @memberof CustomerDataCustomerInterface
     */
    id?: number;
    /**
     * Group id
     * @type {number}
     * @memberof CustomerDataCustomerInterface
     */
    groupId?: number;
    /**
     * Default billing address id
     * @type {string}
     * @memberof CustomerDataCustomerInterface
     */
    defaultBilling?: string;
    /**
     * Default shipping address id
     * @type {string}
     * @memberof CustomerDataCustomerInterface
     */
    defaultShipping?: string;
    /**
     * Confirmation
     * @type {string}
     * @memberof CustomerDataCustomerInterface
     */
    confirmation?: string;
    /**
     * Created at time
     * @type {string}
     * @memberof CustomerDataCustomerInterface
     */
    createdAt?: string;
    /**
     * Updated at time
     * @type {string}
     * @memberof CustomerDataCustomerInterface
     */
    updatedAt?: string;
    /**
     * Created in area
     * @type {string}
     * @memberof CustomerDataCustomerInterface
     */
    createdIn?: string;
    /**
     * In keeping with current security and privacy best practices, be sure you are aware of any potential legal and security risks associated with the storage of customersâ€™ full date of birth (month, day, year) along with other personal identifiers (e.g., full name) before collecting or processing such data.
     * @type {string}
     * @memberof CustomerDataCustomerInterface
     */
    dob?: string;
    /**
     * Email address
     * @type {string}
     * @memberof CustomerDataCustomerInterface
     */
    email: string;
    /**
     * First name
     * @type {string}
     * @memberof CustomerDataCustomerInterface
     */
    firstname: string;
    /**
     * Last name
     * @type {string}
     * @memberof CustomerDataCustomerInterface
     */
    lastname: string;
    /**
     * Middle name
     * @type {string}
     * @memberof CustomerDataCustomerInterface
     */
    middlename?: string;
    /**
     * Prefix
     * @type {string}
     * @memberof CustomerDataCustomerInterface
     */
    prefix?: string;
    /**
     * Suffix
     * @type {string}
     * @memberof CustomerDataCustomerInterface
     */
    suffix?: string;
    /**
     * Gender
     * @type {number}
     * @memberof CustomerDataCustomerInterface
     */
    gender?: number;
    /**
     * Store id
     * @type {number}
     * @memberof CustomerDataCustomerInterface
     */
    storeId?: number;
    /**
     * Tax Vat
     * @type {string}
     * @memberof CustomerDataCustomerInterface
     */
    taxvat?: string;
    /**
     * Website id
     * @type {number}
     * @memberof CustomerDataCustomerInterface
     */
    websiteId?: number;
    /**
     * Customer addresses.
     * @type {Array<CustomerDataAddressInterface>}
     * @memberof CustomerDataCustomerInterface
     */
    addresses?: Array<CustomerDataAddressInterface>;
    /**
     * Disable auto group change flag.
     * @type {number}
     * @memberof CustomerDataCustomerInterface
     */
    disableAutoGroupChange?: number;
    /**
     * 
     * @type {CustomerDataCustomerExtensionInterface}
     * @memberof CustomerDataCustomerInterface
     */
    extensionAttributes?: CustomerDataCustomerExtensionInterface;
    /**
     * Custom attributes values.
     * @type {Array<FrameworkAttributeInterface>}
     * @memberof CustomerDataCustomerInterface
     */
    customAttributes?: Array<FrameworkAttributeInterface>;
}

/**
 * Check if a given object implements the CustomerDataCustomerInterface interface.
 */
export function instanceOfCustomerDataCustomerInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "email" in value;
    isInstance = isInstance && "firstname" in value;
    isInstance = isInstance && "lastname" in value;

    return isInstance;
}

export function CustomerDataCustomerInterfaceFromJSON(json: any): CustomerDataCustomerInterface {
    return CustomerDataCustomerInterfaceFromJSONTyped(json, false);
}

export function CustomerDataCustomerInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerDataCustomerInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'groupId': !exists(json, 'group_id') ? undefined : json['group_id'],
        'defaultBilling': !exists(json, 'default_billing') ? undefined : json['default_billing'],
        'defaultShipping': !exists(json, 'default_shipping') ? undefined : json['default_shipping'],
        'confirmation': !exists(json, 'confirmation') ? undefined : json['confirmation'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'updatedAt': !exists(json, 'updated_at') ? undefined : json['updated_at'],
        'createdIn': !exists(json, 'created_in') ? undefined : json['created_in'],
        'dob': !exists(json, 'dob') ? undefined : json['dob'],
        'email': json['email'],
        'firstname': json['firstname'],
        'lastname': json['lastname'],
        'middlename': !exists(json, 'middlename') ? undefined : json['middlename'],
        'prefix': !exists(json, 'prefix') ? undefined : json['prefix'],
        'suffix': !exists(json, 'suffix') ? undefined : json['suffix'],
        'gender': !exists(json, 'gender') ? undefined : json['gender'],
        'storeId': !exists(json, 'store_id') ? undefined : json['store_id'],
        'taxvat': !exists(json, 'taxvat') ? undefined : json['taxvat'],
        'websiteId': !exists(json, 'website_id') ? undefined : json['website_id'],
        'addresses': !exists(json, 'addresses') ? undefined : ((json['addresses'] as Array<any>).map(CustomerDataAddressInterfaceFromJSON)),
        'disableAutoGroupChange': !exists(json, 'disable_auto_group_change') ? undefined : json['disable_auto_group_change'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : CustomerDataCustomerExtensionInterfaceFromJSON(json['extension_attributes']),
        'customAttributes': !exists(json, 'custom_attributes') ? undefined : ((json['custom_attributes'] as Array<any>).map(FrameworkAttributeInterfaceFromJSON)),
    };
}

export function CustomerDataCustomerInterfaceToJSON(value?: CustomerDataCustomerInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'group_id': value.groupId,
        'default_billing': value.defaultBilling,
        'default_shipping': value.defaultShipping,
        'confirmation': value.confirmation,
        'created_at': value.createdAt,
        'updated_at': value.updatedAt,
        'created_in': value.createdIn,
        'dob': value.dob,
        'email': value.email,
        'firstname': value.firstname,
        'lastname': value.lastname,
        'middlename': value.middlename,
        'prefix': value.prefix,
        'suffix': value.suffix,
        'gender': value.gender,
        'store_id': value.storeId,
        'taxvat': value.taxvat,
        'website_id': value.websiteId,
        'addresses': value.addresses === undefined ? undefined : ((value.addresses as Array<any>).map(CustomerDataAddressInterfaceToJSON)),
        'disable_auto_group_change': value.disableAutoGroupChange,
        'extension_attributes': CustomerDataCustomerExtensionInterfaceToJSON(value.extensionAttributes),
        'custom_attributes': value.customAttributes === undefined ? undefined : ((value.customAttributes as Array<any>).map(FrameworkAttributeInterfaceToJSON)),
    };
}

