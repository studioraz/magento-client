"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SalesDataShipmentInterfaceToJSON = exports.SalesDataShipmentInterfaceFromJSONTyped = exports.SalesDataShipmentInterfaceFromJSON = exports.instanceOfSalesDataShipmentInterface = void 0;
var runtime_1 = require("../runtime");
var SalesDataShipmentCommentInterface_1 = require("./SalesDataShipmentCommentInterface");
var SalesDataShipmentExtensionInterface_1 = require("./SalesDataShipmentExtensionInterface");
var SalesDataShipmentItemInterface_1 = require("./SalesDataShipmentItemInterface");
var SalesDataShipmentPackageInterface_1 = require("./SalesDataShipmentPackageInterface");
var SalesDataShipmentTrackInterface_1 = require("./SalesDataShipmentTrackInterface");
/**
 * Check if a given object implements the SalesDataShipmentInterface interface.
 */
function instanceOfSalesDataShipmentInterface(value) {
    var isInstance = true;
    isInstance = isInstance && "orderId" in value;
    isInstance = isInstance && "items" in value;
    isInstance = isInstance && "tracks" in value;
    isInstance = isInstance && "comments" in value;
    return isInstance;
}
exports.instanceOfSalesDataShipmentInterface = instanceOfSalesDataShipmentInterface;
function SalesDataShipmentInterfaceFromJSON(json) {
    return SalesDataShipmentInterfaceFromJSONTyped(json, false);
}
exports.SalesDataShipmentInterfaceFromJSON = SalesDataShipmentInterfaceFromJSON;
function SalesDataShipmentInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'billingAddressId': !(0, runtime_1.exists)(json, 'billing_address_id') ? undefined : json['billing_address_id'],
        'createdAt': !(0, runtime_1.exists)(json, 'created_at') ? undefined : json['created_at'],
        'customerId': !(0, runtime_1.exists)(json, 'customer_id') ? undefined : json['customer_id'],
        'emailSent': !(0, runtime_1.exists)(json, 'email_sent') ? undefined : json['email_sent'],
        'entityId': !(0, runtime_1.exists)(json, 'entity_id') ? undefined : json['entity_id'],
        'incrementId': !(0, runtime_1.exists)(json, 'increment_id') ? undefined : json['increment_id'],
        'orderId': json['order_id'],
        'packages': !(0, runtime_1.exists)(json, 'packages') ? undefined : (json['packages'].map(SalesDataShipmentPackageInterface_1.SalesDataShipmentPackageInterfaceFromJSON)),
        'shipmentStatus': !(0, runtime_1.exists)(json, 'shipment_status') ? undefined : json['shipment_status'],
        'shippingAddressId': !(0, runtime_1.exists)(json, 'shipping_address_id') ? undefined : json['shipping_address_id'],
        'shippingLabel': !(0, runtime_1.exists)(json, 'shipping_label') ? undefined : json['shipping_label'],
        'storeId': !(0, runtime_1.exists)(json, 'store_id') ? undefined : json['store_id'],
        'totalQty': !(0, runtime_1.exists)(json, 'total_qty') ? undefined : json['total_qty'],
        'totalWeight': !(0, runtime_1.exists)(json, 'total_weight') ? undefined : json['total_weight'],
        'updatedAt': !(0, runtime_1.exists)(json, 'updated_at') ? undefined : json['updated_at'],
        'items': (json['items'].map(SalesDataShipmentItemInterface_1.SalesDataShipmentItemInterfaceFromJSON)),
        'tracks': (json['tracks'].map(SalesDataShipmentTrackInterface_1.SalesDataShipmentTrackInterfaceFromJSON)),
        'comments': (json['comments'].map(SalesDataShipmentCommentInterface_1.SalesDataShipmentCommentInterfaceFromJSON)),
        'extensionAttributes': !(0, runtime_1.exists)(json, 'extension_attributes') ? undefined : (0, SalesDataShipmentExtensionInterface_1.SalesDataShipmentExtensionInterfaceFromJSON)(json['extension_attributes']),
    };
}
exports.SalesDataShipmentInterfaceFromJSONTyped = SalesDataShipmentInterfaceFromJSONTyped;
function SalesDataShipmentInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'billing_address_id': value.billingAddressId,
        'created_at': value.createdAt,
        'customer_id': value.customerId,
        'email_sent': value.emailSent,
        'entity_id': value.entityId,
        'increment_id': value.incrementId,
        'order_id': value.orderId,
        'packages': value.packages === undefined ? undefined : (value.packages.map(SalesDataShipmentPackageInterface_1.SalesDataShipmentPackageInterfaceToJSON)),
        'shipment_status': value.shipmentStatus,
        'shipping_address_id': value.shippingAddressId,
        'shipping_label': value.shippingLabel,
        'store_id': value.storeId,
        'total_qty': value.totalQty,
        'total_weight': value.totalWeight,
        'updated_at': value.updatedAt,
        'items': (value.items.map(SalesDataShipmentItemInterface_1.SalesDataShipmentItemInterfaceToJSON)),
        'tracks': (value.tracks.map(SalesDataShipmentTrackInterface_1.SalesDataShipmentTrackInterfaceToJSON)),
        'comments': (value.comments.map(SalesDataShipmentCommentInterface_1.SalesDataShipmentCommentInterfaceToJSON)),
        'extension_attributes': (0, SalesDataShipmentExtensionInterface_1.SalesDataShipmentExtensionInterfaceToJSON)(value.extensionAttributes),
    };
}
exports.SalesDataShipmentInterfaceToJSON = SalesDataShipmentInterfaceToJSON;
//# sourceMappingURL=SalesDataShipmentInterface.js.map