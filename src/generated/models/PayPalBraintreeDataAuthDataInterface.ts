/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Interface AuthDataInterface
 * @export
 * @interface PayPalBraintreeDataAuthDataInterface
 */
export interface PayPalBraintreeDataAuthDataInterface {
    /**
     * Client token
     * @type {string}
     * @memberof PayPalBraintreeDataAuthDataInterface
     */
    clientToken?: string;
    /**
     * Display name
     * @type {string}
     * @memberof PayPalBraintreeDataAuthDataInterface
     */
    displayName: string;
    /**
     * To success page
     * @type {string}
     * @memberof PayPalBraintreeDataAuthDataInterface
     */
    actionSuccess: string;
    /**
     * 
     * @type {boolean}
     * @memberof PayPalBraintreeDataAuthDataInterface
     */
    loggedIn: boolean;
    /**
     * Current store code
     * @type {string}
     * @memberof PayPalBraintreeDataAuthDataInterface
     */
    storeCode: string;
}

/**
 * Check if a given object implements the PayPalBraintreeDataAuthDataInterface interface.
 */
export function instanceOfPayPalBraintreeDataAuthDataInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "displayName" in value;
    isInstance = isInstance && "actionSuccess" in value;
    isInstance = isInstance && "loggedIn" in value;
    isInstance = isInstance && "storeCode" in value;

    return isInstance;
}

export function PayPalBraintreeDataAuthDataInterfaceFromJSON(json: any): PayPalBraintreeDataAuthDataInterface {
    return PayPalBraintreeDataAuthDataInterfaceFromJSONTyped(json, false);
}

export function PayPalBraintreeDataAuthDataInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): PayPalBraintreeDataAuthDataInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'clientToken': !exists(json, 'client_token') ? undefined : json['client_token'],
        'displayName': json['display_name'],
        'actionSuccess': json['action_success'],
        'loggedIn': json['logged_in'],
        'storeCode': json['store_code'],
    };
}

export function PayPalBraintreeDataAuthDataInterfaceToJSON(value?: PayPalBraintreeDataAuthDataInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'client_token': value.clientToken,
        'display_name': value.displayName,
        'action_success': value.actionSuccess,
        'logged_in': value.loggedIn,
        'store_code': value.storeCode,
    };
}

