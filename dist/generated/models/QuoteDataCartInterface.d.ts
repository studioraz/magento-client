/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CustomerDataCustomerInterface } from './CustomerDataCustomerInterface';
import type { QuoteDataAddressInterface } from './QuoteDataAddressInterface';
import type { QuoteDataCartExtensionInterface } from './QuoteDataCartExtensionInterface';
import type { QuoteDataCartItemInterface } from './QuoteDataCartItemInterface';
import type { QuoteDataCurrencyInterface } from './QuoteDataCurrencyInterface';
/**
 * Interface CartInterface
 * @export
 * @interface QuoteDataCartInterface
 */
export interface QuoteDataCartInterface {
    /**
     * Cart/quote ID.
     * @type {number}
     * @memberof QuoteDataCartInterface
     */
    id: number;
    /**
     * Cart creation date and time. Otherwise, null.
     * @type {string}
     * @memberof QuoteDataCartInterface
     */
    createdAt?: string;
    /**
     * Cart last update date and time. Otherwise, null.
     * @type {string}
     * @memberof QuoteDataCartInterface
     */
    updatedAt?: string;
    /**
     * Cart conversion date and time. Otherwise, null.
     * @type {string}
     * @memberof QuoteDataCartInterface
     */
    convertedAt?: string;
    /**
     * Active status flag value. Otherwise, null.
     * @type {boolean}
     * @memberof QuoteDataCartInterface
     */
    isActive?: boolean;
    /**
     * Virtual flag value. Otherwise, null.
     * @type {boolean}
     * @memberof QuoteDataCartInterface
     */
    isVirtual?: boolean;
    /**
     * Array of items. Otherwise, null.
     * @type {Array<QuoteDataCartItemInterface>}
     * @memberof QuoteDataCartInterface
     */
    items?: Array<QuoteDataCartItemInterface>;
    /**
     * Number of different items or products in the cart. Otherwise, null.
     * @type {number}
     * @memberof QuoteDataCartInterface
     */
    itemsCount?: number;
    /**
     * Total quantity of all cart items. Otherwise, null.
     * @type {number}
     * @memberof QuoteDataCartInterface
     */
    itemsQty?: number;
    /**
     *
     * @type {CustomerDataCustomerInterface}
     * @memberof QuoteDataCartInterface
     */
    customer: CustomerDataCustomerInterface;
    /**
     *
     * @type {QuoteDataAddressInterface}
     * @memberof QuoteDataCartInterface
     */
    billingAddress?: QuoteDataAddressInterface;
    /**
     * Reserved order ID. Otherwise, null.
     * @type {string}
     * @memberof QuoteDataCartInterface
     */
    reservedOrderId?: string;
    /**
     * Original order ID. Otherwise, null.
     * @type {number}
     * @memberof QuoteDataCartInterface
     */
    origOrderId?: number;
    /**
     *
     * @type {QuoteDataCurrencyInterface}
     * @memberof QuoteDataCartInterface
     */
    currency?: QuoteDataCurrencyInterface;
    /**
     * For guest customers, false for logged in customers
     * @type {boolean}
     * @memberof QuoteDataCartInterface
     */
    customerIsGuest?: boolean;
    /**
     * Notice text
     * @type {string}
     * @memberof QuoteDataCartInterface
     */
    customerNote?: string;
    /**
     * Customer notification flag
     * @type {boolean}
     * @memberof QuoteDataCartInterface
     */
    customerNoteNotify?: boolean;
    /**
     * Customer tax class ID.
     * @type {number}
     * @memberof QuoteDataCartInterface
     */
    customerTaxClassId?: number;
    /**
     * Store identifier
     * @type {number}
     * @memberof QuoteDataCartInterface
     */
    storeId: number;
    /**
     *
     * @type {QuoteDataCartExtensionInterface}
     * @memberof QuoteDataCartInterface
     */
    extensionAttributes?: QuoteDataCartExtensionInterface;
}
/**
 * Check if a given object implements the QuoteDataCartInterface interface.
 */
export declare function instanceOfQuoteDataCartInterface(value: object): boolean;
export declare function QuoteDataCartInterfaceFromJSON(json: any): QuoteDataCartInterface;
export declare function QuoteDataCartInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuoteDataCartInterface;
export declare function QuoteDataCartInterfaceToJSON(value?: QuoteDataCartInterface | null): any;
