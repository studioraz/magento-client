/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InventoryInStorePickupApiDataSearchRequestFilterInterface } from './InventoryInStorePickupApiDataSearchRequestFilterInterface';
import {
    InventoryInStorePickupApiDataSearchRequestFilterInterfaceFromJSON,
    InventoryInStorePickupApiDataSearchRequestFilterInterfaceFromJSONTyped,
    InventoryInStorePickupApiDataSearchRequestFilterInterfaceToJSON,
} from './InventoryInStorePickupApiDataSearchRequestFilterInterface';

/**
 * Filter to filter by Fields. Each field may be filtered with different condition type. Supported condition types restricted by @see \Magento\Framework\Api\SearchCriteriaInterface
 * @export
 * @interface InventoryInStorePickupApiDataSearchRequestFiltersInterface
 */
export interface InventoryInStorePickupApiDataSearchRequestFiltersInterface {
    /**
     * 
     * @type {InventoryInStorePickupApiDataSearchRequestFilterInterface}
     * @memberof InventoryInStorePickupApiDataSearchRequestFiltersInterface
     */
    country?: InventoryInStorePickupApiDataSearchRequestFilterInterface;
    /**
     * 
     * @type {InventoryInStorePickupApiDataSearchRequestFilterInterface}
     * @memberof InventoryInStorePickupApiDataSearchRequestFiltersInterface
     */
    postcode?: InventoryInStorePickupApiDataSearchRequestFilterInterface;
    /**
     * 
     * @type {InventoryInStorePickupApiDataSearchRequestFilterInterface}
     * @memberof InventoryInStorePickupApiDataSearchRequestFiltersInterface
     */
    region?: InventoryInStorePickupApiDataSearchRequestFilterInterface;
    /**
     * 
     * @type {InventoryInStorePickupApiDataSearchRequestFilterInterface}
     * @memberof InventoryInStorePickupApiDataSearchRequestFiltersInterface
     */
    regionId?: InventoryInStorePickupApiDataSearchRequestFilterInterface;
    /**
     * 
     * @type {InventoryInStorePickupApiDataSearchRequestFilterInterface}
     * @memberof InventoryInStorePickupApiDataSearchRequestFiltersInterface
     */
    city?: InventoryInStorePickupApiDataSearchRequestFilterInterface;
    /**
     * 
     * @type {InventoryInStorePickupApiDataSearchRequestFilterInterface}
     * @memberof InventoryInStorePickupApiDataSearchRequestFiltersInterface
     */
    street?: InventoryInStorePickupApiDataSearchRequestFilterInterface;
    /**
     * 
     * @type {InventoryInStorePickupApiDataSearchRequestFilterInterface}
     * @memberof InventoryInStorePickupApiDataSearchRequestFiltersInterface
     */
    name?: InventoryInStorePickupApiDataSearchRequestFilterInterface;
    /**
     * 
     * @type {InventoryInStorePickupApiDataSearchRequestFilterInterface}
     * @memberof InventoryInStorePickupApiDataSearchRequestFiltersInterface
     */
    pickupLocationCode?: InventoryInStorePickupApiDataSearchRequestFilterInterface;
}

/**
 * Check if a given object implements the InventoryInStorePickupApiDataSearchRequestFiltersInterface interface.
 */
export function instanceOfInventoryInStorePickupApiDataSearchRequestFiltersInterface(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InventoryInStorePickupApiDataSearchRequestFiltersInterfaceFromJSON(json: any): InventoryInStorePickupApiDataSearchRequestFiltersInterface {
    return InventoryInStorePickupApiDataSearchRequestFiltersInterfaceFromJSONTyped(json, false);
}

export function InventoryInStorePickupApiDataSearchRequestFiltersInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): InventoryInStorePickupApiDataSearchRequestFiltersInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'country': !exists(json, 'country') ? undefined : InventoryInStorePickupApiDataSearchRequestFilterInterfaceFromJSON(json['country']),
        'postcode': !exists(json, 'postcode') ? undefined : InventoryInStorePickupApiDataSearchRequestFilterInterfaceFromJSON(json['postcode']),
        'region': !exists(json, 'region') ? undefined : InventoryInStorePickupApiDataSearchRequestFilterInterfaceFromJSON(json['region']),
        'regionId': !exists(json, 'region_id') ? undefined : InventoryInStorePickupApiDataSearchRequestFilterInterfaceFromJSON(json['region_id']),
        'city': !exists(json, 'city') ? undefined : InventoryInStorePickupApiDataSearchRequestFilterInterfaceFromJSON(json['city']),
        'street': !exists(json, 'street') ? undefined : InventoryInStorePickupApiDataSearchRequestFilterInterfaceFromJSON(json['street']),
        'name': !exists(json, 'name') ? undefined : InventoryInStorePickupApiDataSearchRequestFilterInterfaceFromJSON(json['name']),
        'pickupLocationCode': !exists(json, 'pickup_location_code') ? undefined : InventoryInStorePickupApiDataSearchRequestFilterInterfaceFromJSON(json['pickup_location_code']),
    };
}

export function InventoryInStorePickupApiDataSearchRequestFiltersInterfaceToJSON(value?: InventoryInStorePickupApiDataSearchRequestFiltersInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'country': InventoryInStorePickupApiDataSearchRequestFilterInterfaceToJSON(value.country),
        'postcode': InventoryInStorePickupApiDataSearchRequestFilterInterfaceToJSON(value.postcode),
        'region': InventoryInStorePickupApiDataSearchRequestFilterInterfaceToJSON(value.region),
        'region_id': InventoryInStorePickupApiDataSearchRequestFilterInterfaceToJSON(value.regionId),
        'city': InventoryInStorePickupApiDataSearchRequestFilterInterfaceToJSON(value.city),
        'street': InventoryInStorePickupApiDataSearchRequestFilterInterfaceToJSON(value.street),
        'name': InventoryInStorePickupApiDataSearchRequestFilterInterfaceToJSON(value.name),
        'pickup_location_code': InventoryInStorePickupApiDataSearchRequestFilterInterfaceToJSON(value.pickupLocationCode),
    };
}

