/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * ExtensionInterface class for @see \Magento\GiftMessage\Api\Data\MessageInterface
 * @export
 * @interface GiftMessageDataMessageExtensionInterface
 */
export interface GiftMessageDataMessageExtensionInterface {
    /**
     * 
     * @type {string}
     * @memberof GiftMessageDataMessageExtensionInterface
     */
    entityId?: string;
    /**
     * 
     * @type {string}
     * @memberof GiftMessageDataMessageExtensionInterface
     */
    entityType?: string;
}

/**
 * Check if a given object implements the GiftMessageDataMessageExtensionInterface interface.
 */
export function instanceOfGiftMessageDataMessageExtensionInterface(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GiftMessageDataMessageExtensionInterfaceFromJSON(json: any): GiftMessageDataMessageExtensionInterface {
    return GiftMessageDataMessageExtensionInterfaceFromJSONTyped(json, false);
}

export function GiftMessageDataMessageExtensionInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): GiftMessageDataMessageExtensionInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'entityId': !exists(json, 'entity_id') ? undefined : json['entity_id'],
        'entityType': !exists(json, 'entity_type') ? undefined : json['entity_type'],
    };
}

export function GiftMessageDataMessageExtensionInterfaceToJSON(value?: GiftMessageDataMessageExtensionInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'entity_id': value.entityId,
        'entity_type': value.entityType,
    };
}

