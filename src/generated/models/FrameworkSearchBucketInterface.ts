/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FrameworkSearchAggregationValueInterface } from './FrameworkSearchAggregationValueInterface';
import {
    FrameworkSearchAggregationValueInterfaceFromJSON,
    FrameworkSearchAggregationValueInterfaceFromJSONTyped,
    FrameworkSearchAggregationValueInterfaceToJSON,
} from './FrameworkSearchAggregationValueInterface';

/**
 * Interface for facet Bucket
 * @export
 * @interface FrameworkSearchBucketInterface
 */
export interface FrameworkSearchBucketInterface {
    /**
     * Field name
     * @type {string}
     * @memberof FrameworkSearchBucketInterface
     */
    name: string;
    /**
     * Field values
     * @type {Array<FrameworkSearchAggregationValueInterface>}
     * @memberof FrameworkSearchBucketInterface
     */
    values: Array<FrameworkSearchAggregationValueInterface>;
}

/**
 * Check if a given object implements the FrameworkSearchBucketInterface interface.
 */
export function instanceOfFrameworkSearchBucketInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "values" in value;

    return isInstance;
}

export function FrameworkSearchBucketInterfaceFromJSON(json: any): FrameworkSearchBucketInterface {
    return FrameworkSearchBucketInterfaceFromJSONTyped(json, false);
}

export function FrameworkSearchBucketInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): FrameworkSearchBucketInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'values': ((json['values'] as Array<any>).map(FrameworkSearchAggregationValueInterfaceFromJSON)),
    };
}

export function FrameworkSearchBucketInterfaceToJSON(value?: FrameworkSearchBucketInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'values': ((value.values as Array<any>).map(FrameworkSearchAggregationValueInterfaceToJSON)),
    };
}

