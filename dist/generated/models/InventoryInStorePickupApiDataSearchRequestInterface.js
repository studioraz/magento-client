"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InventoryInStorePickupApiDataSearchRequestInterfaceToJSON = exports.InventoryInStorePickupApiDataSearchRequestInterfaceFromJSONTyped = exports.InventoryInStorePickupApiDataSearchRequestInterfaceFromJSON = exports.instanceOfInventoryInStorePickupApiDataSearchRequestInterface = void 0;
var runtime_1 = require("../runtime");
var FrameworkSortOrder_1 = require("./FrameworkSortOrder");
var InventoryInStorePickupApiDataSearchRequestAreaInterface_1 = require("./InventoryInStorePickupApiDataSearchRequestAreaInterface");
var InventoryInStorePickupApiDataSearchRequestExtensionInterface_1 = require("./InventoryInStorePickupApiDataSearchRequestExtensionInterface");
var InventoryInStorePickupApiDataSearchRequestFiltersInterface_1 = require("./InventoryInStorePickupApiDataSearchRequestFiltersInterface");
/**
 * Check if a given object implements the InventoryInStorePickupApiDataSearchRequestInterface interface.
 */
function instanceOfInventoryInStorePickupApiDataSearchRequestInterface(value) {
    var isInstance = true;
    isInstance = isInstance && "currentPage" in value;
    isInstance = isInstance && "scopeType" in value;
    isInstance = isInstance && "scopeCode" in value;
    return isInstance;
}
exports.instanceOfInventoryInStorePickupApiDataSearchRequestInterface = instanceOfInventoryInStorePickupApiDataSearchRequestInterface;
function InventoryInStorePickupApiDataSearchRequestInterfaceFromJSON(json) {
    return InventoryInStorePickupApiDataSearchRequestInterfaceFromJSONTyped(json, false);
}
exports.InventoryInStorePickupApiDataSearchRequestInterfaceFromJSON = InventoryInStorePickupApiDataSearchRequestInterfaceFromJSON;
function InventoryInStorePickupApiDataSearchRequestInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'area': !(0, runtime_1.exists)(json, 'area') ? undefined : (0, InventoryInStorePickupApiDataSearchRequestAreaInterface_1.InventoryInStorePickupApiDataSearchRequestAreaInterfaceFromJSON)(json['area']),
        'filters': !(0, runtime_1.exists)(json, 'filters') ? undefined : (0, InventoryInStorePickupApiDataSearchRequestFiltersInterface_1.InventoryInStorePickupApiDataSearchRequestFiltersInterfaceFromJSON)(json['filters']),
        'pageSize': !(0, runtime_1.exists)(json, 'page_size') ? undefined : json['page_size'],
        'currentPage': json['current_page'],
        'scopeType': json['scope_type'],
        'scopeCode': json['scope_code'],
        'sort': !(0, runtime_1.exists)(json, 'sort') ? undefined : (json['sort'].map(FrameworkSortOrder_1.FrameworkSortOrderFromJSON)),
        'extensionAttributes': !(0, runtime_1.exists)(json, 'extension_attributes') ? undefined : (0, InventoryInStorePickupApiDataSearchRequestExtensionInterface_1.InventoryInStorePickupApiDataSearchRequestExtensionInterfaceFromJSON)(json['extension_attributes']),
    };
}
exports.InventoryInStorePickupApiDataSearchRequestInterfaceFromJSONTyped = InventoryInStorePickupApiDataSearchRequestInterfaceFromJSONTyped;
function InventoryInStorePickupApiDataSearchRequestInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'area': (0, InventoryInStorePickupApiDataSearchRequestAreaInterface_1.InventoryInStorePickupApiDataSearchRequestAreaInterfaceToJSON)(value.area),
        'filters': (0, InventoryInStorePickupApiDataSearchRequestFiltersInterface_1.InventoryInStorePickupApiDataSearchRequestFiltersInterfaceToJSON)(value.filters),
        'page_size': value.pageSize,
        'current_page': value.currentPage,
        'scope_type': value.scopeType,
        'scope_code': value.scopeCode,
        'sort': value.sort === undefined ? undefined : (value.sort.map(FrameworkSortOrder_1.FrameworkSortOrderToJSON)),
        'extension_attributes': (0, InventoryInStorePickupApiDataSearchRequestExtensionInterface_1.InventoryInStorePickupApiDataSearchRequestExtensionInterfaceToJSON)(value.extensionAttributes),
    };
}
exports.InventoryInStorePickupApiDataSearchRequestInterfaceToJSON = InventoryInStorePickupApiDataSearchRequestInterfaceToJSON;
//# sourceMappingURL=InventoryInStorePickupApiDataSearchRequestInterface.js.map