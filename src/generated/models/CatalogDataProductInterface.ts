/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CatalogDataProductAttributeMediaGalleryEntryInterface } from './CatalogDataProductAttributeMediaGalleryEntryInterface';
import {
    CatalogDataProductAttributeMediaGalleryEntryInterfaceFromJSON,
    CatalogDataProductAttributeMediaGalleryEntryInterfaceFromJSONTyped,
    CatalogDataProductAttributeMediaGalleryEntryInterfaceToJSON,
} from './CatalogDataProductAttributeMediaGalleryEntryInterface';
import type { CatalogDataProductCustomOptionInterface } from './CatalogDataProductCustomOptionInterface';
import {
    CatalogDataProductCustomOptionInterfaceFromJSON,
    CatalogDataProductCustomOptionInterfaceFromJSONTyped,
    CatalogDataProductCustomOptionInterfaceToJSON,
} from './CatalogDataProductCustomOptionInterface';
import type { CatalogDataProductExtensionInterface } from './CatalogDataProductExtensionInterface';
import {
    CatalogDataProductExtensionInterfaceFromJSON,
    CatalogDataProductExtensionInterfaceFromJSONTyped,
    CatalogDataProductExtensionInterfaceToJSON,
} from './CatalogDataProductExtensionInterface';
import type { CatalogDataProductLinkInterface } from './CatalogDataProductLinkInterface';
import {
    CatalogDataProductLinkInterfaceFromJSON,
    CatalogDataProductLinkInterfaceFromJSONTyped,
    CatalogDataProductLinkInterfaceToJSON,
} from './CatalogDataProductLinkInterface';
import type { CatalogDataProductTierPriceInterface } from './CatalogDataProductTierPriceInterface';
import {
    CatalogDataProductTierPriceInterfaceFromJSON,
    CatalogDataProductTierPriceInterfaceFromJSONTyped,
    CatalogDataProductTierPriceInterfaceToJSON,
} from './CatalogDataProductTierPriceInterface';
import type { FrameworkAttributeInterface } from './FrameworkAttributeInterface';
import {
    FrameworkAttributeInterfaceFromJSON,
    FrameworkAttributeInterfaceFromJSONTyped,
    FrameworkAttributeInterfaceToJSON,
} from './FrameworkAttributeInterface';

/**
 * 
 * @export
 * @interface CatalogDataProductInterface
 */
export interface CatalogDataProductInterface {
    /**
     * Id
     * @type {number}
     * @memberof CatalogDataProductInterface
     */
    id?: number;
    /**
     * Sku
     * @type {string}
     * @memberof CatalogDataProductInterface
     */
    sku: string;
    /**
     * Name
     * @type {string}
     * @memberof CatalogDataProductInterface
     */
    name?: string;
    /**
     * Attribute set id
     * @type {number}
     * @memberof CatalogDataProductInterface
     */
    attributeSetId?: number;
    /**
     * Price
     * @type {number}
     * @memberof CatalogDataProductInterface
     */
    price?: number;
    /**
     * Status
     * @type {number}
     * @memberof CatalogDataProductInterface
     */
    status?: number;
    /**
     * Visibility
     * @type {number}
     * @memberof CatalogDataProductInterface
     */
    visibility?: number;
    /**
     * Type id
     * @type {string}
     * @memberof CatalogDataProductInterface
     */
    typeId?: string;
    /**
     * Created date
     * @type {string}
     * @memberof CatalogDataProductInterface
     */
    createdAt?: string;
    /**
     * Updated date
     * @type {string}
     * @memberof CatalogDataProductInterface
     */
    updatedAt?: string;
    /**
     * Weight
     * @type {number}
     * @memberof CatalogDataProductInterface
     */
    weight?: number;
    /**
     * 
     * @type {CatalogDataProductExtensionInterface}
     * @memberof CatalogDataProductInterface
     */
    extensionAttributes?: CatalogDataProductExtensionInterface;
    /**
     * Product links info
     * @type {Array<CatalogDataProductLinkInterface>}
     * @memberof CatalogDataProductInterface
     */
    productLinks?: Array<CatalogDataProductLinkInterface>;
    /**
     * List of product options
     * @type {Array<CatalogDataProductCustomOptionInterface>}
     * @memberof CatalogDataProductInterface
     */
    options?: Array<CatalogDataProductCustomOptionInterface>;
    /**
     * Media gallery entries
     * @type {Array<CatalogDataProductAttributeMediaGalleryEntryInterface>}
     * @memberof CatalogDataProductInterface
     */
    mediaGalleryEntries?: Array<CatalogDataProductAttributeMediaGalleryEntryInterface>;
    /**
     * List of product tier prices
     * @type {Array<CatalogDataProductTierPriceInterface>}
     * @memberof CatalogDataProductInterface
     */
    tierPrices?: Array<CatalogDataProductTierPriceInterface>;
    /**
     * Custom attributes values.
     * @type {Array<FrameworkAttributeInterface>}
     * @memberof CatalogDataProductInterface
     */
    customAttributes?: Array<FrameworkAttributeInterface>;
}

/**
 * Check if a given object implements the CatalogDataProductInterface interface.
 */
export function instanceOfCatalogDataProductInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "sku" in value;

    return isInstance;
}

export function CatalogDataProductInterfaceFromJSON(json: any): CatalogDataProductInterface {
    return CatalogDataProductInterfaceFromJSONTyped(json, false);
}

export function CatalogDataProductInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogDataProductInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'sku': json['sku'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'attributeSetId': !exists(json, 'attribute_set_id') ? undefined : json['attribute_set_id'],
        'price': !exists(json, 'price') ? undefined : json['price'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'visibility': !exists(json, 'visibility') ? undefined : json['visibility'],
        'typeId': !exists(json, 'type_id') ? undefined : json['type_id'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'updatedAt': !exists(json, 'updated_at') ? undefined : json['updated_at'],
        'weight': !exists(json, 'weight') ? undefined : json['weight'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : CatalogDataProductExtensionInterfaceFromJSON(json['extension_attributes']),
        'productLinks': !exists(json, 'product_links') ? undefined : ((json['product_links'] as Array<any>).map(CatalogDataProductLinkInterfaceFromJSON)),
        'options': !exists(json, 'options') ? undefined : ((json['options'] as Array<any>).map(CatalogDataProductCustomOptionInterfaceFromJSON)),
        'mediaGalleryEntries': !exists(json, 'media_gallery_entries') ? undefined : ((json['media_gallery_entries'] as Array<any>).map(CatalogDataProductAttributeMediaGalleryEntryInterfaceFromJSON)),
        'tierPrices': !exists(json, 'tier_prices') ? undefined : ((json['tier_prices'] as Array<any>).map(CatalogDataProductTierPriceInterfaceFromJSON)),
        'customAttributes': !exists(json, 'custom_attributes') ? undefined : ((json['custom_attributes'] as Array<any>).map(FrameworkAttributeInterfaceFromJSON)),
    };
}

export function CatalogDataProductInterfaceToJSON(value?: CatalogDataProductInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'sku': value.sku,
        'name': value.name,
        'attribute_set_id': value.attributeSetId,
        'price': value.price,
        'status': value.status,
        'visibility': value.visibility,
        'type_id': value.typeId,
        'created_at': value.createdAt,
        'updated_at': value.updatedAt,
        'weight': value.weight,
        'extension_attributes': CatalogDataProductExtensionInterfaceToJSON(value.extensionAttributes),
        'product_links': value.productLinks === undefined ? undefined : ((value.productLinks as Array<any>).map(CatalogDataProductLinkInterfaceToJSON)),
        'options': value.options === undefined ? undefined : ((value.options as Array<any>).map(CatalogDataProductCustomOptionInterfaceToJSON)),
        'media_gallery_entries': value.mediaGalleryEntries === undefined ? undefined : ((value.mediaGalleryEntries as Array<any>).map(CatalogDataProductAttributeMediaGalleryEntryInterfaceToJSON)),
        'tier_prices': value.tierPrices === undefined ? undefined : ((value.tierPrices as Array<any>).map(CatalogDataProductTierPriceInterfaceToJSON)),
        'custom_attributes': value.customAttributes === undefined ? undefined : ((value.customAttributes as Array<any>).map(FrameworkAttributeInterfaceToJSON)),
    };
}

