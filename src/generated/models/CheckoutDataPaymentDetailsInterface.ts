/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { QuoteDataPaymentMethodInterface } from './QuoteDataPaymentMethodInterface';
import {
    QuoteDataPaymentMethodInterfaceFromJSON,
    QuoteDataPaymentMethodInterfaceFromJSONTyped,
    QuoteDataPaymentMethodInterfaceToJSON,
} from './QuoteDataPaymentMethodInterface';
import type { QuoteDataTotalsInterface } from './QuoteDataTotalsInterface';
import {
    QuoteDataTotalsInterfaceFromJSON,
    QuoteDataTotalsInterfaceFromJSONTyped,
    QuoteDataTotalsInterfaceToJSON,
} from './QuoteDataTotalsInterface';

/**
 * Interface PaymentDetailsInterface
 * @export
 * @interface CheckoutDataPaymentDetailsInterface
 */
export interface CheckoutDataPaymentDetailsInterface {
    /**
     * 
     * @type {Array<QuoteDataPaymentMethodInterface>}
     * @memberof CheckoutDataPaymentDetailsInterface
     */
    paymentMethods: Array<QuoteDataPaymentMethodInterface>;
    /**
     * 
     * @type {QuoteDataTotalsInterface}
     * @memberof CheckoutDataPaymentDetailsInterface
     */
    totals: QuoteDataTotalsInterface;
    /**
     * ExtensionInterface class for @see \Magento\Checkout\Api\Data\PaymentDetailsInterface
     * @type {object}
     * @memberof CheckoutDataPaymentDetailsInterface
     */
    extensionAttributes?: object;
}

/**
 * Check if a given object implements the CheckoutDataPaymentDetailsInterface interface.
 */
export function instanceOfCheckoutDataPaymentDetailsInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "paymentMethods" in value;
    isInstance = isInstance && "totals" in value;

    return isInstance;
}

export function CheckoutDataPaymentDetailsInterfaceFromJSON(json: any): CheckoutDataPaymentDetailsInterface {
    return CheckoutDataPaymentDetailsInterfaceFromJSONTyped(json, false);
}

export function CheckoutDataPaymentDetailsInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CheckoutDataPaymentDetailsInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'paymentMethods': ((json['payment_methods'] as Array<any>).map(QuoteDataPaymentMethodInterfaceFromJSON)),
        'totals': QuoteDataTotalsInterfaceFromJSON(json['totals']),
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}

export function CheckoutDataPaymentDetailsInterfaceToJSON(value?: CheckoutDataPaymentDetailsInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'payment_methods': ((value.paymentMethods as Array<any>).map(QuoteDataPaymentMethodInterfaceToJSON)),
        'totals': QuoteDataTotalsInterfaceToJSON(value.totals),
        'extension_attributes': value.extensionAttributes,
    };
}

