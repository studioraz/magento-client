/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { InventorySourceSelectionApiDataInventoryRequestInterface } from './InventorySourceSelectionApiDataInventoryRequestInterface';
import {
    InventorySourceSelectionApiDataInventoryRequestInterfaceFromJSON,
    InventorySourceSelectionApiDataInventoryRequestInterfaceFromJSONTyped,
    InventorySourceSelectionApiDataInventoryRequestInterfaceToJSON,
} from './InventorySourceSelectionApiDataInventoryRequestInterface';

/**
 * 
 * @export
 * @interface PostV1InventorySourceselectionalgorithmresultRequest
 */
export interface PostV1InventorySourceselectionalgorithmresultRequest {
    /**
     * 
     * @type {InventorySourceSelectionApiDataInventoryRequestInterface}
     * @memberof PostV1InventorySourceselectionalgorithmresultRequest
     */
    inventoryRequest: InventorySourceSelectionApiDataInventoryRequestInterface;
    /**
     * 
     * @type {string}
     * @memberof PostV1InventorySourceselectionalgorithmresultRequest
     */
    algorithmCode: string;
}

/**
 * Check if a given object implements the PostV1InventorySourceselectionalgorithmresultRequest interface.
 */
export function instanceOfPostV1InventorySourceselectionalgorithmresultRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "inventoryRequest" in value;
    isInstance = isInstance && "algorithmCode" in value;

    return isInstance;
}

export function PostV1InventorySourceselectionalgorithmresultRequestFromJSON(json: any): PostV1InventorySourceselectionalgorithmresultRequest {
    return PostV1InventorySourceselectionalgorithmresultRequestFromJSONTyped(json, false);
}

export function PostV1InventorySourceselectionalgorithmresultRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostV1InventorySourceselectionalgorithmresultRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'inventoryRequest': InventorySourceSelectionApiDataInventoryRequestInterfaceFromJSON(json['inventoryRequest']),
        'algorithmCode': json['algorithmCode'],
    };
}

export function PostV1InventorySourceselectionalgorithmresultRequestToJSON(value?: PostV1InventorySourceselectionalgorithmresultRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'inventoryRequest': InventorySourceSelectionApiDataInventoryRequestInterfaceToJSON(value.inventoryRequest),
        'algorithmCode': value.algorithmCode,
    };
}

