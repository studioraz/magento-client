/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Option interface.
 * @export
 * @interface CustomerDataOptionInterface
 */
export interface CustomerDataOptionInterface {
    /**
     * Option label
     * @type {string}
     * @memberof CustomerDataOptionInterface
     */
    label: string;
    /**
     * Option value
     * @type {string}
     * @memberof CustomerDataOptionInterface
     */
    value?: string;
    /**
     * Nested options
     * @type {Array<CustomerDataOptionInterface>}
     * @memberof CustomerDataOptionInterface
     */
    options?: Array<CustomerDataOptionInterface>;
}

/**
 * Check if a given object implements the CustomerDataOptionInterface interface.
 */
export function instanceOfCustomerDataOptionInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "label" in value;

    return isInstance;
}

export function CustomerDataOptionInterfaceFromJSON(json: any): CustomerDataOptionInterface {
    return CustomerDataOptionInterfaceFromJSONTyped(json, false);
}

export function CustomerDataOptionInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerDataOptionInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'label': json['label'],
        'value': !exists(json, 'value') ? undefined : json['value'],
        'options': !exists(json, 'options') ? undefined : ((json['options'] as Array<any>).map(CustomerDataOptionInterfaceFromJSON)),
    };
}

export function CustomerDataOptionInterfaceToJSON(value?: CustomerDataOptionInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'label': value.label,
        'value': value.value,
        'options': value.options === undefined ? undefined : ((value.options as Array<any>).map(CustomerDataOptionInterfaceToJSON)),
    };
}

