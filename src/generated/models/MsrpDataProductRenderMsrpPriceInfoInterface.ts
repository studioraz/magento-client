/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Price interface.
 * @export
 * @interface MsrpDataProductRenderMsrpPriceInfoInterface
 */
export interface MsrpDataProductRenderMsrpPriceInfoInterface {
    /**
     * 
     * @type {string}
     * @memberof MsrpDataProductRenderMsrpPriceInfoInterface
     */
    msrpPrice: string;
    /**
     * 
     * @type {string}
     * @memberof MsrpDataProductRenderMsrpPriceInfoInterface
     */
    isApplicable: string;
    /**
     * 
     * @type {string}
     * @memberof MsrpDataProductRenderMsrpPriceInfoInterface
     */
    isShownPriceOnGesture: string;
    /**
     * 
     * @type {string}
     * @memberof MsrpDataProductRenderMsrpPriceInfoInterface
     */
    msrpMessage: string;
    /**
     * 
     * @type {string}
     * @memberof MsrpDataProductRenderMsrpPriceInfoInterface
     */
    explanationMessage: string;
    /**
     * ExtensionInterface class for @see \Magento\Msrp\Api\Data\ProductRender\MsrpPriceInfoInterface
     * @type {object}
     * @memberof MsrpDataProductRenderMsrpPriceInfoInterface
     */
    extensionAttributes?: object;
}

/**
 * Check if a given object implements the MsrpDataProductRenderMsrpPriceInfoInterface interface.
 */
export function instanceOfMsrpDataProductRenderMsrpPriceInfoInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "msrpPrice" in value;
    isInstance = isInstance && "isApplicable" in value;
    isInstance = isInstance && "isShownPriceOnGesture" in value;
    isInstance = isInstance && "msrpMessage" in value;
    isInstance = isInstance && "explanationMessage" in value;

    return isInstance;
}

export function MsrpDataProductRenderMsrpPriceInfoInterfaceFromJSON(json: any): MsrpDataProductRenderMsrpPriceInfoInterface {
    return MsrpDataProductRenderMsrpPriceInfoInterfaceFromJSONTyped(json, false);
}

export function MsrpDataProductRenderMsrpPriceInfoInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): MsrpDataProductRenderMsrpPriceInfoInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'msrpPrice': json['msrp_price'],
        'isApplicable': json['is_applicable'],
        'isShownPriceOnGesture': json['is_shown_price_on_gesture'],
        'msrpMessage': json['msrp_message'],
        'explanationMessage': json['explanation_message'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}

export function MsrpDataProductRenderMsrpPriceInfoInterfaceToJSON(value?: MsrpDataProductRenderMsrpPriceInfoInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'msrp_price': value.msrpPrice,
        'is_applicable': value.isApplicable,
        'is_shown_price_on_gesture': value.isShownPriceOnGesture,
        'msrp_message': value.msrpMessage,
        'explanation_message': value.explanationMessage,
        'extension_attributes': value.extensionAttributes,
    };
}

