"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SalesRuleDataConditionInterfaceToJSON = exports.SalesRuleDataConditionInterfaceFromJSONTyped = exports.SalesRuleDataConditionInterfaceFromJSON = exports.instanceOfSalesRuleDataConditionInterface = void 0;
var runtime_1 = require("../runtime");
/**
 * Check if a given object implements the SalesRuleDataConditionInterface interface.
 */
function instanceOfSalesRuleDataConditionInterface(value) {
    var isInstance = true;
    isInstance = isInstance && "conditionType" in value;
    isInstance = isInstance && "operator" in value;
    isInstance = isInstance && "value" in value;
    return isInstance;
}
exports.instanceOfSalesRuleDataConditionInterface = instanceOfSalesRuleDataConditionInterface;
function SalesRuleDataConditionInterfaceFromJSON(json) {
    return SalesRuleDataConditionInterfaceFromJSONTyped(json, false);
}
exports.SalesRuleDataConditionInterfaceFromJSON = SalesRuleDataConditionInterfaceFromJSON;
function SalesRuleDataConditionInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'conditionType': json['condition_type'],
        'conditions': !(0, runtime_1.exists)(json, 'conditions') ? undefined : (json['conditions'].map(SalesRuleDataConditionInterfaceFromJSON)),
        'aggregatorType': !(0, runtime_1.exists)(json, 'aggregator_type') ? undefined : json['aggregator_type'],
        'operator': json['operator'],
        'attributeName': !(0, runtime_1.exists)(json, 'attribute_name') ? undefined : json['attribute_name'],
        'value': json['value'],
        'extensionAttributes': !(0, runtime_1.exists)(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}
exports.SalesRuleDataConditionInterfaceFromJSONTyped = SalesRuleDataConditionInterfaceFromJSONTyped;
function SalesRuleDataConditionInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'condition_type': value.conditionType,
        'conditions': value.conditions === undefined ? undefined : (value.conditions.map(SalesRuleDataConditionInterfaceToJSON)),
        'aggregator_type': value.aggregatorType,
        'operator': value.operator,
        'attribute_name': value.attributeName,
        'value': value.value,
        'extension_attributes': value.extensionAttributes,
    };
}
exports.SalesRuleDataConditionInterfaceToJSON = SalesRuleDataConditionInterfaceToJSON;
//# sourceMappingURL=SalesRuleDataConditionInterface.js.map