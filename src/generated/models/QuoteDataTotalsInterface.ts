/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { QuoteDataTotalSegmentInterface } from './QuoteDataTotalSegmentInterface';
import {
    QuoteDataTotalSegmentInterfaceFromJSON,
    QuoteDataTotalSegmentInterfaceFromJSONTyped,
    QuoteDataTotalSegmentInterfaceToJSON,
} from './QuoteDataTotalSegmentInterface';
import type { QuoteDataTotalsExtensionInterface } from './QuoteDataTotalsExtensionInterface';
import {
    QuoteDataTotalsExtensionInterfaceFromJSON,
    QuoteDataTotalsExtensionInterfaceFromJSONTyped,
    QuoteDataTotalsExtensionInterfaceToJSON,
} from './QuoteDataTotalsExtensionInterface';
import type { QuoteDataTotalsItemInterface } from './QuoteDataTotalsItemInterface';
import {
    QuoteDataTotalsItemInterfaceFromJSON,
    QuoteDataTotalsItemInterfaceFromJSONTyped,
    QuoteDataTotalsItemInterfaceToJSON,
} from './QuoteDataTotalsItemInterface';

/**
 * Interface TotalsInterface
 * @export
 * @interface QuoteDataTotalsInterface
 */
export interface QuoteDataTotalsInterface {
    /**
     * Grand total in quote currency
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    grandTotal?: number;
    /**
     * Grand total in base currency
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    baseGrandTotal?: number;
    /**
     * Subtotal in quote currency
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    subtotal?: number;
    /**
     * Subtotal in base currency
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    baseSubtotal?: number;
    /**
     * Discount amount in quote currency
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    discountAmount?: number;
    /**
     * Discount amount in base currency
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    baseDiscountAmount?: number;
    /**
     * Subtotal in quote currency with applied discount
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    subtotalWithDiscount?: number;
    /**
     * Subtotal in base currency with applied discount
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    baseSubtotalWithDiscount?: number;
    /**
     * Shipping amount in quote currency
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    shippingAmount?: number;
    /**
     * Shipping amount in base currency
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    baseShippingAmount?: number;
    /**
     * Shipping discount amount in quote currency
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    shippingDiscountAmount?: number;
    /**
     * Shipping discount amount in base currency
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    baseShippingDiscountAmount?: number;
    /**
     * Tax amount in quote currency
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    taxAmount?: number;
    /**
     * Tax amount in base currency
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    baseTaxAmount?: number;
    /**
     * Item weee tax applied amount in quote currency.
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    weeeTaxAppliedAmount: number;
    /**
     * Shipping tax amount in quote currency
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    shippingTaxAmount?: number;
    /**
     * Shipping tax amount in base currency
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    baseShippingTaxAmount?: number;
    /**
     * Subtotal including tax in quote currency
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    subtotalInclTax?: number;
    /**
     * Subtotal including tax in base currency
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    baseSubtotalInclTax?: number;
    /**
     * Shipping including tax in quote currency
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    shippingInclTax?: number;
    /**
     * Shipping including tax in base currency
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    baseShippingInclTax?: number;
    /**
     * Base currency code
     * @type {string}
     * @memberof QuoteDataTotalsInterface
     */
    baseCurrencyCode?: string;
    /**
     * Quote currency code
     * @type {string}
     * @memberof QuoteDataTotalsInterface
     */
    quoteCurrencyCode?: string;
    /**
     * Applied coupon code
     * @type {string}
     * @memberof QuoteDataTotalsInterface
     */
    couponCode?: string;
    /**
     * Items qty
     * @type {number}
     * @memberof QuoteDataTotalsInterface
     */
    itemsQty?: number;
    /**
     * Totals by items
     * @type {Array<QuoteDataTotalsItemInterface>}
     * @memberof QuoteDataTotalsInterface
     */
    items?: Array<QuoteDataTotalsItemInterface>;
    /**
     * Dynamically calculated totals
     * @type {Array<QuoteDataTotalSegmentInterface>}
     * @memberof QuoteDataTotalsInterface
     */
    totalSegments: Array<QuoteDataTotalSegmentInterface>;
    /**
     * 
     * @type {QuoteDataTotalsExtensionInterface}
     * @memberof QuoteDataTotalsInterface
     */
    extensionAttributes?: QuoteDataTotalsExtensionInterface;
}

/**
 * Check if a given object implements the QuoteDataTotalsInterface interface.
 */
export function instanceOfQuoteDataTotalsInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "weeeTaxAppliedAmount" in value;
    isInstance = isInstance && "totalSegments" in value;

    return isInstance;
}

export function QuoteDataTotalsInterfaceFromJSON(json: any): QuoteDataTotalsInterface {
    return QuoteDataTotalsInterfaceFromJSONTyped(json, false);
}

export function QuoteDataTotalsInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuoteDataTotalsInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'grandTotal': !exists(json, 'grand_total') ? undefined : json['grand_total'],
        'baseGrandTotal': !exists(json, 'base_grand_total') ? undefined : json['base_grand_total'],
        'subtotal': !exists(json, 'subtotal') ? undefined : json['subtotal'],
        'baseSubtotal': !exists(json, 'base_subtotal') ? undefined : json['base_subtotal'],
        'discountAmount': !exists(json, 'discount_amount') ? undefined : json['discount_amount'],
        'baseDiscountAmount': !exists(json, 'base_discount_amount') ? undefined : json['base_discount_amount'],
        'subtotalWithDiscount': !exists(json, 'subtotal_with_discount') ? undefined : json['subtotal_with_discount'],
        'baseSubtotalWithDiscount': !exists(json, 'base_subtotal_with_discount') ? undefined : json['base_subtotal_with_discount'],
        'shippingAmount': !exists(json, 'shipping_amount') ? undefined : json['shipping_amount'],
        'baseShippingAmount': !exists(json, 'base_shipping_amount') ? undefined : json['base_shipping_amount'],
        'shippingDiscountAmount': !exists(json, 'shipping_discount_amount') ? undefined : json['shipping_discount_amount'],
        'baseShippingDiscountAmount': !exists(json, 'base_shipping_discount_amount') ? undefined : json['base_shipping_discount_amount'],
        'taxAmount': !exists(json, 'tax_amount') ? undefined : json['tax_amount'],
        'baseTaxAmount': !exists(json, 'base_tax_amount') ? undefined : json['base_tax_amount'],
        'weeeTaxAppliedAmount': json['weee_tax_applied_amount'],
        'shippingTaxAmount': !exists(json, 'shipping_tax_amount') ? undefined : json['shipping_tax_amount'],
        'baseShippingTaxAmount': !exists(json, 'base_shipping_tax_amount') ? undefined : json['base_shipping_tax_amount'],
        'subtotalInclTax': !exists(json, 'subtotal_incl_tax') ? undefined : json['subtotal_incl_tax'],
        'baseSubtotalInclTax': !exists(json, 'base_subtotal_incl_tax') ? undefined : json['base_subtotal_incl_tax'],
        'shippingInclTax': !exists(json, 'shipping_incl_tax') ? undefined : json['shipping_incl_tax'],
        'baseShippingInclTax': !exists(json, 'base_shipping_incl_tax') ? undefined : json['base_shipping_incl_tax'],
        'baseCurrencyCode': !exists(json, 'base_currency_code') ? undefined : json['base_currency_code'],
        'quoteCurrencyCode': !exists(json, 'quote_currency_code') ? undefined : json['quote_currency_code'],
        'couponCode': !exists(json, 'coupon_code') ? undefined : json['coupon_code'],
        'itemsQty': !exists(json, 'items_qty') ? undefined : json['items_qty'],
        'items': !exists(json, 'items') ? undefined : ((json['items'] as Array<any>).map(QuoteDataTotalsItemInterfaceFromJSON)),
        'totalSegments': ((json['total_segments'] as Array<any>).map(QuoteDataTotalSegmentInterfaceFromJSON)),
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : QuoteDataTotalsExtensionInterfaceFromJSON(json['extension_attributes']),
    };
}

export function QuoteDataTotalsInterfaceToJSON(value?: QuoteDataTotalsInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'grand_total': value.grandTotal,
        'base_grand_total': value.baseGrandTotal,
        'subtotal': value.subtotal,
        'base_subtotal': value.baseSubtotal,
        'discount_amount': value.discountAmount,
        'base_discount_amount': value.baseDiscountAmount,
        'subtotal_with_discount': value.subtotalWithDiscount,
        'base_subtotal_with_discount': value.baseSubtotalWithDiscount,
        'shipping_amount': value.shippingAmount,
        'base_shipping_amount': value.baseShippingAmount,
        'shipping_discount_amount': value.shippingDiscountAmount,
        'base_shipping_discount_amount': value.baseShippingDiscountAmount,
        'tax_amount': value.taxAmount,
        'base_tax_amount': value.baseTaxAmount,
        'weee_tax_applied_amount': value.weeeTaxAppliedAmount,
        'shipping_tax_amount': value.shippingTaxAmount,
        'base_shipping_tax_amount': value.baseShippingTaxAmount,
        'subtotal_incl_tax': value.subtotalInclTax,
        'base_subtotal_incl_tax': value.baseSubtotalInclTax,
        'shipping_incl_tax': value.shippingInclTax,
        'base_shipping_incl_tax': value.baseShippingInclTax,
        'base_currency_code': value.baseCurrencyCode,
        'quote_currency_code': value.quoteCurrencyCode,
        'coupon_code': value.couponCode,
        'items_qty': value.itemsQty,
        'items': value.items === undefined ? undefined : ((value.items as Array<any>).map(QuoteDataTotalsItemInterfaceToJSON)),
        'total_segments': ((value.totalSegments as Array<any>).map(QuoteDataTotalSegmentInterfaceToJSON)),
        'extension_attributes': QuoteDataTotalsExtensionInterfaceToJSON(value.extensionAttributes),
    };
}

