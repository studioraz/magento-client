"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.VaultDataPaymentTokenInterfaceToJSON = exports.VaultDataPaymentTokenInterfaceFromJSONTyped = exports.VaultDataPaymentTokenInterfaceFromJSON = exports.instanceOfVaultDataPaymentTokenInterface = void 0;
var runtime_1 = require("../runtime");
/**
 * Check if a given object implements the VaultDataPaymentTokenInterface interface.
 */
function instanceOfVaultDataPaymentTokenInterface(value) {
    var isInstance = true;
    isInstance = isInstance && "publicHash" in value;
    isInstance = isInstance && "paymentMethodCode" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "gatewayToken" in value;
    isInstance = isInstance && "tokenDetails" in value;
    isInstance = isInstance && "isActive" in value;
    isInstance = isInstance && "isVisible" in value;
    return isInstance;
}
exports.instanceOfVaultDataPaymentTokenInterface = instanceOfVaultDataPaymentTokenInterface;
function VaultDataPaymentTokenInterfaceFromJSON(json) {
    return VaultDataPaymentTokenInterfaceFromJSONTyped(json, false);
}
exports.VaultDataPaymentTokenInterfaceFromJSON = VaultDataPaymentTokenInterfaceFromJSON;
function VaultDataPaymentTokenInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'entityId': !(0, runtime_1.exists)(json, 'entity_id') ? undefined : json['entity_id'],
        'customerId': !(0, runtime_1.exists)(json, 'customer_id') ? undefined : json['customer_id'],
        'publicHash': json['public_hash'],
        'paymentMethodCode': json['payment_method_code'],
        'type': json['type'],
        'createdAt': !(0, runtime_1.exists)(json, 'created_at') ? undefined : json['created_at'],
        'expiresAt': !(0, runtime_1.exists)(json, 'expires_at') ? undefined : json['expires_at'],
        'gatewayToken': json['gateway_token'],
        'tokenDetails': json['token_details'],
        'isActive': json['is_active'],
        'isVisible': json['is_visible'],
    };
}
exports.VaultDataPaymentTokenInterfaceFromJSONTyped = VaultDataPaymentTokenInterfaceFromJSONTyped;
function VaultDataPaymentTokenInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'entity_id': value.entityId,
        'customer_id': value.customerId,
        'public_hash': value.publicHash,
        'payment_method_code': value.paymentMethodCode,
        'type': value.type,
        'created_at': value.createdAt,
        'expires_at': value.expiresAt,
        'gateway_token': value.gatewayToken,
        'token_details': value.tokenDetails,
        'is_active': value.isActive,
        'is_visible': value.isVisible,
    };
}
exports.VaultDataPaymentTokenInterfaceToJSON = VaultDataPaymentTokenInterfaceToJSON;
//# sourceMappingURL=VaultDataPaymentTokenInterface.js.map