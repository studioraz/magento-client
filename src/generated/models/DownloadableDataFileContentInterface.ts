/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DownloadableDataFileContentInterface
 */
export interface DownloadableDataFileContentInterface {
    /**
     * Data (base64 encoded content)
     * @type {string}
     * @memberof DownloadableDataFileContentInterface
     */
    fileData: string;
    /**
     * File name
     * @type {string}
     * @memberof DownloadableDataFileContentInterface
     */
    name: string;
    /**
     * ExtensionInterface class for @see \Magento\Downloadable\Api\Data\File\ContentInterface
     * @type {object}
     * @memberof DownloadableDataFileContentInterface
     */
    extensionAttributes?: object;
}

/**
 * Check if a given object implements the DownloadableDataFileContentInterface interface.
 */
export function instanceOfDownloadableDataFileContentInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "fileData" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function DownloadableDataFileContentInterfaceFromJSON(json: any): DownloadableDataFileContentInterface {
    return DownloadableDataFileContentInterfaceFromJSONTyped(json, false);
}

export function DownloadableDataFileContentInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): DownloadableDataFileContentInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fileData': json['file_data'],
        'name': json['name'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}

export function DownloadableDataFileContentInterfaceToJSON(value?: DownloadableDataFileContentInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'file_data': value.fileData,
        'name': value.name,
        'extension_attributes': value.extensionAttributes,
    };
}

