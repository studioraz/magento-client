/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Tax rule interface.
 * @export
 * @interface TaxDataTaxRuleInterface
 */
export interface TaxDataTaxRuleInterface {
    /**
     * Id
     * @type {number}
     * @memberof TaxDataTaxRuleInterface
     */
    id?: number;
    /**
     * Tax rule code
     * @type {string}
     * @memberof TaxDataTaxRuleInterface
     */
    code: string;
    /**
     * Priority
     * @type {number}
     * @memberof TaxDataTaxRuleInterface
     */
    priority: number;
    /**
     * Sort order.
     * @type {number}
     * @memberof TaxDataTaxRuleInterface
     */
    position: number;
    /**
     * Customer tax class id
     * @type {Array<number>}
     * @memberof TaxDataTaxRuleInterface
     */
    customerTaxClassIds: Array<number>;
    /**
     * Product tax class id
     * @type {Array<number>}
     * @memberof TaxDataTaxRuleInterface
     */
    productTaxClassIds: Array<number>;
    /**
     * Tax rate ids
     * @type {Array<number>}
     * @memberof TaxDataTaxRuleInterface
     */
    taxRateIds: Array<number>;
    /**
     * Calculate subtotal.
     * @type {boolean}
     * @memberof TaxDataTaxRuleInterface
     */
    calculateSubtotal?: boolean;
    /**
     * ExtensionInterface class for @see \Magento\Tax\Api\Data\TaxRuleInterface
     * @type {object}
     * @memberof TaxDataTaxRuleInterface
     */
    extensionAttributes?: object;
}

/**
 * Check if a given object implements the TaxDataTaxRuleInterface interface.
 */
export function instanceOfTaxDataTaxRuleInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "code" in value;
    isInstance = isInstance && "priority" in value;
    isInstance = isInstance && "position" in value;
    isInstance = isInstance && "customerTaxClassIds" in value;
    isInstance = isInstance && "productTaxClassIds" in value;
    isInstance = isInstance && "taxRateIds" in value;

    return isInstance;
}

export function TaxDataTaxRuleInterfaceFromJSON(json: any): TaxDataTaxRuleInterface {
    return TaxDataTaxRuleInterfaceFromJSONTyped(json, false);
}

export function TaxDataTaxRuleInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaxDataTaxRuleInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'code': json['code'],
        'priority': json['priority'],
        'position': json['position'],
        'customerTaxClassIds': json['customer_tax_class_ids'],
        'productTaxClassIds': json['product_tax_class_ids'],
        'taxRateIds': json['tax_rate_ids'],
        'calculateSubtotal': !exists(json, 'calculate_subtotal') ? undefined : json['calculate_subtotal'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}

export function TaxDataTaxRuleInterfaceToJSON(value?: TaxDataTaxRuleInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'code': value.code,
        'priority': value.priority,
        'position': value.position,
        'customer_tax_class_ids': value.customerTaxClassIds,
        'product_tax_class_ids': value.productTaxClassIds,
        'tax_rate_ids': value.taxRateIds,
        'calculate_subtotal': value.calculateSubtotal,
        'extension_attributes': value.extensionAttributes,
    };
}

