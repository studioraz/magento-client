"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TaxDataTaxRuleInterfaceToJSON = exports.TaxDataTaxRuleInterfaceFromJSONTyped = exports.TaxDataTaxRuleInterfaceFromJSON = exports.instanceOfTaxDataTaxRuleInterface = void 0;
var runtime_1 = require("../runtime");
/**
 * Check if a given object implements the TaxDataTaxRuleInterface interface.
 */
function instanceOfTaxDataTaxRuleInterface(value) {
    var isInstance = true;
    isInstance = isInstance && "code" in value;
    isInstance = isInstance && "priority" in value;
    isInstance = isInstance && "position" in value;
    isInstance = isInstance && "customerTaxClassIds" in value;
    isInstance = isInstance && "productTaxClassIds" in value;
    isInstance = isInstance && "taxRateIds" in value;
    return isInstance;
}
exports.instanceOfTaxDataTaxRuleInterface = instanceOfTaxDataTaxRuleInterface;
function TaxDataTaxRuleInterfaceFromJSON(json) {
    return TaxDataTaxRuleInterfaceFromJSONTyped(json, false);
}
exports.TaxDataTaxRuleInterfaceFromJSON = TaxDataTaxRuleInterfaceFromJSON;
function TaxDataTaxRuleInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        'code': json['code'],
        'priority': json['priority'],
        'position': json['position'],
        'customerTaxClassIds': json['customer_tax_class_ids'],
        'productTaxClassIds': json['product_tax_class_ids'],
        'taxRateIds': json['tax_rate_ids'],
        'calculateSubtotal': !(0, runtime_1.exists)(json, 'calculate_subtotal') ? undefined : json['calculate_subtotal'],
        'extensionAttributes': !(0, runtime_1.exists)(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}
exports.TaxDataTaxRuleInterfaceFromJSONTyped = TaxDataTaxRuleInterfaceFromJSONTyped;
function TaxDataTaxRuleInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'code': value.code,
        'priority': value.priority,
        'position': value.position,
        'customer_tax_class_ids': value.customerTaxClassIds,
        'product_tax_class_ids': value.productTaxClassIds,
        'tax_rate_ids': value.taxRateIds,
        'calculate_subtotal': value.calculateSubtotal,
        'extension_attributes': value.extensionAttributes,
    };
}
exports.TaxDataTaxRuleInterfaceToJSON = TaxDataTaxRuleInterfaceToJSON;
//# sourceMappingURL=TaxDataTaxRuleInterface.js.map