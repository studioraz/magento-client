/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { InventoryInStorePickupApiDataSearchRequestFilterInterface } from './InventoryInStorePickupApiDataSearchRequestFilterInterface';
/**
 * Filter to filter by Fields. Each field may be filtered with different condition type. Supported condition types restricted by @see \Magento\Framework\Api\SearchCriteriaInterface
 * @export
 * @interface InventoryInStorePickupApiDataSearchRequestFiltersInterface
 */
export interface InventoryInStorePickupApiDataSearchRequestFiltersInterface {
    /**
     *
     * @type {InventoryInStorePickupApiDataSearchRequestFilterInterface}
     * @memberof InventoryInStorePickupApiDataSearchRequestFiltersInterface
     */
    country?: InventoryInStorePickupApiDataSearchRequestFilterInterface;
    /**
     *
     * @type {InventoryInStorePickupApiDataSearchRequestFilterInterface}
     * @memberof InventoryInStorePickupApiDataSearchRequestFiltersInterface
     */
    postcode?: InventoryInStorePickupApiDataSearchRequestFilterInterface;
    /**
     *
     * @type {InventoryInStorePickupApiDataSearchRequestFilterInterface}
     * @memberof InventoryInStorePickupApiDataSearchRequestFiltersInterface
     */
    region?: InventoryInStorePickupApiDataSearchRequestFilterInterface;
    /**
     *
     * @type {InventoryInStorePickupApiDataSearchRequestFilterInterface}
     * @memberof InventoryInStorePickupApiDataSearchRequestFiltersInterface
     */
    regionId?: InventoryInStorePickupApiDataSearchRequestFilterInterface;
    /**
     *
     * @type {InventoryInStorePickupApiDataSearchRequestFilterInterface}
     * @memberof InventoryInStorePickupApiDataSearchRequestFiltersInterface
     */
    city?: InventoryInStorePickupApiDataSearchRequestFilterInterface;
    /**
     *
     * @type {InventoryInStorePickupApiDataSearchRequestFilterInterface}
     * @memberof InventoryInStorePickupApiDataSearchRequestFiltersInterface
     */
    street?: InventoryInStorePickupApiDataSearchRequestFilterInterface;
    /**
     *
     * @type {InventoryInStorePickupApiDataSearchRequestFilterInterface}
     * @memberof InventoryInStorePickupApiDataSearchRequestFiltersInterface
     */
    name?: InventoryInStorePickupApiDataSearchRequestFilterInterface;
    /**
     *
     * @type {InventoryInStorePickupApiDataSearchRequestFilterInterface}
     * @memberof InventoryInStorePickupApiDataSearchRequestFiltersInterface
     */
    pickupLocationCode?: InventoryInStorePickupApiDataSearchRequestFilterInterface;
}
/**
 * Check if a given object implements the InventoryInStorePickupApiDataSearchRequestFiltersInterface interface.
 */
export declare function instanceOfInventoryInStorePickupApiDataSearchRequestFiltersInterface(value: object): boolean;
export declare function InventoryInStorePickupApiDataSearchRequestFiltersInterfaceFromJSON(json: any): InventoryInStorePickupApiDataSearchRequestFiltersInterface;
export declare function InventoryInStorePickupApiDataSearchRequestFiltersInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): InventoryInStorePickupApiDataSearchRequestFiltersInterface;
export declare function InventoryInStorePickupApiDataSearchRequestFiltersInterfaceToJSON(value?: InventoryInStorePickupApiDataSearchRequestFiltersInterface | null): any;
