/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Image Content data interface
 * @export
 * @interface FrameworkDataImageContentInterface
 */
export interface FrameworkDataImageContentInterface {
    /**
     * Media data (base64 encoded content)
     * @type {string}
     * @memberof FrameworkDataImageContentInterface
     */
    base64EncodedData: string;
    /**
     * MIME type
     * @type {string}
     * @memberof FrameworkDataImageContentInterface
     */
    type: string;
    /**
     * Image name
     * @type {string}
     * @memberof FrameworkDataImageContentInterface
     */
    name: string;
}

/**
 * Check if a given object implements the FrameworkDataImageContentInterface interface.
 */
export function instanceOfFrameworkDataImageContentInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "base64EncodedData" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function FrameworkDataImageContentInterfaceFromJSON(json: any): FrameworkDataImageContentInterface {
    return FrameworkDataImageContentInterfaceFromJSONTyped(json, false);
}

export function FrameworkDataImageContentInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): FrameworkDataImageContentInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'base64EncodedData': json['base64_encoded_data'],
        'type': json['type'],
        'name': json['name'],
    };
}

export function FrameworkDataImageContentInterfaceToJSON(value?: FrameworkDataImageContentInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'base64_encoded_data': value.base64EncodedData,
        'type': value.type,
        'name': value.name,
    };
}

