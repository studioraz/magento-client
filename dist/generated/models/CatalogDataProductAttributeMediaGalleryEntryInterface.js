"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CatalogDataProductAttributeMediaGalleryEntryInterfaceToJSON = exports.CatalogDataProductAttributeMediaGalleryEntryInterfaceFromJSONTyped = exports.CatalogDataProductAttributeMediaGalleryEntryInterfaceFromJSON = exports.instanceOfCatalogDataProductAttributeMediaGalleryEntryInterface = void 0;
var runtime_1 = require("../runtime");
var CatalogDataProductAttributeMediaGalleryEntryExtensionInterface_1 = require("./CatalogDataProductAttributeMediaGalleryEntryExtensionInterface");
var FrameworkDataImageContentInterface_1 = require("./FrameworkDataImageContentInterface");
/**
 * Check if a given object implements the CatalogDataProductAttributeMediaGalleryEntryInterface interface.
 */
function instanceOfCatalogDataProductAttributeMediaGalleryEntryInterface(value) {
    var isInstance = true;
    isInstance = isInstance && "mediaType" in value;
    isInstance = isInstance && "label" in value;
    isInstance = isInstance && "position" in value;
    isInstance = isInstance && "disabled" in value;
    isInstance = isInstance && "types" in value;
    return isInstance;
}
exports.instanceOfCatalogDataProductAttributeMediaGalleryEntryInterface = instanceOfCatalogDataProductAttributeMediaGalleryEntryInterface;
function CatalogDataProductAttributeMediaGalleryEntryInterfaceFromJSON(json) {
    return CatalogDataProductAttributeMediaGalleryEntryInterfaceFromJSONTyped(json, false);
}
exports.CatalogDataProductAttributeMediaGalleryEntryInterfaceFromJSON = CatalogDataProductAttributeMediaGalleryEntryInterfaceFromJSON;
function CatalogDataProductAttributeMediaGalleryEntryInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        'mediaType': json['media_type'],
        'label': json['label'],
        'position': json['position'],
        'disabled': json['disabled'],
        'types': json['types'],
        'file': !(0, runtime_1.exists)(json, 'file') ? undefined : json['file'],
        'content': !(0, runtime_1.exists)(json, 'content') ? undefined : (0, FrameworkDataImageContentInterface_1.FrameworkDataImageContentInterfaceFromJSON)(json['content']),
        'extensionAttributes': !(0, runtime_1.exists)(json, 'extension_attributes') ? undefined : (0, CatalogDataProductAttributeMediaGalleryEntryExtensionInterface_1.CatalogDataProductAttributeMediaGalleryEntryExtensionInterfaceFromJSON)(json['extension_attributes']),
    };
}
exports.CatalogDataProductAttributeMediaGalleryEntryInterfaceFromJSONTyped = CatalogDataProductAttributeMediaGalleryEntryInterfaceFromJSONTyped;
function CatalogDataProductAttributeMediaGalleryEntryInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'media_type': value.mediaType,
        'label': value.label,
        'position': value.position,
        'disabled': value.disabled,
        'types': value.types,
        'file': value.file,
        'content': (0, FrameworkDataImageContentInterface_1.FrameworkDataImageContentInterfaceToJSON)(value.content),
        'extension_attributes': (0, CatalogDataProductAttributeMediaGalleryEntryExtensionInterface_1.CatalogDataProductAttributeMediaGalleryEntryExtensionInterfaceToJSON)(value.extensionAttributes),
    };
}
exports.CatalogDataProductAttributeMediaGalleryEntryInterfaceToJSON = CatalogDataProductAttributeMediaGalleryEntryInterfaceToJSON;
//# sourceMappingURL=CatalogDataProductAttributeMediaGalleryEntryInterface.js.map