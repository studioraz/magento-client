"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InventorySalesApiDataIsProductSalableForRequestedQtyResultInterfaceToJSON = exports.InventorySalesApiDataIsProductSalableForRequestedQtyResultInterfaceFromJSONTyped = exports.InventorySalesApiDataIsProductSalableForRequestedQtyResultInterfaceFromJSON = exports.instanceOfInventorySalesApiDataIsProductSalableForRequestedQtyResultInterface = void 0;
var runtime_1 = require("../runtime");
var InventorySalesApiDataProductSalabilityErrorInterface_1 = require("./InventorySalesApiDataProductSalabilityErrorInterface");
/**
 * Check if a given object implements the InventorySalesApiDataIsProductSalableForRequestedQtyResultInterface interface.
 */
function instanceOfInventorySalesApiDataIsProductSalableForRequestedQtyResultInterface(value) {
    var isInstance = true;
    isInstance = isInstance && "sku" in value;
    isInstance = isInstance && "stockId" in value;
    isInstance = isInstance && "salable" in value;
    isInstance = isInstance && "errors" in value;
    return isInstance;
}
exports.instanceOfInventorySalesApiDataIsProductSalableForRequestedQtyResultInterface = instanceOfInventorySalesApiDataIsProductSalableForRequestedQtyResultInterface;
function InventorySalesApiDataIsProductSalableForRequestedQtyResultInterfaceFromJSON(json) {
    return InventorySalesApiDataIsProductSalableForRequestedQtyResultInterfaceFromJSONTyped(json, false);
}
exports.InventorySalesApiDataIsProductSalableForRequestedQtyResultInterfaceFromJSON = InventorySalesApiDataIsProductSalableForRequestedQtyResultInterfaceFromJSON;
function InventorySalesApiDataIsProductSalableForRequestedQtyResultInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'sku': json['sku'],
        'stockId': json['stock_id'],
        'salable': json['salable'],
        'errors': (json['errors'].map(InventorySalesApiDataProductSalabilityErrorInterface_1.InventorySalesApiDataProductSalabilityErrorInterfaceFromJSON)),
        'extensionAttributes': !(0, runtime_1.exists)(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}
exports.InventorySalesApiDataIsProductSalableForRequestedQtyResultInterfaceFromJSONTyped = InventorySalesApiDataIsProductSalableForRequestedQtyResultInterfaceFromJSONTyped;
function InventorySalesApiDataIsProductSalableForRequestedQtyResultInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'sku': value.sku,
        'stock_id': value.stockId,
        'salable': value.salable,
        'errors': (value.errors.map(InventorySalesApiDataProductSalabilityErrorInterface_1.InventorySalesApiDataProductSalabilityErrorInterfaceToJSON)),
        'extension_attributes': value.extensionAttributes,
    };
}
exports.InventorySalesApiDataIsProductSalableForRequestedQtyResultInterfaceToJSON = InventorySalesApiDataIsProductSalableForRequestedQtyResultInterfaceToJSON;
//# sourceMappingURL=InventorySalesApiDataIsProductSalableForRequestedQtyResultInterface.js.map