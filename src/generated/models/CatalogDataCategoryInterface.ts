/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FrameworkAttributeInterface } from './FrameworkAttributeInterface';
import {
    FrameworkAttributeInterfaceFromJSON,
    FrameworkAttributeInterfaceFromJSONTyped,
    FrameworkAttributeInterfaceToJSON,
} from './FrameworkAttributeInterface';

/**
 * Category data interface.
 * @export
 * @interface CatalogDataCategoryInterface
 */
export interface CatalogDataCategoryInterface {
    /**
     * Category id.
     * @type {number}
     * @memberof CatalogDataCategoryInterface
     */
    id?: number;
    /**
     * Parent category ID
     * @type {number}
     * @memberof CatalogDataCategoryInterface
     */
    parentId?: number;
    /**
     * Category name
     * @type {string}
     * @memberof CatalogDataCategoryInterface
     */
    name?: string;
    /**
     * Whether category is active
     * @type {boolean}
     * @memberof CatalogDataCategoryInterface
     */
    isActive?: boolean;
    /**
     * Category position
     * @type {number}
     * @memberof CatalogDataCategoryInterface
     */
    position?: number;
    /**
     * Category level
     * @type {number}
     * @memberof CatalogDataCategoryInterface
     */
    level?: number;
    /**
     * Children ids comma separated.
     * @type {string}
     * @memberof CatalogDataCategoryInterface
     */
    children?: string;
    /**
     * Category creation date and time.
     * @type {string}
     * @memberof CatalogDataCategoryInterface
     */
    createdAt?: string;
    /**
     * Category last update date and time.
     * @type {string}
     * @memberof CatalogDataCategoryInterface
     */
    updatedAt?: string;
    /**
     * Category full path.
     * @type {string}
     * @memberof CatalogDataCategoryInterface
     */
    path?: string;
    /**
     * Available sort by for category.
     * @type {Array<string>}
     * @memberof CatalogDataCategoryInterface
     */
    availableSortBy?: Array<string>;
    /**
     * Category is included in menu.
     * @type {boolean}
     * @memberof CatalogDataCategoryInterface
     */
    includeInMenu?: boolean;
    /**
     * ExtensionInterface class for @see \Magento\Catalog\Api\Data\CategoryInterface
     * @type {object}
     * @memberof CatalogDataCategoryInterface
     */
    extensionAttributes?: object;
    /**
     * Custom attributes values.
     * @type {Array<FrameworkAttributeInterface>}
     * @memberof CatalogDataCategoryInterface
     */
    customAttributes?: Array<FrameworkAttributeInterface>;
}

/**
 * Check if a given object implements the CatalogDataCategoryInterface interface.
 */
export function instanceOfCatalogDataCategoryInterface(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CatalogDataCategoryInterfaceFromJSON(json: any): CatalogDataCategoryInterface {
    return CatalogDataCategoryInterfaceFromJSONTyped(json, false);
}

export function CatalogDataCategoryInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogDataCategoryInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'parentId': !exists(json, 'parent_id') ? undefined : json['parent_id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'isActive': !exists(json, 'is_active') ? undefined : json['is_active'],
        'position': !exists(json, 'position') ? undefined : json['position'],
        'level': !exists(json, 'level') ? undefined : json['level'],
        'children': !exists(json, 'children') ? undefined : json['children'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'updatedAt': !exists(json, 'updated_at') ? undefined : json['updated_at'],
        'path': !exists(json, 'path') ? undefined : json['path'],
        'availableSortBy': !exists(json, 'available_sort_by') ? undefined : json['available_sort_by'],
        'includeInMenu': !exists(json, 'include_in_menu') ? undefined : json['include_in_menu'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
        'customAttributes': !exists(json, 'custom_attributes') ? undefined : ((json['custom_attributes'] as Array<any>).map(FrameworkAttributeInterfaceFromJSON)),
    };
}

export function CatalogDataCategoryInterfaceToJSON(value?: CatalogDataCategoryInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'parent_id': value.parentId,
        'name': value.name,
        'is_active': value.isActive,
        'position': value.position,
        'level': value.level,
        'children': value.children,
        'created_at': value.createdAt,
        'updated_at': value.updatedAt,
        'path': value.path,
        'available_sort_by': value.availableSortBy,
        'include_in_menu': value.includeInMenu,
        'extension_attributes': value.extensionAttributes,
        'custom_attributes': value.customAttributes === undefined ? undefined : ((value.customAttributes as Array<any>).map(FrameworkAttributeInterfaceToJSON)),
    };
}

