/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CatalogDataProductRenderInterface } from './CatalogDataProductRenderInterface';
import {
    CatalogDataProductRenderInterfaceFromJSON,
    CatalogDataProductRenderInterfaceFromJSONTyped,
    CatalogDataProductRenderInterfaceToJSON,
} from './CatalogDataProductRenderInterface';

/**
 * Dto that holds render information about products
 * @export
 * @interface CatalogDataProductRenderSearchResultsInterface
 */
export interface CatalogDataProductRenderSearchResultsInterface {
    /**
     * List of products rendered information
     * @type {Array<CatalogDataProductRenderInterface>}
     * @memberof CatalogDataProductRenderSearchResultsInterface
     */
    items: Array<CatalogDataProductRenderInterface>;
}

/**
 * Check if a given object implements the CatalogDataProductRenderSearchResultsInterface interface.
 */
export function instanceOfCatalogDataProductRenderSearchResultsInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "items" in value;

    return isInstance;
}

export function CatalogDataProductRenderSearchResultsInterfaceFromJSON(json: any): CatalogDataProductRenderSearchResultsInterface {
    return CatalogDataProductRenderSearchResultsInterfaceFromJSONTyped(json, false);
}

export function CatalogDataProductRenderSearchResultsInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogDataProductRenderSearchResultsInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(CatalogDataProductRenderInterfaceFromJSON)),
    };
}

export function CatalogDataProductRenderSearchResultsInterfaceToJSON(value?: CatalogDataProductRenderSearchResultsInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': ((value.items as Array<any>).map(CatalogDataProductRenderInterfaceToJSON)),
    };
}

