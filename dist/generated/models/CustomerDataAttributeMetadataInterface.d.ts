/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CustomerDataOptionInterface } from './CustomerDataOptionInterface';
import type { CustomerDataValidationRuleInterface } from './CustomerDataValidationRuleInterface';
/**
 * Customer attribute metadata interface.
 * @export
 * @interface CustomerDataAttributeMetadataInterface
 */
export interface CustomerDataAttributeMetadataInterface {
    /**
     * HTML for input element.
     * @type {string}
     * @memberof CustomerDataAttributeMetadataInterface
     */
    frontendInput: string;
    /**
     * Template used for input (e.g. "date")
     * @type {string}
     * @memberof CustomerDataAttributeMetadataInterface
     */
    inputFilter: string;
    /**
     * Label of the store.
     * @type {string}
     * @memberof CustomerDataAttributeMetadataInterface
     */
    storeLabel: string;
    /**
     * Validation rules.
     * @type {Array<CustomerDataValidationRuleInterface>}
     * @memberof CustomerDataAttributeMetadataInterface
     */
    validationRules: Array<CustomerDataValidationRuleInterface>;
    /**
     * Of lines of the attribute value.
     * @type {number}
     * @memberof CustomerDataAttributeMetadataInterface
     */
    multilineCount: number;
    /**
     * Attribute is visible on frontend.
     * @type {boolean}
     * @memberof CustomerDataAttributeMetadataInterface
     */
    visible: boolean;
    /**
     * Attribute is required.
     * @type {boolean}
     * @memberof CustomerDataAttributeMetadataInterface
     */
    required: boolean;
    /**
     * Data model for attribute.
     * @type {string}
     * @memberof CustomerDataAttributeMetadataInterface
     */
    dataModel: string;
    /**
     * Options of the attribute (key => value pairs for select)
     * @type {Array<CustomerDataOptionInterface>}
     * @memberof CustomerDataAttributeMetadataInterface
     */
    options: Array<CustomerDataOptionInterface>;
    /**
     * Class which is used to display the attribute on frontend.
     * @type {string}
     * @memberof CustomerDataAttributeMetadataInterface
     */
    frontendClass: string;
    /**
     * Current attribute has been defined by a user.
     * @type {boolean}
     * @memberof CustomerDataAttributeMetadataInterface
     */
    userDefined: boolean;
    /**
     * Attributes sort order.
     * @type {number}
     * @memberof CustomerDataAttributeMetadataInterface
     */
    sortOrder: number;
    /**
     * Label which supposed to be displayed on frontend.
     * @type {string}
     * @memberof CustomerDataAttributeMetadataInterface
     */
    frontendLabel: string;
    /**
     * The note attribute for the element.
     * @type {string}
     * @memberof CustomerDataAttributeMetadataInterface
     */
    note: string;
    /**
     * This is a system attribute.
     * @type {boolean}
     * @memberof CustomerDataAttributeMetadataInterface
     */
    system: boolean;
    /**
     * Backend type.
     * @type {string}
     * @memberof CustomerDataAttributeMetadataInterface
     */
    backendType: string;
    /**
     * It is used in customer grid
     * @type {boolean}
     * @memberof CustomerDataAttributeMetadataInterface
     */
    isUsedInGrid?: boolean;
    /**
     * It is visible in customer grid
     * @type {boolean}
     * @memberof CustomerDataAttributeMetadataInterface
     */
    isVisibleInGrid?: boolean;
    /**
     * It is filterable in customer grid
     * @type {boolean}
     * @memberof CustomerDataAttributeMetadataInterface
     */
    isFilterableInGrid?: boolean;
    /**
     * It is searchable in customer grid
     * @type {boolean}
     * @memberof CustomerDataAttributeMetadataInterface
     */
    isSearchableInGrid?: boolean;
    /**
     * Code of the attribute.
     * @type {string}
     * @memberof CustomerDataAttributeMetadataInterface
     */
    attributeCode: string;
}
/**
 * Check if a given object implements the CustomerDataAttributeMetadataInterface interface.
 */
export declare function instanceOfCustomerDataAttributeMetadataInterface(value: object): boolean;
export declare function CustomerDataAttributeMetadataInterfaceFromJSON(json: any): CustomerDataAttributeMetadataInterface;
export declare function CustomerDataAttributeMetadataInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerDataAttributeMetadataInterface;
export declare function CustomerDataAttributeMetadataInterfaceToJSON(value?: CustomerDataAttributeMetadataInterface | null): any;
