/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 * Interface StockItem
 * @export
 * @interface CatalogInventoryDataStockItemInterface
 */
export interface CatalogInventoryDataStockItemInterface {
    /**
     *
     * @type {number}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    itemId?: number;
    /**
     *
     * @type {number}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    productId?: number;
    /**
     * Stock identifier
     * @type {number}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    stockId?: number;
    /**
     *
     * @type {number}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    qty: number;
    /**
     * Stock Availability
     * @type {boolean}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    isInStock: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    isQtyDecimal: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    showDefaultNotificationMessage: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    useConfigMinQty: boolean;
    /**
     * Minimal quantity available for item status in stock
     * @type {number}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    minQty: number;
    /**
     *
     * @type {number}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    useConfigMinSaleQty: number;
    /**
     * Minimum Qty Allowed in Shopping Cart or NULL when there is no limitation
     * @type {number}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    minSaleQty: number;
    /**
     *
     * @type {boolean}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    useConfigMaxSaleQty: boolean;
    /**
     * Maximum Qty Allowed in Shopping Cart data wrapper
     * @type {number}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    maxSaleQty: number;
    /**
     *
     * @type {boolean}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    useConfigBackorders: boolean;
    /**
     * Backorders status
     * @type {number}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    backorders: number;
    /**
     *
     * @type {boolean}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    useConfigNotifyStockQty: boolean;
    /**
     * Notify for Quantity Below data wrapper
     * @type {number}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    notifyStockQty: number;
    /**
     *
     * @type {boolean}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    useConfigQtyIncrements: boolean;
    /**
     * Quantity Increments data wrapper
     * @type {number}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    qtyIncrements: number;
    /**
     *
     * @type {boolean}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    useConfigEnableQtyInc: boolean;
    /**
     * Whether Quantity Increments is enabled
     * @type {boolean}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    enableQtyIncrements: boolean;
    /**
     *
     * @type {boolean}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    useConfigManageStock: boolean;
    /**
     * Can Manage Stock
     * @type {boolean}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    manageStock: boolean;
    /**
     *
     * @type {string}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    lowStockDate: string;
    /**
     *
     * @type {boolean}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    isDecimalDivided: boolean;
    /**
     *
     * @type {number}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    stockStatusChangedAuto: number;
    /**
     * ExtensionInterface class for @see \Magento\CatalogInventory\Api\Data\StockItemInterface
     * @type {object}
     * @memberof CatalogInventoryDataStockItemInterface
     */
    extensionAttributes?: object;
}
/**
 * Check if a given object implements the CatalogInventoryDataStockItemInterface interface.
 */
export declare function instanceOfCatalogInventoryDataStockItemInterface(value: object): boolean;
export declare function CatalogInventoryDataStockItemInterfaceFromJSON(json: any): CatalogInventoryDataStockItemInterface;
export declare function CatalogInventoryDataStockItemInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogInventoryDataStockItemInterface;
export declare function CatalogInventoryDataStockItemInterfaceToJSON(value?: CatalogInventoryDataStockItemInterface | null): any;
