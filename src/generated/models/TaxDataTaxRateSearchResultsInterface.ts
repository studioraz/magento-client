/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FrameworkSearchCriteriaInterface } from './FrameworkSearchCriteriaInterface';
import {
    FrameworkSearchCriteriaInterfaceFromJSON,
    FrameworkSearchCriteriaInterfaceFromJSONTyped,
    FrameworkSearchCriteriaInterfaceToJSON,
} from './FrameworkSearchCriteriaInterface';
import type { TaxDataTaxRateInterface } from './TaxDataTaxRateInterface';
import {
    TaxDataTaxRateInterfaceFromJSON,
    TaxDataTaxRateInterfaceFromJSONTyped,
    TaxDataTaxRateInterfaceToJSON,
} from './TaxDataTaxRateInterface';

/**
 * Interface for tax rate search results.
 * @export
 * @interface TaxDataTaxRateSearchResultsInterface
 */
export interface TaxDataTaxRateSearchResultsInterface {
    /**
     * Items
     * @type {Array<TaxDataTaxRateInterface>}
     * @memberof TaxDataTaxRateSearchResultsInterface
     */
    items: Array<TaxDataTaxRateInterface>;
    /**
     * 
     * @type {FrameworkSearchCriteriaInterface}
     * @memberof TaxDataTaxRateSearchResultsInterface
     */
    searchCriteria: FrameworkSearchCriteriaInterface;
    /**
     * Total count.
     * @type {number}
     * @memberof TaxDataTaxRateSearchResultsInterface
     */
    totalCount: number;
}

/**
 * Check if a given object implements the TaxDataTaxRateSearchResultsInterface interface.
 */
export function instanceOfTaxDataTaxRateSearchResultsInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "items" in value;
    isInstance = isInstance && "searchCriteria" in value;
    isInstance = isInstance && "totalCount" in value;

    return isInstance;
}

export function TaxDataTaxRateSearchResultsInterfaceFromJSON(json: any): TaxDataTaxRateSearchResultsInterface {
    return TaxDataTaxRateSearchResultsInterfaceFromJSONTyped(json, false);
}

export function TaxDataTaxRateSearchResultsInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): TaxDataTaxRateSearchResultsInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(TaxDataTaxRateInterfaceFromJSON)),
        'searchCriteria': FrameworkSearchCriteriaInterfaceFromJSON(json['search_criteria']),
        'totalCount': json['total_count'],
    };
}

export function TaxDataTaxRateSearchResultsInterfaceToJSON(value?: TaxDataTaxRateSearchResultsInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': ((value.items as Array<any>).map(TaxDataTaxRateInterfaceToJSON)),
        'search_criteria': FrameworkSearchCriteriaInterfaceToJSON(value.searchCriteria),
        'total_count': value.totalCount,
    };
}

