/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { CatalogDataProductRenderButtonInterface } from './CatalogDataProductRenderButtonInterface';
import type { CatalogDataProductRenderExtensionInterface } from './CatalogDataProductRenderExtensionInterface';
import type { CatalogDataProductRenderImageInterface } from './CatalogDataProductRenderImageInterface';
import type { CatalogDataProductRenderPriceInfoInterface } from './CatalogDataProductRenderPriceInfoInterface';
/**
 * Represents Data Object which holds enough information to render product This information is put into part as Add To Cart or Add to Compare Data or Price Data
 * @export
 * @interface CatalogDataProductRenderInterface
 */
export interface CatalogDataProductRenderInterface {
    /**
     *
     * @type {CatalogDataProductRenderButtonInterface}
     * @memberof CatalogDataProductRenderInterface
     */
    addToCartButton: CatalogDataProductRenderButtonInterface;
    /**
     *
     * @type {CatalogDataProductRenderButtonInterface}
     * @memberof CatalogDataProductRenderInterface
     */
    addToCompareButton: CatalogDataProductRenderButtonInterface;
    /**
     *
     * @type {CatalogDataProductRenderPriceInfoInterface}
     * @memberof CatalogDataProductRenderInterface
     */
    priceInfo: CatalogDataProductRenderPriceInfoInterface;
    /**
     * Enough information, that needed to render image on front
     * @type {Array<CatalogDataProductRenderImageInterface>}
     * @memberof CatalogDataProductRenderInterface
     */
    images: Array<CatalogDataProductRenderImageInterface>;
    /**
     * Product url
     * @type {string}
     * @memberof CatalogDataProductRenderInterface
     */
    url: string;
    /**
     * Product identifier
     * @type {number}
     * @memberof CatalogDataProductRenderInterface
     */
    id: number;
    /**
     * Product name
     * @type {string}
     * @memberof CatalogDataProductRenderInterface
     */
    name: string;
    /**
     * Product type. Such as bundle, grouped, simple, etc...
     * @type {string}
     * @memberof CatalogDataProductRenderInterface
     */
    type: string;
    /**
     * Information about product saleability (In Stock)
     * @type {string}
     * @memberof CatalogDataProductRenderInterface
     */
    isSalable: string;
    /**
     * Information about current store id or requested store id
     * @type {number}
     * @memberof CatalogDataProductRenderInterface
     */
    storeId: number;
    /**
     * Current or desired currency code to product
     * @type {string}
     * @memberof CatalogDataProductRenderInterface
     */
    currencyCode: string;
    /**
     *
     * @type {CatalogDataProductRenderExtensionInterface}
     * @memberof CatalogDataProductRenderInterface
     */
    extensionAttributes: CatalogDataProductRenderExtensionInterface;
}
/**
 * Check if a given object implements the CatalogDataProductRenderInterface interface.
 */
export declare function instanceOfCatalogDataProductRenderInterface(value: object): boolean;
export declare function CatalogDataProductRenderInterfaceFromJSON(json: any): CatalogDataProductRenderInterface;
export declare function CatalogDataProductRenderInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogDataProductRenderInterface;
export declare function CatalogDataProductRenderInterfaceToJSON(value?: CatalogDataProductRenderInterface | null): any;
