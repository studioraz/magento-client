/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Represents "is product salable" result interface.
 * @export
 * @interface InventorySalesApiDataIsProductSalableResultInterface
 */
export interface InventorySalesApiDataIsProductSalableResultInterface {
    /**
     * Product sku from result.
     * @type {string}
     * @memberof InventorySalesApiDataIsProductSalableResultInterface
     */
    sku: string;
    /**
     * Stock id from result.
     * @type {number}
     * @memberof InventorySalesApiDataIsProductSalableResultInterface
     */
    stockId: number;
    /**
     * Is salable result.
     * @type {boolean}
     * @memberof InventorySalesApiDataIsProductSalableResultInterface
     */
    salable: boolean;
    /**
     * ExtensionInterface class for @see \Magento\InventorySalesApi\Api\Data\IsProductSalableResultInterface
     * @type {object}
     * @memberof InventorySalesApiDataIsProductSalableResultInterface
     */
    extensionAttributes?: object;
}

/**
 * Check if a given object implements the InventorySalesApiDataIsProductSalableResultInterface interface.
 */
export function instanceOfInventorySalesApiDataIsProductSalableResultInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "sku" in value;
    isInstance = isInstance && "stockId" in value;
    isInstance = isInstance && "salable" in value;

    return isInstance;
}

export function InventorySalesApiDataIsProductSalableResultInterfaceFromJSON(json: any): InventorySalesApiDataIsProductSalableResultInterface {
    return InventorySalesApiDataIsProductSalableResultInterfaceFromJSONTyped(json, false);
}

export function InventorySalesApiDataIsProductSalableResultInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): InventorySalesApiDataIsProductSalableResultInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sku': json['sku'],
        'stockId': json['stock_id'],
        'salable': json['salable'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}

export function InventorySalesApiDataIsProductSalableResultInterfaceToJSON(value?: InventorySalesApiDataIsProductSalableResultInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sku': value.sku,
        'stock_id': value.stockId,
        'salable': value.salable,
        'extension_attributes': value.extensionAttributes,
    };
}

