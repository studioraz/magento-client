/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Invoice comment interface. An invoice is a record of the receipt of payment for an order. An invoice can include comments that detail the invoice history.
 * @export
 * @interface SalesDataInvoiceCommentInterface
 */
export interface SalesDataInvoiceCommentInterface {
    /**
     * Is-customer-notified flag value.
     * @type {number}
     * @memberof SalesDataInvoiceCommentInterface
     */
    isCustomerNotified: number;
    /**
     * Parent ID.
     * @type {number}
     * @memberof SalesDataInvoiceCommentInterface
     */
    parentId: number;
    /**
     * ExtensionInterface class for @see \Magento\Sales\Api\Data\InvoiceCommentInterface
     * @type {object}
     * @memberof SalesDataInvoiceCommentInterface
     */
    extensionAttributes?: object;
    /**
     * Comment.
     * @type {string}
     * @memberof SalesDataInvoiceCommentInterface
     */
    comment: string;
    /**
     * Is-visible-on-storefront flag value.
     * @type {number}
     * @memberof SalesDataInvoiceCommentInterface
     */
    isVisibleOnFront: number;
    /**
     * Created-at timestamp.
     * @type {string}
     * @memberof SalesDataInvoiceCommentInterface
     */
    createdAt?: string;
    /**
     * Invoice ID.
     * @type {number}
     * @memberof SalesDataInvoiceCommentInterface
     */
    entityId?: number;
}

/**
 * Check if a given object implements the SalesDataInvoiceCommentInterface interface.
 */
export function instanceOfSalesDataInvoiceCommentInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "isCustomerNotified" in value;
    isInstance = isInstance && "parentId" in value;
    isInstance = isInstance && "comment" in value;
    isInstance = isInstance && "isVisibleOnFront" in value;

    return isInstance;
}

export function SalesDataInvoiceCommentInterfaceFromJSON(json: any): SalesDataInvoiceCommentInterface {
    return SalesDataInvoiceCommentInterfaceFromJSONTyped(json, false);
}

export function SalesDataInvoiceCommentInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): SalesDataInvoiceCommentInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'isCustomerNotified': json['is_customer_notified'],
        'parentId': json['parent_id'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
        'comment': json['comment'],
        'isVisibleOnFront': json['is_visible_on_front'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'entityId': !exists(json, 'entity_id') ? undefined : json['entity_id'],
    };
}

export function SalesDataInvoiceCommentInterfaceToJSON(value?: SalesDataInvoiceCommentInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'is_customer_notified': value.isCustomerNotified,
        'parent_id': value.parentId,
        'extension_attributes': value.extensionAttributes,
        'comment': value.comment,
        'is_visible_on_front': value.isVisibleOnFront,
        'created_at': value.createdAt,
        'entity_id': value.entityId,
    };
}

