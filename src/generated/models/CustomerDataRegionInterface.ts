/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Customer address region interface.
 * @export
 * @interface CustomerDataRegionInterface
 */
export interface CustomerDataRegionInterface {
    /**
     * Region code
     * @type {string}
     * @memberof CustomerDataRegionInterface
     */
    regionCode: string;
    /**
     * Region
     * @type {string}
     * @memberof CustomerDataRegionInterface
     */
    region: string;
    /**
     * Region id
     * @type {number}
     * @memberof CustomerDataRegionInterface
     */
    regionId: number;
    /**
     * ExtensionInterface class for @see \Magento\Customer\Api\Data\RegionInterface
     * @type {object}
     * @memberof CustomerDataRegionInterface
     */
    extensionAttributes?: object;
}

/**
 * Check if a given object implements the CustomerDataRegionInterface interface.
 */
export function instanceOfCustomerDataRegionInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "regionCode" in value;
    isInstance = isInstance && "region" in value;
    isInstance = isInstance && "regionId" in value;

    return isInstance;
}

export function CustomerDataRegionInterfaceFromJSON(json: any): CustomerDataRegionInterface {
    return CustomerDataRegionInterfaceFromJSONTyped(json, false);
}

export function CustomerDataRegionInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerDataRegionInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'regionCode': json['region_code'],
        'region': json['region'],
        'regionId': json['region_id'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}

export function CustomerDataRegionInterfaceToJSON(value?: CustomerDataRegionInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'region_code': value.regionCode,
        'region': value.region,
        'region_id': value.regionId,
        'extension_attributes': value.extensionAttributes,
    };
}

