"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorResponseToJSON = exports.ErrorResponseFromJSONTyped = exports.ErrorResponseFromJSON = exports.instanceOfErrorResponse = void 0;
var runtime_1 = require("../runtime");
var ErrorErrorsItem_1 = require("./ErrorErrorsItem");
var ErrorParametersItem_1 = require("./ErrorParametersItem");
/**
 * Check if a given object implements the ErrorResponse interface.
 */
function instanceOfErrorResponse(value) {
    var isInstance = true;
    isInstance = isInstance && "message" in value;
    return isInstance;
}
exports.instanceOfErrorResponse = instanceOfErrorResponse;
function ErrorResponseFromJSON(json) {
    return ErrorResponseFromJSONTyped(json, false);
}
exports.ErrorResponseFromJSON = ErrorResponseFromJSON;
function ErrorResponseFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'message': json['message'],
        'errors': !(0, runtime_1.exists)(json, 'errors') ? undefined : (json['errors'].map(ErrorErrorsItem_1.ErrorErrorsItemFromJSON)),
        'code': !(0, runtime_1.exists)(json, 'code') ? undefined : json['code'],
        'parameters': !(0, runtime_1.exists)(json, 'parameters') ? undefined : (json['parameters'].map(ErrorParametersItem_1.ErrorParametersItemFromJSON)),
        'trace': !(0, runtime_1.exists)(json, 'trace') ? undefined : json['trace'],
    };
}
exports.ErrorResponseFromJSONTyped = ErrorResponseFromJSONTyped;
function ErrorResponseToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'message': value.message,
        'errors': value.errors === undefined ? undefined : (value.errors.map(ErrorErrorsItem_1.ErrorErrorsItemToJSON)),
        'code': value.code,
        'parameters': value.parameters === undefined ? undefined : (value.parameters.map(ErrorParametersItem_1.ErrorParametersItemToJSON)),
        'trace': value.trace,
    };
}
exports.ErrorResponseToJSON = ErrorResponseToJSON;
//# sourceMappingURL=ErrorResponse.js.map