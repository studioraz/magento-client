"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CatalogDataProductAttributeMediaGalleryEntryExtensionInterfaceToJSON = exports.CatalogDataProductAttributeMediaGalleryEntryExtensionInterfaceFromJSONTyped = exports.CatalogDataProductAttributeMediaGalleryEntryExtensionInterfaceFromJSON = exports.instanceOfCatalogDataProductAttributeMediaGalleryEntryExtensionInterface = void 0;
var runtime_1 = require("../runtime");
var FrameworkDataVideoContentInterface_1 = require("./FrameworkDataVideoContentInterface");
/**
 * Check if a given object implements the CatalogDataProductAttributeMediaGalleryEntryExtensionInterface interface.
 */
function instanceOfCatalogDataProductAttributeMediaGalleryEntryExtensionInterface(value) {
    var isInstance = true;
    return isInstance;
}
exports.instanceOfCatalogDataProductAttributeMediaGalleryEntryExtensionInterface = instanceOfCatalogDataProductAttributeMediaGalleryEntryExtensionInterface;
function CatalogDataProductAttributeMediaGalleryEntryExtensionInterfaceFromJSON(json) {
    return CatalogDataProductAttributeMediaGalleryEntryExtensionInterfaceFromJSONTyped(json, false);
}
exports.CatalogDataProductAttributeMediaGalleryEntryExtensionInterfaceFromJSON = CatalogDataProductAttributeMediaGalleryEntryExtensionInterfaceFromJSON;
function CatalogDataProductAttributeMediaGalleryEntryExtensionInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'videoContent': !(0, runtime_1.exists)(json, 'video_content') ? undefined : (0, FrameworkDataVideoContentInterface_1.FrameworkDataVideoContentInterfaceFromJSON)(json['video_content']),
    };
}
exports.CatalogDataProductAttributeMediaGalleryEntryExtensionInterfaceFromJSONTyped = CatalogDataProductAttributeMediaGalleryEntryExtensionInterfaceFromJSONTyped;
function CatalogDataProductAttributeMediaGalleryEntryExtensionInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'video_content': (0, FrameworkDataVideoContentInterface_1.FrameworkDataVideoContentInterfaceToJSON)(value.videoContent),
    };
}
exports.CatalogDataProductAttributeMediaGalleryEntryExtensionInterfaceToJSON = CatalogDataProductAttributeMediaGalleryEntryExtensionInterfaceToJSON;
//# sourceMappingURL=CatalogDataProductAttributeMediaGalleryEntryExtensionInterface.js.map