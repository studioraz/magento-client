/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Gateway vault payment token interface.
 * @export
 * @interface VaultDataPaymentTokenInterface
 */
export interface VaultDataPaymentTokenInterface {
    /**
     * Entity ID.
     * @type {number}
     * @memberof VaultDataPaymentTokenInterface
     */
    entityId?: number;
    /**
     * Customer ID.
     * @type {number}
     * @memberof VaultDataPaymentTokenInterface
     */
    customerId?: number;
    /**
     * Public hash
     * @type {string}
     * @memberof VaultDataPaymentTokenInterface
     */
    publicHash: string;
    /**
     * Payment method code
     * @type {string}
     * @memberof VaultDataPaymentTokenInterface
     */
    paymentMethodCode: string;
    /**
     * Type
     * @type {string}
     * @memberof VaultDataPaymentTokenInterface
     */
    type: string;
    /**
     * Token creation timestamp
     * @type {string}
     * @memberof VaultDataPaymentTokenInterface
     */
    createdAt?: string;
    /**
     * Token expiration timestamp
     * @type {string}
     * @memberof VaultDataPaymentTokenInterface
     */
    expiresAt?: string;
    /**
     * Gateway token ID
     * @type {string}
     * @memberof VaultDataPaymentTokenInterface
     */
    gatewayToken: string;
    /**
     * Token details
     * @type {string}
     * @memberof VaultDataPaymentTokenInterface
     */
    tokenDetails: string;
    /**
     * Is active.
     * @type {boolean}
     * @memberof VaultDataPaymentTokenInterface
     */
    isActive: boolean;
    /**
     * Is visible.
     * @type {boolean}
     * @memberof VaultDataPaymentTokenInterface
     */
    isVisible: boolean;
}

/**
 * Check if a given object implements the VaultDataPaymentTokenInterface interface.
 */
export function instanceOfVaultDataPaymentTokenInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "publicHash" in value;
    isInstance = isInstance && "paymentMethodCode" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "gatewayToken" in value;
    isInstance = isInstance && "tokenDetails" in value;
    isInstance = isInstance && "isActive" in value;
    isInstance = isInstance && "isVisible" in value;

    return isInstance;
}

export function VaultDataPaymentTokenInterfaceFromJSON(json: any): VaultDataPaymentTokenInterface {
    return VaultDataPaymentTokenInterfaceFromJSONTyped(json, false);
}

export function VaultDataPaymentTokenInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): VaultDataPaymentTokenInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'entityId': !exists(json, 'entity_id') ? undefined : json['entity_id'],
        'customerId': !exists(json, 'customer_id') ? undefined : json['customer_id'],
        'publicHash': json['public_hash'],
        'paymentMethodCode': json['payment_method_code'],
        'type': json['type'],
        'createdAt': !exists(json, 'created_at') ? undefined : json['created_at'],
        'expiresAt': !exists(json, 'expires_at') ? undefined : json['expires_at'],
        'gatewayToken': json['gateway_token'],
        'tokenDetails': json['token_details'],
        'isActive': json['is_active'],
        'isVisible': json['is_visible'],
    };
}

export function VaultDataPaymentTokenInterfaceToJSON(value?: VaultDataPaymentTokenInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'entity_id': value.entityId,
        'customer_id': value.customerId,
        'public_hash': value.publicHash,
        'payment_method_code': value.paymentMethodCode,
        'type': value.type,
        'created_at': value.createdAt,
        'expires_at': value.expiresAt,
        'gateway_token': value.gatewayToken,
        'token_details': value.tokenDetails,
        'is_active': value.isActive,
        'is_visible': value.isVisible,
    };
}

