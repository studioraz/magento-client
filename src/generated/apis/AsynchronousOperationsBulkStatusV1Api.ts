/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AsynchronousOperationsDataBulkOperationsStatusInterface,
  AsynchronousOperationsDataDetailedBulkOperationsStatusInterface,
  ErrorResponse,
} from '../models';
import {
    AsynchronousOperationsDataBulkOperationsStatusInterfaceFromJSON,
    AsynchronousOperationsDataBulkOperationsStatusInterfaceToJSON,
    AsynchronousOperationsDataDetailedBulkOperationsStatusInterfaceFromJSON,
    AsynchronousOperationsDataDetailedBulkOperationsStatusInterfaceToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
} from '../models';

export interface GetV1BulkBulkUuidDetailedstatusRequest {
    bulkUuid: string;
}

export interface GetV1BulkBulkUuidOperationstatusStatusRequest {
    bulkUuid: string;
    status: number;
}

export interface GetV1BulkBulkUuidStatusRequest {
    bulkUuid: string;
}

/**
 * 
 */
export class AsynchronousOperationsBulkStatusV1Api extends runtime.BaseAPI {

    /**
     * Get Bulk summary data with list of operations items full data.
     */
    async getV1BulkBulkUuidDetailedstatusRaw(requestParameters: GetV1BulkBulkUuidDetailedstatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AsynchronousOperationsDataDetailedBulkOperationsStatusInterface>> {
        if (requestParameters.bulkUuid === null || requestParameters.bulkUuid === undefined) {
            throw new runtime.RequiredError('bulkUuid','Required parameter requestParameters.bulkUuid was null or undefined when calling getV1BulkBulkUuidDetailedstatus.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/V1/bulk/{bulkUuid}/detailed-status`.replace(`{${"bulkUuid"}}`, encodeURIComponent(String(requestParameters.bulkUuid))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AsynchronousOperationsDataDetailedBulkOperationsStatusInterfaceFromJSON(jsonValue));
    }

    /**
     * Get Bulk summary data with list of operations items full data.
     */
    async getV1BulkBulkUuidDetailedstatus(requestParameters: GetV1BulkBulkUuidDetailedstatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AsynchronousOperationsDataDetailedBulkOperationsStatusInterface> {
        const response = await this.getV1BulkBulkUuidDetailedstatusRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get operations count by bulk uuid and status.
     */
    async getV1BulkBulkUuidOperationstatusStatusRaw(requestParameters: GetV1BulkBulkUuidOperationstatusStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<number>> {
        if (requestParameters.bulkUuid === null || requestParameters.bulkUuid === undefined) {
            throw new runtime.RequiredError('bulkUuid','Required parameter requestParameters.bulkUuid was null or undefined when calling getV1BulkBulkUuidOperationstatusStatus.');
        }

        if (requestParameters.status === null || requestParameters.status === undefined) {
            throw new runtime.RequiredError('status','Required parameter requestParameters.status was null or undefined when calling getV1BulkBulkUuidOperationstatusStatus.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/V1/bulk/{bulkUuid}/operation-status/{status}`.replace(`{${"bulkUuid"}}`, encodeURIComponent(String(requestParameters.bulkUuid))).replace(`{${"status"}}`, encodeURIComponent(String(requestParameters.status))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<number>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Get operations count by bulk uuid and status.
     */
    async getV1BulkBulkUuidOperationstatusStatus(requestParameters: GetV1BulkBulkUuidOperationstatusStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<number> {
        const response = await this.getV1BulkBulkUuidOperationstatusStatusRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get Bulk summary data with list of operations items short data.
     */
    async getV1BulkBulkUuidStatusRaw(requestParameters: GetV1BulkBulkUuidStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AsynchronousOperationsDataBulkOperationsStatusInterface>> {
        if (requestParameters.bulkUuid === null || requestParameters.bulkUuid === undefined) {
            throw new runtime.RequiredError('bulkUuid','Required parameter requestParameters.bulkUuid was null or undefined when calling getV1BulkBulkUuidStatus.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/V1/bulk/{bulkUuid}/status`.replace(`{${"bulkUuid"}}`, encodeURIComponent(String(requestParameters.bulkUuid))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AsynchronousOperationsDataBulkOperationsStatusInterfaceFromJSON(jsonValue));
    }

    /**
     * Get Bulk summary data with list of operations items short data.
     */
    async getV1BulkBulkUuidStatus(requestParameters: GetV1BulkBulkUuidStatusRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AsynchronousOperationsDataBulkOperationsStatusInterface> {
        const response = await this.getV1BulkBulkUuidStatusRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
