/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CatalogDataProductTierPriceExtensionInterface } from './CatalogDataProductTierPriceExtensionInterface';
import {
    CatalogDataProductTierPriceExtensionInterfaceFromJSON,
    CatalogDataProductTierPriceExtensionInterfaceFromJSONTyped,
    CatalogDataProductTierPriceExtensionInterfaceToJSON,
} from './CatalogDataProductTierPriceExtensionInterface';

/**
 * 
 * @export
 * @interface CatalogDataProductTierPriceInterface
 */
export interface CatalogDataProductTierPriceInterface {
    /**
     * Customer group id
     * @type {number}
     * @memberof CatalogDataProductTierPriceInterface
     */
    customerGroupId: number;
    /**
     * Tier qty
     * @type {number}
     * @memberof CatalogDataProductTierPriceInterface
     */
    qty: number;
    /**
     * Price value
     * @type {number}
     * @memberof CatalogDataProductTierPriceInterface
     */
    value: number;
    /**
     * 
     * @type {CatalogDataProductTierPriceExtensionInterface}
     * @memberof CatalogDataProductTierPriceInterface
     */
    extensionAttributes?: CatalogDataProductTierPriceExtensionInterface;
}

/**
 * Check if a given object implements the CatalogDataProductTierPriceInterface interface.
 */
export function instanceOfCatalogDataProductTierPriceInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "customerGroupId" in value;
    isInstance = isInstance && "qty" in value;
    isInstance = isInstance && "value" in value;

    return isInstance;
}

export function CatalogDataProductTierPriceInterfaceFromJSON(json: any): CatalogDataProductTierPriceInterface {
    return CatalogDataProductTierPriceInterfaceFromJSONTyped(json, false);
}

export function CatalogDataProductTierPriceInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogDataProductTierPriceInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'customerGroupId': json['customer_group_id'],
        'qty': json['qty'],
        'value': json['value'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : CatalogDataProductTierPriceExtensionInterfaceFromJSON(json['extension_attributes']),
    };
}

export function CatalogDataProductTierPriceInterfaceToJSON(value?: CatalogDataProductTierPriceInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'customer_group_id': value.customerGroupId,
        'qty': value.qty,
        'value': value.value,
        'extension_attributes': CatalogDataProductTierPriceExtensionInterfaceToJSON(value.extensionAttributes),
    };
}

