/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Price interface.
 * @export
 * @interface CatalogDataBasePriceInterface
 */
export interface CatalogDataBasePriceInterface {
    /**
     * Price.
     * @type {number}
     * @memberof CatalogDataBasePriceInterface
     */
    price: number;
    /**
     * Store id.
     * @type {number}
     * @memberof CatalogDataBasePriceInterface
     */
    storeId: number;
    /**
     * SKU.
     * @type {string}
     * @memberof CatalogDataBasePriceInterface
     */
    sku: string;
    /**
     * ExtensionInterface class for @see \Magento\Catalog\Api\Data\BasePriceInterface
     * @type {object}
     * @memberof CatalogDataBasePriceInterface
     */
    extensionAttributes?: object;
}

/**
 * Check if a given object implements the CatalogDataBasePriceInterface interface.
 */
export function instanceOfCatalogDataBasePriceInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "price" in value;
    isInstance = isInstance && "storeId" in value;
    isInstance = isInstance && "sku" in value;

    return isInstance;
}

export function CatalogDataBasePriceInterfaceFromJSON(json: any): CatalogDataBasePriceInterface {
    return CatalogDataBasePriceInterfaceFromJSONTyped(json, false);
}

export function CatalogDataBasePriceInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogDataBasePriceInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'price': json['price'],
        'storeId': json['store_id'],
        'sku': json['sku'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}

export function CatalogDataBasePriceInterfaceToJSON(value?: CatalogDataBasePriceInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'price': value.price,
        'store_id': value.storeId,
        'sku': value.sku,
        'extension_attributes': value.extensionAttributes,
    };
}

