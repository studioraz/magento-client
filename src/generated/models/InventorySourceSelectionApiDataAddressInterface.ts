/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Data interface for shipping source or shipping destination
 * @export
 * @interface InventorySourceSelectionApiDataAddressInterface
 */
export interface InventorySourceSelectionApiDataAddressInterface {
    /**
     * Shipping country
     * @type {string}
     * @memberof InventorySourceSelectionApiDataAddressInterface
     */
    country: string;
    /**
     * Shipping postcode
     * @type {string}
     * @memberof InventorySourceSelectionApiDataAddressInterface
     */
    postcode: string;
    /**
     * Shipping street address
     * @type {string}
     * @memberof InventorySourceSelectionApiDataAddressInterface
     */
    street: string;
    /**
     * Shipping region
     * @type {string}
     * @memberof InventorySourceSelectionApiDataAddressInterface
     */
    region: string;
    /**
     * Shipping city
     * @type {string}
     * @memberof InventorySourceSelectionApiDataAddressInterface
     */
    city: string;
}

/**
 * Check if a given object implements the InventorySourceSelectionApiDataAddressInterface interface.
 */
export function instanceOfInventorySourceSelectionApiDataAddressInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "country" in value;
    isInstance = isInstance && "postcode" in value;
    isInstance = isInstance && "street" in value;
    isInstance = isInstance && "region" in value;
    isInstance = isInstance && "city" in value;

    return isInstance;
}

export function InventorySourceSelectionApiDataAddressInterfaceFromJSON(json: any): InventorySourceSelectionApiDataAddressInterface {
    return InventorySourceSelectionApiDataAddressInterfaceFromJSONTyped(json, false);
}

export function InventorySourceSelectionApiDataAddressInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): InventorySourceSelectionApiDataAddressInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'country': json['country'],
        'postcode': json['postcode'],
        'street': json['street'],
        'region': json['region'],
        'city': json['city'],
    };
}

export function InventorySourceSelectionApiDataAddressInterfaceToJSON(value?: InventorySourceSelectionApiDataAddressInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'country': value.country,
        'postcode': value.postcode,
        'street': value.street,
        'region': value.region,
        'city': value.city,
    };
}

