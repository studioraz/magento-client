/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FrameworkSearchFilterGroup } from './FrameworkSearchFilterGroup';
import {
    FrameworkSearchFilterGroupFromJSON,
    FrameworkSearchFilterGroupFromJSONTyped,
    FrameworkSearchFilterGroupToJSON,
} from './FrameworkSearchFilterGroup';
import type { FrameworkSortOrder } from './FrameworkSortOrder';
import {
    FrameworkSortOrderFromJSON,
    FrameworkSortOrderFromJSONTyped,
    FrameworkSortOrderToJSON,
} from './FrameworkSortOrder';

/**
 * Interface SearchCriteriaInterface
 * @export
 * @interface FrameworkSearchSearchCriteriaInterface
 */
export interface FrameworkSearchSearchCriteriaInterface {
    /**
     * 
     * @type {string}
     * @memberof FrameworkSearchSearchCriteriaInterface
     */
    requestName: string;
    /**
     * A list of filter groups.
     * @type {Array<FrameworkSearchFilterGroup>}
     * @memberof FrameworkSearchSearchCriteriaInterface
     */
    filterGroups: Array<FrameworkSearchFilterGroup>;
    /**
     * Sort order.
     * @type {Array<FrameworkSortOrder>}
     * @memberof FrameworkSearchSearchCriteriaInterface
     */
    sortOrders?: Array<FrameworkSortOrder>;
    /**
     * Page size.
     * @type {number}
     * @memberof FrameworkSearchSearchCriteriaInterface
     */
    pageSize?: number;
    /**
     * Current page.
     * @type {number}
     * @memberof FrameworkSearchSearchCriteriaInterface
     */
    currentPage?: number;
}

/**
 * Check if a given object implements the FrameworkSearchSearchCriteriaInterface interface.
 */
export function instanceOfFrameworkSearchSearchCriteriaInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "requestName" in value;
    isInstance = isInstance && "filterGroups" in value;

    return isInstance;
}

export function FrameworkSearchSearchCriteriaInterfaceFromJSON(json: any): FrameworkSearchSearchCriteriaInterface {
    return FrameworkSearchSearchCriteriaInterfaceFromJSONTyped(json, false);
}

export function FrameworkSearchSearchCriteriaInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): FrameworkSearchSearchCriteriaInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'requestName': json['request_name'],
        'filterGroups': ((json['filter_groups'] as Array<any>).map(FrameworkSearchFilterGroupFromJSON)),
        'sortOrders': !exists(json, 'sort_orders') ? undefined : ((json['sort_orders'] as Array<any>).map(FrameworkSortOrderFromJSON)),
        'pageSize': !exists(json, 'page_size') ? undefined : json['page_size'],
        'currentPage': !exists(json, 'current_page') ? undefined : json['current_page'],
    };
}

export function FrameworkSearchSearchCriteriaInterfaceToJSON(value?: FrameworkSearchSearchCriteriaInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'request_name': value.requestName,
        'filter_groups': ((value.filterGroups as Array<any>).map(FrameworkSearchFilterGroupToJSON)),
        'sort_orders': value.sortOrders === undefined ? undefined : ((value.sortOrders as Array<any>).map(FrameworkSortOrderToJSON)),
        'page_size': value.pageSize,
        'current_page': value.currentPage,
    };
}

