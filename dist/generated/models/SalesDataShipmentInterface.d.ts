/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { SalesDataShipmentCommentInterface } from './SalesDataShipmentCommentInterface';
import type { SalesDataShipmentExtensionInterface } from './SalesDataShipmentExtensionInterface';
import type { SalesDataShipmentItemInterface } from './SalesDataShipmentItemInterface';
import type { SalesDataShipmentPackageInterface } from './SalesDataShipmentPackageInterface';
import type { SalesDataShipmentTrackInterface } from './SalesDataShipmentTrackInterface';
/**
 * Shipment interface. A shipment is a delivery package that contains products. A shipment document accompanies the shipment. This document lists the products and their quantities in the delivery package.
 * @export
 * @interface SalesDataShipmentInterface
 */
export interface SalesDataShipmentInterface {
    /**
     * Billing address ID.
     * @type {number}
     * @memberof SalesDataShipmentInterface
     */
    billingAddressId?: number;
    /**
     * Created-at timestamp.
     * @type {string}
     * @memberof SalesDataShipmentInterface
     */
    createdAt?: string;
    /**
     * Customer ID.
     * @type {number}
     * @memberof SalesDataShipmentInterface
     */
    customerId?: number;
    /**
     * Email-sent flag value.
     * @type {number}
     * @memberof SalesDataShipmentInterface
     */
    emailSent?: number;
    /**
     * Shipment ID.
     * @type {number}
     * @memberof SalesDataShipmentInterface
     */
    entityId?: number;
    /**
     * Increment ID.
     * @type {string}
     * @memberof SalesDataShipmentInterface
     */
    incrementId?: string;
    /**
     * Order ID.
     * @type {number}
     * @memberof SalesDataShipmentInterface
     */
    orderId: number;
    /**
     * Array of packages, if any. Otherwise, null.
     * @type {Array<SalesDataShipmentPackageInterface>}
     * @memberof SalesDataShipmentInterface
     */
    packages?: Array<SalesDataShipmentPackageInterface>;
    /**
     * Shipment status.
     * @type {number}
     * @memberof SalesDataShipmentInterface
     */
    shipmentStatus?: number;
    /**
     * Shipping address ID.
     * @type {number}
     * @memberof SalesDataShipmentInterface
     */
    shippingAddressId?: number;
    /**
     * Shipping label.
     * @type {string}
     * @memberof SalesDataShipmentInterface
     */
    shippingLabel?: string;
    /**
     * Store ID.
     * @type {number}
     * @memberof SalesDataShipmentInterface
     */
    storeId?: number;
    /**
     * Total quantity.
     * @type {number}
     * @memberof SalesDataShipmentInterface
     */
    totalQty?: number;
    /**
     * Total weight.
     * @type {number}
     * @memberof SalesDataShipmentInterface
     */
    totalWeight?: number;
    /**
     * Updated-at timestamp.
     * @type {string}
     * @memberof SalesDataShipmentInterface
     */
    updatedAt?: string;
    /**
     * Array of items.
     * @type {Array<SalesDataShipmentItemInterface>}
     * @memberof SalesDataShipmentInterface
     */
    items: Array<SalesDataShipmentItemInterface>;
    /**
     * Array of tracks.
     * @type {Array<SalesDataShipmentTrackInterface>}
     * @memberof SalesDataShipmentInterface
     */
    tracks: Array<SalesDataShipmentTrackInterface>;
    /**
     * Array of comments.
     * @type {Array<SalesDataShipmentCommentInterface>}
     * @memberof SalesDataShipmentInterface
     */
    comments: Array<SalesDataShipmentCommentInterface>;
    /**
     *
     * @type {SalesDataShipmentExtensionInterface}
     * @memberof SalesDataShipmentInterface
     */
    extensionAttributes?: SalesDataShipmentExtensionInterface;
}
/**
 * Check if a given object implements the SalesDataShipmentInterface interface.
 */
export declare function instanceOfSalesDataShipmentInterface(value: object): boolean;
export declare function SalesDataShipmentInterfaceFromJSON(json: any): SalesDataShipmentInterface;
export declare function SalesDataShipmentInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): SalesDataShipmentInterface;
export declare function SalesDataShipmentInterfaceToJSON(value?: SalesDataShipmentInterface | null): any;
