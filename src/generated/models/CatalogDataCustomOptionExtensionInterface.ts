/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FrameworkDataImageContentInterface } from './FrameworkDataImageContentInterface';
import {
    FrameworkDataImageContentInterfaceFromJSON,
    FrameworkDataImageContentInterfaceFromJSONTyped,
    FrameworkDataImageContentInterfaceToJSON,
} from './FrameworkDataImageContentInterface';

/**
 * ExtensionInterface class for @see \Magento\Catalog\Api\Data\CustomOptionInterface
 * @export
 * @interface CatalogDataCustomOptionExtensionInterface
 */
export interface CatalogDataCustomOptionExtensionInterface {
    /**
     * 
     * @type {FrameworkDataImageContentInterface}
     * @memberof CatalogDataCustomOptionExtensionInterface
     */
    fileInfo?: FrameworkDataImageContentInterface;
}

/**
 * Check if a given object implements the CatalogDataCustomOptionExtensionInterface interface.
 */
export function instanceOfCatalogDataCustomOptionExtensionInterface(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CatalogDataCustomOptionExtensionInterfaceFromJSON(json: any): CatalogDataCustomOptionExtensionInterface {
    return CatalogDataCustomOptionExtensionInterfaceFromJSONTyped(json, false);
}

export function CatalogDataCustomOptionExtensionInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogDataCustomOptionExtensionInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fileInfo': !exists(json, 'file_info') ? undefined : FrameworkDataImageContentInterfaceFromJSON(json['file_info']),
    };
}

export function CatalogDataCustomOptionExtensionInterfaceToJSON(value?: CatalogDataCustomOptionExtensionInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'file_info': FrameworkDataImageContentInterfaceToJSON(value.fileInfo),
    };
}

