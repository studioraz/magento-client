/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CustomerDataAddressInterface,
  ErrorResponse,
} from '../models';
import {
    CustomerDataAddressInterfaceFromJSON,
    CustomerDataAddressInterfaceToJSON,
    ErrorResponseFromJSON,
    ErrorResponseToJSON,
} from '../models';

export interface DeleteV1AddressesAddressIdRequest {
    addressId: number;
}

export interface GetV1CustomersAddressesAddressIdRequest {
    addressId: number;
}

/**
 * 
 */
export class CustomerAddressRepositoryV1Api extends runtime.BaseAPI {

    /**
     * Delete customer address by ID.
     */
    async deleteV1AddressesAddressIdRaw(requestParameters: DeleteV1AddressesAddressIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<boolean>> {
        if (requestParameters.addressId === null || requestParameters.addressId === undefined) {
            throw new runtime.RequiredError('addressId','Required parameter requestParameters.addressId was null or undefined when calling deleteV1AddressesAddressId.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/V1/addresses/{addressId}`.replace(`{${"addressId"}}`, encodeURIComponent(String(requestParameters.addressId))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        if (this.isJsonMime(response.headers.get('content-type'))) {
            return new runtime.JSONApiResponse<boolean>(response);
        } else {
            return new runtime.TextApiResponse(response) as any;
        }
    }

    /**
     * Delete customer address by ID.
     */
    async deleteV1AddressesAddressId(requestParameters: DeleteV1AddressesAddressIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<boolean> {
        const response = await this.deleteV1AddressesAddressIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Retrieve customer address.
     */
    async getV1CustomersAddressesAddressIdRaw(requestParameters: GetV1CustomersAddressesAddressIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CustomerDataAddressInterface>> {
        if (requestParameters.addressId === null || requestParameters.addressId === undefined) {
            throw new runtime.RequiredError('addressId','Required parameter requestParameters.addressId was null or undefined when calling getV1CustomersAddressesAddressId.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/V1/customers/addresses/{addressId}`.replace(`{${"addressId"}}`, encodeURIComponent(String(requestParameters.addressId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CustomerDataAddressInterfaceFromJSON(jsonValue));
    }

    /**
     * Retrieve customer address.
     */
    async getV1CustomersAddressesAddressId(requestParameters: GetV1CustomersAddressesAddressIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CustomerDataAddressInterface> {
        const response = await this.getV1CustomersAddressesAddressIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
