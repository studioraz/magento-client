/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FrameworkSearchAggregationInterface } from './FrameworkSearchAggregationInterface';
import {
    FrameworkSearchAggregationInterfaceFromJSON,
    FrameworkSearchAggregationInterfaceFromJSONTyped,
    FrameworkSearchAggregationInterfaceToJSON,
} from './FrameworkSearchAggregationInterface';
import type { FrameworkSearchDocumentInterface } from './FrameworkSearchDocumentInterface';
import {
    FrameworkSearchDocumentInterfaceFromJSON,
    FrameworkSearchDocumentInterfaceFromJSONTyped,
    FrameworkSearchDocumentInterfaceToJSON,
} from './FrameworkSearchDocumentInterface';
import type { FrameworkSearchSearchCriteriaInterface } from './FrameworkSearchSearchCriteriaInterface';
import {
    FrameworkSearchSearchCriteriaInterfaceFromJSON,
    FrameworkSearchSearchCriteriaInterfaceFromJSONTyped,
    FrameworkSearchSearchCriteriaInterfaceToJSON,
} from './FrameworkSearchSearchCriteriaInterface';

/**
 * Interface SearchResultInterface
 * @export
 * @interface FrameworkSearchSearchResultInterface
 */
export interface FrameworkSearchSearchResultInterface {
    /**
     * 
     * @type {Array<FrameworkSearchDocumentInterface>}
     * @memberof FrameworkSearchSearchResultInterface
     */
    items: Array<FrameworkSearchDocumentInterface>;
    /**
     * 
     * @type {FrameworkSearchAggregationInterface}
     * @memberof FrameworkSearchSearchResultInterface
     */
    aggregations: FrameworkSearchAggregationInterface;
    /**
     * 
     * @type {FrameworkSearchSearchCriteriaInterface}
     * @memberof FrameworkSearchSearchResultInterface
     */
    searchCriteria: FrameworkSearchSearchCriteriaInterface;
    /**
     * Total count.
     * @type {number}
     * @memberof FrameworkSearchSearchResultInterface
     */
    totalCount: number;
}

/**
 * Check if a given object implements the FrameworkSearchSearchResultInterface interface.
 */
export function instanceOfFrameworkSearchSearchResultInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "items" in value;
    isInstance = isInstance && "aggregations" in value;
    isInstance = isInstance && "searchCriteria" in value;
    isInstance = isInstance && "totalCount" in value;

    return isInstance;
}

export function FrameworkSearchSearchResultInterfaceFromJSON(json: any): FrameworkSearchSearchResultInterface {
    return FrameworkSearchSearchResultInterfaceFromJSONTyped(json, false);
}

export function FrameworkSearchSearchResultInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): FrameworkSearchSearchResultInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(FrameworkSearchDocumentInterfaceFromJSON)),
        'aggregations': FrameworkSearchAggregationInterfaceFromJSON(json['aggregations']),
        'searchCriteria': FrameworkSearchSearchCriteriaInterfaceFromJSON(json['search_criteria']),
        'totalCount': json['total_count'],
    };
}

export function FrameworkSearchSearchResultInterfaceToJSON(value?: FrameworkSearchSearchResultInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': ((value.items as Array<any>).map(FrameworkSearchDocumentInterfaceToJSON)),
        'aggregations': FrameworkSearchAggregationInterfaceToJSON(value.aggregations),
        'search_criteria': FrameworkSearchSearchCriteriaInterfaceToJSON(value.searchCriteria),
        'total_count': value.totalCount,
    };
}

