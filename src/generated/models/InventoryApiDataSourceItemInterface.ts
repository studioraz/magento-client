/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Represents amount of product on physical storage Entity id getter is missed because entity identifies by compound identifier (sku and source_code) Used fully qualified namespaces in annotations for proper work of WebApi request parser
 * @export
 * @interface InventoryApiDataSourceItemInterface
 */
export interface InventoryApiDataSourceItemInterface {
    /**
     * Source item sku
     * @type {string}
     * @memberof InventoryApiDataSourceItemInterface
     */
    sku?: string;
    /**
     * Source code
     * @type {string}
     * @memberof InventoryApiDataSourceItemInterface
     */
    sourceCode?: string;
    /**
     * Source item quantity
     * @type {number}
     * @memberof InventoryApiDataSourceItemInterface
     */
    quantity?: number;
    /**
     * Source item status (One of self::STATUS_*)
     * @type {number}
     * @memberof InventoryApiDataSourceItemInterface
     */
    status?: number;
    /**
     * ExtensionInterface class for @see \Magento\InventoryApi\Api\Data\SourceItemInterface
     * @type {object}
     * @memberof InventoryApiDataSourceItemInterface
     */
    extensionAttributes?: object;
}

/**
 * Check if a given object implements the InventoryApiDataSourceItemInterface interface.
 */
export function instanceOfInventoryApiDataSourceItemInterface(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InventoryApiDataSourceItemInterfaceFromJSON(json: any): InventoryApiDataSourceItemInterface {
    return InventoryApiDataSourceItemInterfaceFromJSONTyped(json, false);
}

export function InventoryApiDataSourceItemInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): InventoryApiDataSourceItemInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sku': !exists(json, 'sku') ? undefined : json['sku'],
        'sourceCode': !exists(json, 'source_code') ? undefined : json['source_code'],
        'quantity': !exists(json, 'quantity') ? undefined : json['quantity'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}

export function InventoryApiDataSourceItemInterfaceToJSON(value?: InventoryApiDataSourceItemInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sku': value.sku,
        'source_code': value.sourceCode,
        'quantity': value.quantity,
        'status': value.status,
        'extension_attributes': value.extensionAttributes,
    };
}

