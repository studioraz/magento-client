/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FrameworkSearchBucketInterface } from './FrameworkSearchBucketInterface';
import {
    FrameworkSearchBucketInterfaceFromJSON,
    FrameworkSearchBucketInterfaceFromJSONTyped,
    FrameworkSearchBucketInterfaceToJSON,
} from './FrameworkSearchBucketInterface';

/**
 * Interface Aggregation to get faceted data
 * @export
 * @interface FrameworkSearchAggregationInterface
 */
export interface FrameworkSearchAggregationInterface {
    /**
     * All Document fields
     * @type {Array<FrameworkSearchBucketInterface>}
     * @memberof FrameworkSearchAggregationInterface
     */
    buckets: Array<FrameworkSearchBucketInterface>;
    /**
     * Document field names
     * @type {Array<string>}
     * @memberof FrameworkSearchAggregationInterface
     */
    bucketNames: Array<string>;
}

/**
 * Check if a given object implements the FrameworkSearchAggregationInterface interface.
 */
export function instanceOfFrameworkSearchAggregationInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "buckets" in value;
    isInstance = isInstance && "bucketNames" in value;

    return isInstance;
}

export function FrameworkSearchAggregationInterfaceFromJSON(json: any): FrameworkSearchAggregationInterface {
    return FrameworkSearchAggregationInterfaceFromJSONTyped(json, false);
}

export function FrameworkSearchAggregationInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): FrameworkSearchAggregationInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'buckets': ((json['buckets'] as Array<any>).map(FrameworkSearchBucketInterfaceFromJSON)),
        'bucketNames': json['bucket_names'],
    };
}

export function FrameworkSearchAggregationInterfaceToJSON(value?: FrameworkSearchAggregationInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'buckets': ((value.buckets as Array<any>).map(FrameworkSearchBucketInterfaceToJSON)),
        'bucket_names': value.bucketNames,
    };
}

