/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CatalogDataProductCustomOptionValuesInterface
 */
export interface CatalogDataProductCustomOptionValuesInterface {
    /**
     * Option title
     * @type {string}
     * @memberof CatalogDataProductCustomOptionValuesInterface
     */
    title: string;
    /**
     * Sort order
     * @type {number}
     * @memberof CatalogDataProductCustomOptionValuesInterface
     */
    sortOrder: number;
    /**
     * Price
     * @type {number}
     * @memberof CatalogDataProductCustomOptionValuesInterface
     */
    price: number;
    /**
     * Price type
     * @type {string}
     * @memberof CatalogDataProductCustomOptionValuesInterface
     */
    priceType: string;
    /**
     * Sku
     * @type {string}
     * @memberof CatalogDataProductCustomOptionValuesInterface
     */
    sku?: string;
    /**
     * Option type id
     * @type {number}
     * @memberof CatalogDataProductCustomOptionValuesInterface
     */
    optionTypeId?: number;
}

/**
 * Check if a given object implements the CatalogDataProductCustomOptionValuesInterface interface.
 */
export function instanceOfCatalogDataProductCustomOptionValuesInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "sortOrder" in value;
    isInstance = isInstance && "price" in value;
    isInstance = isInstance && "priceType" in value;

    return isInstance;
}

export function CatalogDataProductCustomOptionValuesInterfaceFromJSON(json: any): CatalogDataProductCustomOptionValuesInterface {
    return CatalogDataProductCustomOptionValuesInterfaceFromJSONTyped(json, false);
}

export function CatalogDataProductCustomOptionValuesInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CatalogDataProductCustomOptionValuesInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': json['title'],
        'sortOrder': json['sort_order'],
        'price': json['price'],
        'priceType': json['price_type'],
        'sku': !exists(json, 'sku') ? undefined : json['sku'],
        'optionTypeId': !exists(json, 'option_type_id') ? undefined : json['option_type_id'],
    };
}

export function CatalogDataProductCustomOptionValuesInterfaceToJSON(value?: CatalogDataProductCustomOptionValuesInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'sort_order': value.sortOrder,
        'price': value.price,
        'price_type': value.priceType,
        'sku': value.sku,
        'option_type_id': value.optionTypeId,
    };
}

