/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GiftMessageDataMessageInterface } from './GiftMessageDataMessageInterface';
import {
    GiftMessageDataMessageInterfaceFromJSON,
    GiftMessageDataMessageInterfaceFromJSONTyped,
    GiftMessageDataMessageInterfaceToJSON,
} from './GiftMessageDataMessageInterface';

/**
 * ExtensionInterface class for @see \Magento\Quote\Api\Data\TotalsAdditionalDataInterface
 * @export
 * @interface QuoteDataTotalsAdditionalDataExtensionInterface
 */
export interface QuoteDataTotalsAdditionalDataExtensionInterface {
    /**
     * 
     * @type {Array<GiftMessageDataMessageInterface>}
     * @memberof QuoteDataTotalsAdditionalDataExtensionInterface
     */
    giftMessages?: Array<GiftMessageDataMessageInterface>;
}

/**
 * Check if a given object implements the QuoteDataTotalsAdditionalDataExtensionInterface interface.
 */
export function instanceOfQuoteDataTotalsAdditionalDataExtensionInterface(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function QuoteDataTotalsAdditionalDataExtensionInterfaceFromJSON(json: any): QuoteDataTotalsAdditionalDataExtensionInterface {
    return QuoteDataTotalsAdditionalDataExtensionInterfaceFromJSONTyped(json, false);
}

export function QuoteDataTotalsAdditionalDataExtensionInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): QuoteDataTotalsAdditionalDataExtensionInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'giftMessages': !exists(json, 'gift_messages') ? undefined : ((json['gift_messages'] as Array<any>).map(GiftMessageDataMessageInterfaceFromJSON)),
    };
}

export function QuoteDataTotalsAdditionalDataExtensionInterfaceToJSON(value?: QuoteDataTotalsAdditionalDataExtensionInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'gift_messages': value.giftMessages === undefined ? undefined : ((value.giftMessages as Array<any>).map(GiftMessageDataMessageInterfaceToJSON)),
    };
}

