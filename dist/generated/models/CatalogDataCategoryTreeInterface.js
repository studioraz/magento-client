"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CatalogDataCategoryTreeInterfaceToJSON = exports.CatalogDataCategoryTreeInterfaceFromJSONTyped = exports.CatalogDataCategoryTreeInterfaceFromJSON = exports.instanceOfCatalogDataCategoryTreeInterface = void 0;
var runtime_1 = require("../runtime");
/**
 * Check if a given object implements the CatalogDataCategoryTreeInterface interface.
 */
function instanceOfCatalogDataCategoryTreeInterface(value) {
    var isInstance = true;
    isInstance = isInstance && "parentId" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "isActive" in value;
    isInstance = isInstance && "position" in value;
    isInstance = isInstance && "level" in value;
    isInstance = isInstance && "productCount" in value;
    isInstance = isInstance && "childrenData" in value;
    return isInstance;
}
exports.instanceOfCatalogDataCategoryTreeInterface = instanceOfCatalogDataCategoryTreeInterface;
function CatalogDataCategoryTreeInterfaceFromJSON(json) {
    return CatalogDataCategoryTreeInterfaceFromJSONTyped(json, false);
}
exports.CatalogDataCategoryTreeInterfaceFromJSON = CatalogDataCategoryTreeInterfaceFromJSON;
function CatalogDataCategoryTreeInterfaceFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': !(0, runtime_1.exists)(json, 'id') ? undefined : json['id'],
        'parentId': json['parent_id'],
        'name': json['name'],
        'isActive': json['is_active'],
        'position': json['position'],
        'level': json['level'],
        'productCount': json['product_count'],
        'childrenData': (json['children_data'].map(CatalogDataCategoryTreeInterfaceFromJSON)),
    };
}
exports.CatalogDataCategoryTreeInterfaceFromJSONTyped = CatalogDataCategoryTreeInterfaceFromJSONTyped;
function CatalogDataCategoryTreeInterfaceToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'parent_id': value.parentId,
        'name': value.name,
        'is_active': value.isActive,
        'position': value.position,
        'level': value.level,
        'product_count': value.productCount,
        'children_data': (value.childrenData.map(CatalogDataCategoryTreeInterfaceToJSON)),
    };
}
exports.CatalogDataCategoryTreeInterfaceToJSON = CatalogDataCategoryTreeInterfaceToJSON;
//# sourceMappingURL=CatalogDataCategoryTreeInterface.js.map