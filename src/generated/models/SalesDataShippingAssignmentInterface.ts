/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SalesDataOrderItemInterface } from './SalesDataOrderItemInterface';
import {
    SalesDataOrderItemInterfaceFromJSON,
    SalesDataOrderItemInterfaceFromJSONTyped,
    SalesDataOrderItemInterfaceToJSON,
} from './SalesDataOrderItemInterface';
import type { SalesDataShippingInterface } from './SalesDataShippingInterface';
import {
    SalesDataShippingInterfaceFromJSON,
    SalesDataShippingInterfaceFromJSONTyped,
    SalesDataShippingInterfaceToJSON,
} from './SalesDataShippingInterface';

/**
 * Interface ShippingAssignmentInterface
 * @export
 * @interface SalesDataShippingAssignmentInterface
 */
export interface SalesDataShippingAssignmentInterface {
    /**
     * 
     * @type {SalesDataShippingInterface}
     * @memberof SalesDataShippingAssignmentInterface
     */
    shipping: SalesDataShippingInterface;
    /**
     * Order items of shipping assignment
     * @type {Array<SalesDataOrderItemInterface>}
     * @memberof SalesDataShippingAssignmentInterface
     */
    items: Array<SalesDataOrderItemInterface>;
    /**
     * Stock id
     * @type {number}
     * @memberof SalesDataShippingAssignmentInterface
     */
    stockId?: number;
    /**
     * ExtensionInterface class for @see \Magento\Sales\Api\Data\ShippingAssignmentInterface
     * @type {object}
     * @memberof SalesDataShippingAssignmentInterface
     */
    extensionAttributes?: object;
}

/**
 * Check if a given object implements the SalesDataShippingAssignmentInterface interface.
 */
export function instanceOfSalesDataShippingAssignmentInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "shipping" in value;
    isInstance = isInstance && "items" in value;

    return isInstance;
}

export function SalesDataShippingAssignmentInterfaceFromJSON(json: any): SalesDataShippingAssignmentInterface {
    return SalesDataShippingAssignmentInterfaceFromJSONTyped(json, false);
}

export function SalesDataShippingAssignmentInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): SalesDataShippingAssignmentInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'shipping': SalesDataShippingInterfaceFromJSON(json['shipping']),
        'items': ((json['items'] as Array<any>).map(SalesDataOrderItemInterfaceFromJSON)),
        'stockId': !exists(json, 'stock_id') ? undefined : json['stock_id'],
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}

export function SalesDataShippingAssignmentInterfaceToJSON(value?: SalesDataShippingAssignmentInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'shipping': SalesDataShippingInterfaceToJSON(value.shipping),
        'items': ((value.items as Array<any>).map(SalesDataOrderItemInterfaceToJSON)),
        'stock_id': value.stockId,
        'extension_attributes': value.extensionAttributes,
    };
}

