/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import type { CatalogDataPriceUpdateResultInterface, CatalogDataTierPriceInterface, PostV1ProductsTierpricesinformationRequest, PutV1ProductsTierpricesRequest } from '../models';
export interface PostV1ProductsTierpricesRequest {
    putV1ProductsTierpricesRequest?: PutV1ProductsTierpricesRequest;
}
export interface PostV1ProductsTierpricesdeleteRequest {
    putV1ProductsTierpricesRequest?: PutV1ProductsTierpricesRequest;
}
export interface PostV1ProductsTierpricesinformationOperationRequest {
    postV1ProductsTierpricesinformationRequest?: PostV1ProductsTierpricesinformationRequest;
}
export interface PutV1ProductsTierpricesOperationRequest {
    putV1ProductsTierpricesRequest?: PutV1ProductsTierpricesRequest;
}
/**
 *
 */
export declare class CatalogTierPriceStorageV1Api extends runtime.BaseAPI {
    /**
     * Add or update product prices. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.
     */
    postV1ProductsTierpricesRaw(requestParameters: PostV1ProductsTierpricesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CatalogDataPriceUpdateResultInterface>>>;
    /**
     * Add or update product prices. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from update list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.
     */
    postV1ProductsTierprices(requestParameters?: PostV1ProductsTierpricesRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CatalogDataPriceUpdateResultInterface>>;
    /**
     * Delete product tier prices. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from delete list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.
     */
    postV1ProductsTierpricesdeleteRaw(requestParameters: PostV1ProductsTierpricesdeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CatalogDataPriceUpdateResultInterface>>>;
    /**
     * Delete product tier prices. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from delete list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.
     */
    postV1ProductsTierpricesdelete(requestParameters?: PostV1ProductsTierpricesdeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CatalogDataPriceUpdateResultInterface>>;
    /**
     * Return product prices. In case of at least one of skus is not found exception will be thrown.
     */
    postV1ProductsTierpricesinformationRaw(requestParameters: PostV1ProductsTierpricesinformationOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CatalogDataTierPriceInterface>>>;
    /**
     * Return product prices. In case of at least one of skus is not found exception will be thrown.
     */
    postV1ProductsTierpricesinformation(requestParameters?: PostV1ProductsTierpricesinformationOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CatalogDataTierPriceInterface>>;
    /**
     * Remove existing tier prices and replace them with the new ones. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from replace list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.
     */
    putV1ProductsTierpricesRaw(requestParameters: PutV1ProductsTierpricesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<CatalogDataPriceUpdateResultInterface>>>;
    /**
     * Remove existing tier prices and replace them with the new ones. If any items will have invalid price, price type, website id, sku, customer group or quantity, they will be marked as failed and excluded from replace list and \\Magento\\Catalog\\Api\\Data\\PriceUpdateResultInterface[] with problem description will be returned. If there were no failed items during update empty array will be returned. If error occurred during the update exception will be thrown.
     */
    putV1ProductsTierprices(requestParameters?: PutV1ProductsTierpricesOperationRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<CatalogDataPriceUpdateResultInterface>>;
}
