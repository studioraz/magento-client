/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DirectoryDataExchangeRateInterface } from './DirectoryDataExchangeRateInterface';
import {
    DirectoryDataExchangeRateInterfaceFromJSON,
    DirectoryDataExchangeRateInterfaceFromJSONTyped,
    DirectoryDataExchangeRateInterfaceToJSON,
} from './DirectoryDataExchangeRateInterface';

/**
 * Currency Information interface.
 * @export
 * @interface DirectoryDataCurrencyInformationInterface
 */
export interface DirectoryDataCurrencyInformationInterface {
    /**
     * The base currency code for the store.
     * @type {string}
     * @memberof DirectoryDataCurrencyInformationInterface
     */
    baseCurrencyCode: string;
    /**
     * The currency symbol of the base currency for the store.
     * @type {string}
     * @memberof DirectoryDataCurrencyInformationInterface
     */
    baseCurrencySymbol: string;
    /**
     * The default display currency code for the store.
     * @type {string}
     * @memberof DirectoryDataCurrencyInformationInterface
     */
    defaultDisplayCurrencyCode: string;
    /**
     * The currency symbol of the default display currency for the store.
     * @type {string}
     * @memberof DirectoryDataCurrencyInformationInterface
     */
    defaultDisplayCurrencySymbol: string;
    /**
     * The list of allowed currency codes for the store.
     * @type {Array<string>}
     * @memberof DirectoryDataCurrencyInformationInterface
     */
    availableCurrencyCodes: Array<string>;
    /**
     * The list of exchange rate information for the store.
     * @type {Array<DirectoryDataExchangeRateInterface>}
     * @memberof DirectoryDataCurrencyInformationInterface
     */
    exchangeRates: Array<DirectoryDataExchangeRateInterface>;
    /**
     * ExtensionInterface class for @see \Magento\Directory\Api\Data\CurrencyInformationInterface
     * @type {object}
     * @memberof DirectoryDataCurrencyInformationInterface
     */
    extensionAttributes?: object;
}

/**
 * Check if a given object implements the DirectoryDataCurrencyInformationInterface interface.
 */
export function instanceOfDirectoryDataCurrencyInformationInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "baseCurrencyCode" in value;
    isInstance = isInstance && "baseCurrencySymbol" in value;
    isInstance = isInstance && "defaultDisplayCurrencyCode" in value;
    isInstance = isInstance && "defaultDisplayCurrencySymbol" in value;
    isInstance = isInstance && "availableCurrencyCodes" in value;
    isInstance = isInstance && "exchangeRates" in value;

    return isInstance;
}

export function DirectoryDataCurrencyInformationInterfaceFromJSON(json: any): DirectoryDataCurrencyInformationInterface {
    return DirectoryDataCurrencyInformationInterfaceFromJSONTyped(json, false);
}

export function DirectoryDataCurrencyInformationInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): DirectoryDataCurrencyInformationInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'baseCurrencyCode': json['base_currency_code'],
        'baseCurrencySymbol': json['base_currency_symbol'],
        'defaultDisplayCurrencyCode': json['default_display_currency_code'],
        'defaultDisplayCurrencySymbol': json['default_display_currency_symbol'],
        'availableCurrencyCodes': json['available_currency_codes'],
        'exchangeRates': ((json['exchange_rates'] as Array<any>).map(DirectoryDataExchangeRateInterfaceFromJSON)),
        'extensionAttributes': !exists(json, 'extension_attributes') ? undefined : json['extension_attributes'],
    };
}

export function DirectoryDataCurrencyInformationInterfaceToJSON(value?: DirectoryDataCurrencyInformationInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'base_currency_code': value.baseCurrencyCode,
        'base_currency_symbol': value.baseCurrencySymbol,
        'default_display_currency_code': value.defaultDisplayCurrencyCode,
        'default_display_currency_symbol': value.defaultDisplayCurrencySymbol,
        'available_currency_codes': value.availableCurrencyCodes,
        'exchange_rates': ((value.exchangeRates as Array<any>).map(DirectoryDataExchangeRateInterfaceToJSON)),
        'extension_attributes': value.extensionAttributes,
    };
}

