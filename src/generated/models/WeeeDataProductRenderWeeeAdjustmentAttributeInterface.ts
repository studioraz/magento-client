/* tslint:disable */
/* eslint-disable */
/**
 * Magento Community
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * List of all weee attributes, their amounts, etc.., that product has
 * @export
 * @interface WeeeDataProductRenderWeeeAdjustmentAttributeInterface
 */
export interface WeeeDataProductRenderWeeeAdjustmentAttributeInterface {
    /**
     * Weee attribute amount
     * @type {string}
     * @memberof WeeeDataProductRenderWeeeAdjustmentAttributeInterface
     */
    amount: string;
    /**
     * Tax which is calculated to fixed product tax attribute
     * @type {string}
     * @memberof WeeeDataProductRenderWeeeAdjustmentAttributeInterface
     */
    taxAmount: string;
    /**
     * Tax amount of weee attribute
     * @type {string}
     * @memberof WeeeDataProductRenderWeeeAdjustmentAttributeInterface
     */
    taxAmountInclTax: string;
    /**
     * Product amount exclude tax
     * @type {string}
     * @memberof WeeeDataProductRenderWeeeAdjustmentAttributeInterface
     */
    amountExclTax: string;
    /**
     * Weee attribute code
     * @type {string}
     * @memberof WeeeDataProductRenderWeeeAdjustmentAttributeInterface
     */
    attributeCode: string;
    /**
     * ExtensionInterface class for @see \Magento\Weee\Api\Data\ProductRender\WeeeAdjustmentAttributeInterface
     * @type {object}
     * @memberof WeeeDataProductRenderWeeeAdjustmentAttributeInterface
     */
    extensionAttributes: object;
}

/**
 * Check if a given object implements the WeeeDataProductRenderWeeeAdjustmentAttributeInterface interface.
 */
export function instanceOfWeeeDataProductRenderWeeeAdjustmentAttributeInterface(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "amount" in value;
    isInstance = isInstance && "taxAmount" in value;
    isInstance = isInstance && "taxAmountInclTax" in value;
    isInstance = isInstance && "amountExclTax" in value;
    isInstance = isInstance && "attributeCode" in value;
    isInstance = isInstance && "extensionAttributes" in value;

    return isInstance;
}

export function WeeeDataProductRenderWeeeAdjustmentAttributeInterfaceFromJSON(json: any): WeeeDataProductRenderWeeeAdjustmentAttributeInterface {
    return WeeeDataProductRenderWeeeAdjustmentAttributeInterfaceFromJSONTyped(json, false);
}

export function WeeeDataProductRenderWeeeAdjustmentAttributeInterfaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): WeeeDataProductRenderWeeeAdjustmentAttributeInterface {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'amount': json['amount'],
        'taxAmount': json['tax_amount'],
        'taxAmountInclTax': json['tax_amount_incl_tax'],
        'amountExclTax': json['amount_excl_tax'],
        'attributeCode': json['attribute_code'],
        'extensionAttributes': json['extension_attributes'],
    };
}

export function WeeeDataProductRenderWeeeAdjustmentAttributeInterfaceToJSON(value?: WeeeDataProductRenderWeeeAdjustmentAttributeInterface | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'amount': value.amount,
        'tax_amount': value.taxAmount,
        'tax_amount_incl_tax': value.taxAmountInclTax,
        'amount_excl_tax': value.amountExclTax,
        'attribute_code': value.attributeCode,
        'extension_attributes': value.extensionAttributes,
    };
}

